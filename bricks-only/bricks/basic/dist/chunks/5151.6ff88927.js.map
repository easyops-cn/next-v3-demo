{"version":3,"file":"chunks/5151.6ff88927.js","mappings":"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AAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,GAAI,GAAI,KAAM,GAAI,EAAG,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,EAAG,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,KAAM,EAAG,MACvgEC,GAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,MAAO,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,EAAG,OAAQ,KAC1hC,SAASC,GAAc1P,EAAM7N,GAC3B,IAAIwb,EAAM,MACV,IAAK,IAAIzQ,EAAI,EAAGK,EAASpL,EAAIoL,OAAQL,EAAIK,EAAQL,GAAK,EAAG,CAEvD,GADAyQ,GAAOxb,EAAI+K,GACPyQ,EAAM3N,EAAM,OAAO,EAEvB,GADA2N,GAAOxb,EAAI+K,EAAI,GACXyQ,GAAO3N,EAAM,OAAO,CAC1B,CACA,OAAO,CACT,CACA,SAAS2P,GAAkB3P,GACzB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MACRA,GAAQ,MACHA,GAAQ,KAAQqP,GAAwBO,KAAKjO,OAAOkO,aAAa7P,IAEnE0P,GAAc1P,EAAMwP,KAC7B,CACA,SAASM,GAAiB9P,GACxB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,EAAO,MACPA,EAAO,MACPA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MACRA,GAAQ,MACHA,GAAQ,KAAQuP,GAAmBK,KAAKjO,OAAOkO,aAAa7P,IAE9D0P,GAAc1P,EAAMwP,KAA+BE,GAAc1P,EAAMyP,MAChF,CACA,MAKMM,GAAW,IAAI3D,IAJV,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,WAKzT4D,GAAyB,IAAI5D,IAJzB,CAAC,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,UAK9F6D,GAA6B,IAAI7D,IAJzB,CAAC,OAAQ,cAKvB,SAAS8D,GAAeC,EAAMC,GAC5B,OAAOA,GAAqB,UAATD,GAA6B,SAATA,CACzC,CACA,SAASE,GAAqBF,EAAMC,GAClC,OAAOF,GAAeC,EAAMC,IAAaJ,GAAuBM,IAAIH,EACtE,CACA,SAASI,GAA6BJ,GACpC,OAAOF,GAA2BK,IAAIH,EACxC,CACA,SAASK,GAAyBL,EAAMC,GACtC,OAAOC,GAAqBF,EAAMC,IAAaG,GAA6BJ,EAC9E,CAOA,MAAMM,GAAsB,IAAIrE,IAAI,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,SAAU,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,QAAS,OAAQ,YAAa,OAAQ,UAa/dsE,GAAkB,IAalBC,GAAuB,KAGvBC,GAAeC,KAQfC,GAAY,GAed,MAAMC,GACJzgB,YAAY0gB,GACVvgB,KAAKwgB,IAAM,IAAI7E,IACf3b,KAAKygB,QAAU,IAAI9E,IACnB3b,KAAK0gB,UAAY,IAAI/E,IACrB3b,KAAKugB,MAAQA,CACf,EAEF,MAAMI,GACJ9gB,YAAY+gB,EAAQjB,GAClB3f,KAAK4gB,YAAS,EACd5gB,KAAK6gB,WAAa,GAClB7gB,KAAK2f,cAAW,EAChB3f,KAAK8gB,iBAAmB,IAAIzf,IAC5BrB,KAAK4gB,OAASA,EACd5gB,KAAK2f,SAAWA,CAClB,CACIoB,iBACF,OAjEc,EAiEN/gB,KAAKghB,eAAeT,OAAyB,CACvD,CACIU,iBACF,OAnEe,EAmEPjhB,KAAKkhB,wBAA2C,CAC1D,CACIC,iBACF,OAnEY,GAmEJnhB,KAAKohB,yBAAyC,CACxD,CACIC,uBACF,OArEmB,GAqEXrhB,KAAKohB,yBAAgD,CAC/D,CACIE,cACF,OAvEY,GAuEJthB,KAAKohB,yBAAyC,CACxD,CACIG,sCACF,MAAMhB,EAAQvgB,KAAKohB,wBACnB,OA3EY,GA2EJb,GAAuB,GAAkC,IAhFlD,EAgFsBA,EACvC,CACIiB,oBACF,IAAK,IAAI/U,EAAIzM,KAAK6gB,WAAW/T,OAAS,GAAIL,IAAK,CAC7C,MAAM,MACJ8T,GACEvgB,KAAK6gB,WAAWpU,GACpB,GAjFiB,IAiFb8T,EACF,OAAO,EAET,GAAY,IAARA,EACF,OAAO,CAEX,CACF,CACIkB,yBACF,OAhGe,EAgGPzhB,KAAKohB,yBAA4C,CAC3D,CACIM,0BACF,OAAO1hB,KAAK2hB,2BAA2B3hB,KAAKghB,eAC9C,CACAY,YAAYrB,GACV,OAAO,IAAID,GAAMC,EACnB,CACAsB,MAAMtB,GACJvgB,KAAK6gB,WAAWte,KAAKvC,KAAK4hB,YAAYrB,GACxC,CACAuB,OAEE,OADc9hB,KAAK6gB,WAAW5T,MACjBsT,KACf,CACAoB,2BAA2BI,GACzB,SAAwB,IAAdA,EAAMxB,QAAkDvgB,KAAK4gB,OAAOjB,UAjHhE,EAiH4EoC,EAAMxB,MAClG,CACAyB,YAAYzgB,EAAM0gB,EAAanF,GAC7B,IAAIiF,EAAQ/hB,KAAKghB,eACjB,GAxGmB,EAwGfiB,GAvGgB,GAuGoBA,EACtCjiB,KAAKkiB,0BAA0BH,EAAOxgB,EAAM0gB,EAAanF,GAxGvC,GAyGdmF,EACFF,EAAMrB,UAAUyB,IAAI5gB,GAEpBwgB,EAAMtB,QAAQ0B,IAAI5gB,GA7GH,EA+Gb0gB,GACFjiB,KAAKoiB,mBAAmBL,EAAOxgB,QAE5B,GAnHQ,EAmHJ0gB,EACT,IAAK,IAAIxV,EAAIzM,KAAK6gB,WAAW/T,OAAS,EAAGL,GAAK,IAC5CsV,EAAQ/hB,KAAK6gB,WAAWpU,GACxBzM,KAAKkiB,0BAA0BH,EAAOxgB,EAAM0gB,EAAanF,GACzDiF,EAAMvB,IAAI2B,IAAI5gB,GACdvB,KAAKoiB,mBAAmBL,EAAOxgB,KA3HzB8gB,IA4HFN,EAAMxB,UALuC9T,GAQjDzM,KAAK4gB,OAAOjB,UAxIF,EAwIcoC,EAAMxB,OAChCvgB,KAAK8gB,iBAAiBwB,OAAO/gB,EAEjC,CACA6gB,mBAAmBL,EAAOxgB,GACpBvB,KAAK4gB,OAAOjB,UA7IF,EA6IcoC,EAAMxB,OAChCvgB,KAAK8gB,iBAAiBwB,OAAO/gB,EAEjC,CACA2gB,0BAA0BH,EAAOxgB,EAAM0gB,EAAanF,GAC9C9c,KAAKuiB,oBAAoBR,EAAOxgB,EAAM0gB,IACxCjiB,KAAK4gB,OAAO4B,MAAM3E,EAAOvC,iBAAkB,CACzC/W,GAAIuY,EACJnP,eAAgBpM,GAGtB,CACAghB,oBAAoBR,EAAOxgB,EAAM0gB,GAC/B,SAhJoB,EAgJdA,KA7Ia,EA8IfA,EACKF,EAAMtB,QAAQZ,IAAIte,IAASwgB,EAAMrB,UAAUb,IAAIte,IAASwgB,EAAMvB,IAAIX,IAAIte,GA9I3D,GAgJhB0gB,EACKF,EAAMtB,QAAQZ,IAAIte,KAAUvB,KAAK2hB,2BAA2BI,IAAUA,EAAMvB,IAAIX,IAAIte,GAEtFwgB,EAAMtB,QAAQZ,IAAIte,MA9JN,EA8JiBwgB,EAAMxB,OAA8BwB,EAAMtB,QAAQgC,SAASC,OAAOnU,QAAUhN,KAAUvB,KAAK2hB,2BAA2BI,IAAUA,EAAMrB,UAAUb,IAAIte,GAC1L,CACAohB,iBAAiBC,GACf,MAAM,KACJrhB,GACEqhB,EACEC,EAAgB7iB,KAAK6gB,WAAW,GACjCgC,EAAcpC,QAAQZ,IAAIte,IAAUshB,EAAcrC,IAAIX,IAAIte,IAAUshB,EAAcnC,UAAUb,IAAIte,IACnGvB,KAAK8gB,iBAAiBpf,IAAIH,EAAMqhB,EAAG9F,IAAItP,MAE3C,CACAwT,eACE,OAAOhhB,KAAK6gB,WAAW7gB,KAAK6gB,WAAW/T,OAAS,EAClD,CACAoU,uBACE,IAAK,IAAIzU,EAAIzM,KAAK6gB,WAAW/T,OAAS,GAAIL,IAAK,CAC7C,MAAM,MACJ8T,GACEvgB,KAAK6gB,WAAWpU,GACpB,GA3KQ4V,IA2KJ9B,EACF,OAAOA,CAEX,CACF,CACAa,wBACE,IAAK,IAAI3U,EAAIzM,KAAK6gB,WAAW/T,OAAS,GAAIL,IAAK,CAC7C,MAAM,MACJ8T,GACEvgB,KAAK6gB,WAAWpU,GACpB,GAAY,IAAR8T,KA5LM,EA4LiCA,GACzC,OAAOA,CAEX,CACF,EAEF,MAAMuC,WAAkBxC,GACtBzgB,eAAekjB,GACbC,SAASD,GACT/iB,KAAKijB,iBAAmB,IAAItH,GAC9B,EAEF,MAAMuH,WAAyBvC,GAC7BiB,YAAYrB,GACV,OAAO,IAAIuC,GAAUvC,EACvB,CACAyB,YAAYzgB,EAAM0gB,EAAanF,GAC7B,MAAMiF,EAAQ/hB,KAAKghB,eACnB,GA5L2B,KA4LvBiB,EAIF,OAHAjiB,KAAKkiB,0BAA0BH,EAAOxgB,EAAM0gB,EAAanF,GACzD9c,KAAKoiB,mBAAmBL,EAAOxgB,QAC/BwgB,EAAMkB,iBAAiBd,IAAI5gB,GAG7ByhB,MAAMhB,YAAYzgB,EAAM0gB,EAAanF,EACvC,CACAyF,oBAAoBR,EAAOxgB,EAAM0gB,GAC/B,QAAIe,MAAMT,oBAAoBR,EAAOxgB,EAAM0gB,OArMhB,KAsMvBA,KACMF,EAAMkB,iBAAiBpD,IAAIte,KAAUwgB,EAAMtB,QAAQZ,IAAIte,IAASwgB,EAAMrB,UAAUb,IAAIte,GAGhG,CACAohB,iBAAiBC,GACV5iB,KAAK6gB,WAAW,GAAGoC,iBAAiBpD,IAAI+C,EAAGrhB,OAC9CyhB,MAAML,iBAAiBC,EAE3B,EAEF,MAAMO,GACJtjB,cACEG,KAAKojB,mBAAoB,EACzBpjB,KAAKqjB,6BAA8B,CACrC,CACAC,UAAUC,GACR,GAA4B,iBAAjBA,EACT,OAAOvjB,KAAKZ,QAAQygB,IAAI0D,GACnB,CACL,MAAOC,EAAYC,GAAiBF,EACpC,IAAKvjB,KAAKsjB,UAAUE,GAClB,OAAO,EAET,MAAME,EAAgB1jB,KAAKZ,QAAQgP,IAAIoV,GACvC,IAAK,MAAMhX,KAAOI,OAAOC,KAAK4W,GAC5B,IAAsB,MAAjBC,OAAwB,EAASA,EAAclX,MAAUiX,EAAcjX,GAC1E,OAAO,EAGX,OAAO,CACT,CACF,CACAmX,gBAAgBC,EAAQriB,GACtB,IAAIsiB,EACJ,OAAyD,OAAjDA,EAAoB7jB,KAAKZ,QAAQgP,IAAIwV,SAAmB,EAASC,EAAkBtiB,EAC7F,EAEF,SAASuiB,GAAoBrF,EAAMsF,QACHplB,IAA1B8f,EAAKuF,iBACPvF,EAAKuF,iBAAmBD,EAExBtF,EAAKuF,iBAAiBC,WAAWF,EAErC,CAQA,SAASG,GAAiBzF,EAAMsF,QACHplB,IAAvB8f,EAAK0F,cACP1F,EAAK0F,cAAgBJ,EAErBtF,EAAK0F,cAAcF,WAAWF,EAElC,CACA,SAASK,GAAoB3F,EAAM4F,EAAUC,GAC3C,IAAIC,EAAc,KACd9X,EAAI4X,EAASvX,OACjB,KAAuB,OAAhByX,GAAwB9X,EAAI,GACjC8X,EAAcF,IAAW5X,GAEP,OAAhB8X,GAAwBA,EAAY/W,MAAQ8W,EAAU9W,MACxD0W,GAAiBzF,EAAM6F,EAAUP,UAEjCD,GAAoBS,EAAaD,EAAUP,SAE/C,CACA,MAAMS,WAAuBrB,GAC3BsB,WAAWC,GACL1kB,KAAK0N,WAAUgX,EAAQ5H,IAAIpP,SAAW1N,KAAK0N,UAC/C1N,KAAK2kB,MAAMZ,SAASxhB,KAAKmiB,EAC3B,CACAE,eAAenG,GACb,MAAM,aACJoG,GACE7kB,KAAK2kB,MACHG,EAAqBD,EAAa/X,OACxC,GAA2B,IAAvBgY,EAA0B,OAC9B,IAAIrY,EAAIqY,EAAqB,EAC7B,MAAMC,EAAgBF,EAAapY,GAC/BsY,EAAcvX,QAAUiR,EAAKhR,MAC/BsX,EAAcC,YAAcvG,EAC5BhS,KAEF,MACEe,MAAOyX,GACLxG,EACJ,KAAOhS,GAAK,EAAGA,IAAK,CAClB,MAAM6X,EAAYO,EAAapY,GACzByY,EAAaZ,EAAU7W,IAC7B,KAAIyX,EAAaD,GAIV,CACDC,IAAeD,IACjBX,EAAUa,aAAe1G,GAE3B,KACF,CARE6F,EAAUc,eAAiB3G,EAC3Bze,KAAKqlB,gBAAgBf,GACrBO,EAAaS,OAAO7Y,EAAG,EAO3B,CACF,CACA4Y,gBAAgBf,GACd,MAAM,SACJP,GACEO,EACJ,GAA8B,OAA1BA,EAAUU,aAAmD,OAA3BV,EAAUa,aAChB,OAA1Bb,EAAUU,aACZlB,GAAoBQ,EAAUU,YAAajB,GAEd,OAA3BO,EAAUa,cArEpB,SAA4B1G,EAAMsF,QACHplB,IAAzB8f,EAAK8G,gBACP9G,EAAK8G,gBAAkBxB,EAEvBtF,EAAK8G,gBAAgBtB,WAAWF,EAEpC,CAgEQyB,CAAmBlB,EAAUa,aAAcpB,OAExC,CACL,MACEqB,eAAgB3G,EAChBjR,MAAOiY,GACLnB,EACJ,GAAgD,KAA5CtkB,KAAK0lB,MAAMC,WAAWF,EAAe,GACvC,OAAQhH,EAAKxN,MACX,IAAK,mBACL,IAAK,gBACL,IAAK,mBACHmT,GAAoB3F,EAAMA,EAAK/P,WAAY4V,GAC3C,MACF,IAAK,iBACL,IAAK,yBACHF,GAAoB3F,EAAMA,EAAKmH,UAAWtB,GAC1C,MACF,IAAK,sBACL,IAAK,qBACL,IAAK,0BACL,IAAK,eACL,IAAK,cACL,IAAK,qBACHF,GAAoB3F,EAAMA,EAAKoH,OAAQvB,GACvC,MACF,IAAK,kBACL,IAAK,eACL,IAAK,kBACHF,GAAoB3F,EAAMA,EAAK4F,SAAUC,GACzC,MACF,IAAK,yBACL,IAAK,oBACHF,GAAoB3F,EAAMA,EAAKqH,WAAYxB,GAC3C,MACF,QAEIJ,GAAiBzF,EAAMsF,QAI7BG,GAAiBzF,EAAMsF,EAE3B,CACF,CACAgC,4BACE,MAAM,aACJlB,GACE7kB,KAAK2kB,MACT,IAAK,IAAIlY,EAAIoY,EAAa/X,OAAS,EAAGL,GAAK,EAAGA,IAC5CzM,KAAKqlB,gBAAgBR,EAAapY,IAEpCzM,KAAK2kB,MAAME,aAAe,EAC5B,CACAmB,kCAAkCvH,GAChC,MAAM,aACJoG,GACE7kB,KAAK2kB,OACH,OACJ7X,GACE+X,EACJ,GAAe,IAAX/X,EAAc,OAClB,MAAMwX,EAAYO,EAAa/X,EAAS,GACpCwX,EAAUU,cAAgBvG,IAC5B6F,EAAUU,YAAc,KAE5B,CACAiB,wBAAwBxH,EAAMjR,EAAOC,GACnC,MAAM,aACJoX,GACE7kB,KAAK2kB,MACHG,EAAqBD,EAAa/X,OACxC,GAA2B,IAAvBgY,EAA0B,OAC9B,IAAIrY,EAAIqY,EAAqB,EAC7B,KAAOrY,GAAK,EAAGA,IAAK,CAClB,MAAM6X,EAAYO,EAAapY,GACzByY,EAAaZ,EAAU7W,IAE7B,GADqB6W,EAAU9W,QACVC,EACnB6W,EAAUU,YAAcvG,OACnB,GAAIyG,IAAe1X,EACxB8W,EAAUa,aAAe1G,OACpB,GAAIyG,EAAa1X,EACtB,KAEJ,CACF,EAEF,MAAM0Y,GAAY,yBACZC,GAAa,IAAItH,OAAOqH,GAAU5Z,OAAQ,KAChD,SAAS8Z,GAAU7W,GACjB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,KACL,KAAK,KACH,OAAO,EACT,QACE,OAAO,EAEb,CACA,MAAM8W,GAAiB,gCACjBC,GAAuB,iDACvBC,GAA4B,IAAI1H,OAAO,OAASyH,GAAqBha,OAAS,QAAU,2CAA2CA,OAAQ,KACjJ,SAASka,GAAajX,GACpB,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,OAAO,EACT,QACE,OAAO,EAEb,CACA,MAAMkX,GACJ5mB,cACEG,KAAK0mB,YAAS,EACd1mB,KAAK2mB,aAAU,EACf3mB,KAAK4mB,eAAY,EACjB5mB,KAAK6mB,cAAW,EAChB7mB,KAAK8mB,YAAS,EACd9mB,KAAK+mB,OAAS,GACd/mB,KAAKgnB,kBAAoB,EACzBhnB,KAAKinB,UAAY,GACjBjnB,KAAKknB,0BAA4B,GACjClnB,KAAKmnB,wBAAyB,EAC9BnnB,KAAKonB,QAAS,EACdpnB,KAAKqnB,oBAAqB,EAC1BrnB,KAAKsnB,gBAAiB,EACtBtnB,KAAKunB,kBAAmB,EACxBvnB,KAAKwnB,iBAAkB,EACvBxnB,KAAKynB,mCAAoC,EACzCznB,KAAK0nB,aAAe,CAClBC,yBAA0B,EAC1BC,cAAe,MAEjB5nB,KAAK6nB,WAAY,EACjB7nB,KAAK8nB,4BAA6B,EAClC9nB,KAAK+nB,OAAS,GACd/nB,KAAK+jB,SAAW,GAChB/jB,KAAK6kB,aAAe,GACpB7kB,KAAKkd,IAAM,EACXld,KAAKiR,KAAO,IACZjR,KAAKuO,MAAQ,KACbvO,KAAKwN,MAAQ,EACbxN,KAAKyN,IAAM,EACXzN,KAAKgoB,cAAgB,KACrBhoB,KAAKioB,gBAAkB,KACvBjoB,KAAKkoB,aAAe,EACpBloB,KAAKgN,QAAU,CAAC/M,EAAMC,OACtBF,KAAKmoB,oBAAqB,EAC1BnoB,KAAKooB,aAAc,EACnBpoB,KAAKqoB,8BAAgC,KACrCroB,KAAKsoB,aAAe,IAAIjnB,IACxBrB,KAAKuoB,aAAe,CACtB,CACAC,MAAK,WACHnpB,EAAU,WACVZ,EAAU,UACVI,EAAS,YACTD,IAEAoB,KAAK0mB,QAAwB,IAAfrnB,KAA8C,IAAfA,GAA4C,WAAfZ,GAC1EuB,KAAK2mB,QAAU9nB,EACfmB,KAAK4mB,WAAahoB,EAClBoB,KAAK6mB,SAAW7mB,KAAK8mB,OAAS,IAAI5Z,EAASrO,EAAWD,EAAa,EACrE,CACA6pB,cACE,OAAO,IAAIvb,EAASlN,KAAK2mB,QAAS3mB,KAAKkd,IAAMld,KAAK4mB,UAAW5mB,KAAKkd,IACpE,CACAF,MAAM0L,GACJ,MAAM/D,EAAQ,IAAI8B,GACZ5Z,EAAOD,OAAOC,KAAK7M,MACzB,IAAK,IAAIyM,EAAI,EAAGK,EAASD,EAAKC,OAAQL,EAAIK,EAAQL,IAAK,CACrD,MAAMD,EAAMK,EAAKJ,GACjB,IAAIkc,EAAM3oB,KAAKwM,IACVkc,GAAcpL,MAAMC,QAAQoL,KAC/BA,EAAMA,EAAIC,SAEZjE,EAAMnY,GAAOmc,CACf,CACA,OAAOhE,CACT,EAEF,IAAIkE,GAAW,SAAiBtZ,GAC9B,OAAOA,GAAQ,IAAMA,GAAQ,EAC/B,EACA,MAAMuZ,GAAoC,CACxCC,UAAW,IAAIpN,IAAI,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,MACjDqN,IAAK,IAAIrN,IAAI,CAAC,GAAI,GAAI,GAAI,OAEtBsN,GAAmC,CACvCC,IAAKC,GAAa,KAAPA,GAAoB,KAAPA,EACxBC,IAAKD,GAAMA,GAAM,IAAMA,GAAM,GAC7BE,IAAKF,GAAMA,GAAM,IAAMA,GAAM,GAC7BH,IAAKG,GAAMA,GAAM,IAAMA,GAAM,IAAMA,GAAM,IAAMA,GAAM,IAAMA,GAAM,IAAMA,GAAM,KAE/E,SAASG,GAAmBrY,EAAMyU,EAAOxI,EAAK0J,EAAWD,EAASI,GAChE,MAAMwC,EAAarM,EACbsM,EAAmB5C,EACnB6C,EAAiB9C,EACvB,IAAI+C,EAAM,GACNC,EAAkB,KAClBC,EAAa1M,EACjB,MAAM,OACJpQ,GACE4Y,EACJ,OAAS,CACP,GAAIxI,GAAOpQ,EAAQ,CACjBia,EAAO8C,aAAaN,EAAYC,EAAkBC,GAClDC,GAAOhE,EAAMkD,MAAMgB,EAAY1M,GAC/B,KACF,CACA,MAAMiM,EAAKzD,EAAMC,WAAWzI,GAC5B,GAAI4M,GAAY7Y,EAAMkY,EAAIzD,EAAOxI,GAAM,CACrCwM,GAAOhE,EAAMkD,MAAMgB,EAAY1M,GAC/B,KACF,CACA,GAAW,KAAPiM,EAAW,CACbO,GAAOhE,EAAMkD,MAAMgB,EAAY1M,GAC/B,MAAM6M,EAAMC,GAAgBtE,EAAOxI,EAAK0J,EAAWD,EAAkB,aAAT1V,EAAqB8V,GAClE,OAAXgD,EAAIZ,IAAgBQ,EAOtBD,GAAOK,EAAIZ,GANXQ,EAAkB,CAChBzM,MACA0J,YACAD,aAMFzJ,MACA0J,YACAD,WACEoD,GACJH,EAAa1M,CACf,MAAkB,OAAPiM,GAAsB,OAAPA,KAEtBxC,EACFC,IAFE1J,GAGc,KAAPiM,GAAoB,KAAPA,EACT,aAATlY,GACFyY,GAAOhE,EAAMkD,MAAMgB,EAAY1M,GAAO,OACpCA,EACS,KAAPiM,GAAuC,KAA1BzD,EAAMC,WAAWzI,MAC9BA,IAEFyJ,EACFiD,EAAahD,EAAY1J,GAEzB6J,EAAO8C,aAAaN,EAAYC,EAAkBC,KAGlDvM,CAEN,CACA,MAAO,CACLA,MACA+M,IAAKP,EACLC,kBACA/C,YACAD,UACAuD,kBAAmBP,EAEvB,CACA,SAASG,GAAY7Y,EAAMkY,EAAIzD,EAAOxI,GACpC,MAAa,aAATjM,EACY,KAAPkY,GAAoB,KAAPA,GAA2C,MAA9BzD,EAAMC,WAAWzI,EAAM,GAEnDiM,KAAiB,WAATlY,EAAoB,GAAK,GAC1C,CACA,SAAS+Y,GAAgBtE,EAAOxI,EAAK0J,EAAWD,EAASwD,EAAYpD,GACnE,MAAMqD,GAAkBD,EACxBjN,IACA,MAAM6M,EAAMZ,IAAM,CAChBjM,MACAiM,KACAvC,YACAD,YAEIwC,EAAKzD,EAAMC,WAAWzI,KAC5B,OAAQiM,GACN,KAAK,IACH,OAAOY,EAAI,MACb,KAAK,IACH,OAAOA,EAAI,MACb,KAAK,IACH,CACE,IAAIxa,EAKJ,QAHEA,OACA2N,OACEmN,GAAY3E,EAAOxI,EAAK0J,EAAWD,EAAS,GAAG,EAAOyD,EAAgBrD,IACnEgD,EAAa,OAATxa,EAAgB,KAAO2B,OAAOkO,aAAa7P,GACxD,CACF,KAAK,IACH,CACE,IAAIA,EAKJ,QAHEA,OACA2N,OACEoN,GAAc5E,EAAOxI,EAAK0J,EAAWD,EAASyD,EAAgBrD,IAC3DgD,EAAa,OAATxa,EAAgB,KAAO2B,OAAOqZ,cAAchb,GACzD,CACF,KAAK,IACH,OAAOwa,EAAI,MACb,KAAK,GACH,OAAOA,EAAI,MACb,KAAK,IACH,OAAOA,EAAI,MACb,KAAK,IACH,OAAOA,EAAI,MACb,KAAK,GAC2B,KAA1BrE,EAAMC,WAAWzI,MACjBA,EAEN,KAAK,GACH0J,EAAY1J,IACVyJ,EACJ,KAAK,KACL,KAAK,KACH,OAAOoD,EAAI,IACb,KAAK,GACL,KAAK,GACH,GAAII,EACF,OAAOJ,EAAI,MAEXhD,EAAOyD,oBAAoBtN,EAAM,EAAG0J,EAAWD,GAEnD,QACE,GAAIwC,GAAM,IAAMA,GAAM,GAAI,CACxB,MAAMsB,EAAWvN,EAAM,EAEvB,IAAIwN,EADUhF,EAAMkD,MAAM6B,EAAUvN,EAAM,GAAGyN,MAAM,WAC9B,GACjBC,EAAQC,SAASH,EAAU,GAC3BE,EAAQ,MACVF,EAAWA,EAAS9B,MAAM,GAAI,GAC9BgC,EAAQC,SAASH,EAAU,IAE7BxN,GAAOwN,EAAS5d,OAAS,EACzB,MAAM4V,EAAOgD,EAAMC,WAAWzI,GAC9B,GAAiB,MAAbwN,GAA6B,KAAThI,GAAwB,KAATA,EAAa,CAClD,GAAIyH,EACF,OAAOJ,EAAI,MAEXhD,EAAOyD,oBAAoBC,EAAU7D,EAAWD,EAEpD,CACA,OAAOoD,EAAI7Y,OAAOkO,aAAawL,GACjC,CACA,OAAOb,EAAI7Y,OAAOkO,aAAa+J,IAErC,CACA,SAASkB,GAAY3E,EAAOxI,EAAK0J,EAAWD,EAASmE,EAAKC,EAAUX,EAAgBrD,GAClF,MAAMwC,EAAarM,EACnB,IAAI8N,EAYJ,QAVEA,IACA9N,OACE+N,GAAQvF,EAAOxI,EAAK0J,EAAWD,EAAS,GAAImE,EAAKC,GAAU,EAAOhE,GAASqD,IACrE,OAANY,IACEZ,EACFrD,EAAOmE,sBAAsB3B,EAAY3C,EAAWD,GAEpDzJ,EAAMqM,EAAa,GAGhB,CACLha,KAAMyb,EACN9N,MAEJ,CACA,SAAS+N,GAAQvF,EAAOxI,EAAK0J,EAAWD,EAASxR,EAAO2V,EAAKC,EAAUI,EAAmBpE,EAAQqE,GAChG,MAAM5d,EAAQ0P,EACRmO,EAA8B,KAAVlW,EAAe2T,GAAkCE,IAAMF,GAAkCC,UAC7GuC,EAA6B,KAAVnW,EAAe8T,GAAiCD,IAAgB,KAAV7T,EAAe8T,GAAiCI,IAAgB,IAAVlU,EAAc8T,GAAiCG,IAAMH,GAAiCC,IAC3N,IAAIqC,GAAU,EACVC,EAAQ,EACZ,IAAK,IAAI/e,EAAI,EAAGgf,EAAW,MAAPX,EAAcY,IAAWZ,EAAKre,EAAIgf,IAAKhf,EAAG,CAC5D,MAAM8C,EAAOmW,EAAMC,WAAWzI,GAC9B,IAAIyL,EACJ,GAAa,KAATpZ,GAAqC,SAAtB4b,EAAnB,CA4BA,GARExC,EADEpZ,GAAQ,GACJA,EAAO,GAAK,GACTA,GAAQ,GACXA,EAAO,GAAK,GACTsZ,GAAStZ,GACZA,EAAO,GAEPmc,IAEJ/C,GAAOxT,EAAO,CAChB,GAAIwT,GAAO,GAAKyC,EACd,MAAO,CACLJ,EAAG,KACH9N,OAEG,GAAIyL,GAAO,GAAK5B,EAAO4E,aAAazO,EAAK0J,EAAWD,EAASxR,GAClEwT,EAAM,MACD,KAAIoC,EAIT,MAHApC,EAAM,EACN4C,GAAU,CAGZ,CACF,GACErO,EACFsO,EAAQA,EAAQrW,EAAQwT,CA1BxB,KAlBA,CACE,MAAMiD,EAAOlG,EAAMC,WAAWzI,EAAM,GAC9BwF,EAAOgD,EAAMC,WAAWzI,EAAM,GACpC,GAAKiO,GAME,GAAIU,OAAOC,MAAMpJ,KAAU4I,EAAiB5I,IAAS2I,EAAkBxL,IAAI+L,IAASP,EAAkBxL,IAAI6C,GAAO,CACtH,GAAI0I,EAAa,MAAO,CACtBJ,EAAG,KACH9N,OAEF6J,EAAOgF,2BAA2B7O,EAAK0J,EAAWD,EACpD,MAZwB,CACtB,GAAIyE,EAAa,MAAO,CACtBJ,EAAG,KACH9N,OAEF6J,EAAOiF,iCAAiC9O,EAAK0J,EAAWD,EAC1D,GAOEzJ,CAEJ,CA2BF,CACA,OAAIA,IAAQ1P,GAAgB,MAAPsd,GAAe5N,EAAM1P,IAAUsd,GAAOS,EAClD,CACLP,EAAG,KACH9N,OAGG,CACL8N,EAAGQ,EACHtO,MAEJ,CACA,SAASoN,GAAc5E,EAAOxI,EAAK0J,EAAWD,EAASyD,EAAgBrD,GAErE,IAAIxX,EACJ,GAAW,MAFAmW,EAAMC,WAAWzI,IAS1B,KANEA,IAEA3N,OACA2N,OACEmN,GAAY3E,EAAOxI,EAAK0J,EAAWD,EAASjB,EAAM3Y,QAAQ,IAAKmQ,GAAOA,GAAK,EAAMkN,EAAgBrD,MACnG7J,EACW,OAAT3N,GAAiBA,EAAO,QAAU,CACpC,IAAI6a,EAGF,MAAO,CACL7a,KAAM,KACN2N,OAJF6J,EAAOkF,iBAAiB/O,EAAK0J,EAAWD,EAO5C,QAGEpX,OACA2N,OACEmN,GAAY3E,EAAOxI,EAAK0J,EAAWD,EAAS,GAAG,EAAOyD,EAAgBrD,IAE5E,MAAO,CACLxX,OACA2N,MAEJ,CACA,MAAMgP,GAAY,CAAC,MACjBC,GAAa,CAAC,MAChB,SAASC,GAAclP,EAAK0J,EAAWD,GACrC,OAAO,IAAIzZ,EAASyZ,EAASzJ,EAAM0J,EAAW1J,EAChD,CACA,MAAMmP,GAAoB,IAAI1Q,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACtE,MAAM2Q,GACJzsB,YAAY8kB,GACV3kB,KAAKiR,KAAO0T,EAAM1T,KAClBjR,KAAKuO,MAAQoW,EAAMpW,MACnBvO,KAAKwN,MAAQmX,EAAMnX,MACnBxN,KAAKyN,IAAMkX,EAAMlX,IACjBzN,KAAK8c,IAAM,IAAIvP,EAAeoX,EAAMkC,SAAUlC,EAAMmC,OACtD,EAEF,MAAMyF,WAAkB/H,GACtB3kB,YAAY2B,EAASkkB,GACnB1C,QACAhjB,KAAKwsB,iBAAc,EACnBxsB,KAAKT,OAAS,GACdS,KAAKysB,sBAAwB,CAC3Bd,aAAc,CAACzO,EAAK0J,EAAWD,EAASxR,MACjCnV,KAAKwB,QAAQ/B,gBAClBO,KAAKwiB,MAAM3E,EAAO3I,aAAc,CAC9B3Q,GAAI6nB,GAAclP,EAAK0J,EAAWD,GAClCxR,WAEK,GAET6W,iCAAkChsB,KAAK0sB,aAAa7O,EAAO7F,kCAC3D+T,2BAA4B/rB,KAAK0sB,aAAa7O,EAAO7D,6BAEvDha,KAAK2sB,4BAA8B/f,OAAOjI,OAAO,CAAC,EAAG3E,KAAKysB,sBAAuB,CAC/EvB,sBAAuBlrB,KAAK0sB,aAAa7O,EAAOzI,uBAChD6W,iBAAkBjsB,KAAK0sB,aAAa7O,EAAO9I,oBAE7C/U,KAAK4sB,wCAA0ChgB,OAAOjI,OAAO,CAAC,EAAG3E,KAAK2sB,4BAA6B,CACjGnC,oBAAqB,CAACtN,EAAK0J,EAAWD,KACpC3mB,KAAK6sB,uBAAuBhP,EAAOO,oBAAqB,CACtD7Z,GAAI6nB,GAAclP,EAAK0J,EAAWD,IAClC,EAEJkD,aAAc,CAAC3M,EAAK0J,EAAWD,KAC7B,MAAM3mB,KAAKwiB,MAAM3E,EAAO1C,mBAAoB,CAC1C5W,GAAI6nB,GAAclP,EAAM,EAAG0J,EAAWD,IACtC,IAGN3mB,KAAK8sB,0CAA4ClgB,OAAOjI,OAAO,CAAC,EAAG3E,KAAK2sB,4BAA6B,CACnGnC,oBAAqBxqB,KAAK0sB,aAAa7O,EAAOO,qBAC9CyL,aAAc,CAAC3M,EAAK0J,EAAWD,KAC7B,MAAM3mB,KAAKwiB,MAAM3E,EAAOzC,qBAAsB,CAC5C7W,GAAI6nB,GAAclP,EAAK0J,EAAWD,IAClC,IAGN3mB,KAAK2kB,MAAQ,IAAI8B,GACjBzmB,KAAK2kB,MAAM6D,KAAKhnB,GAChBxB,KAAK0lB,MAAQA,EACb1lB,KAAK8M,OAAS4Y,EAAM5Y,OACpB9M,KAAKwsB,aAAc,CACrB,CACAO,UAAUjtB,GACRE,KAAKT,OAAOuN,OAAS9M,KAAK2kB,MAAM4D,aAChCvoB,KAAKT,OAAOgD,KAAKzC,KACfE,KAAK2kB,MAAM4D,YACf,CACA7F,OACE1iB,KAAKgtB,sBACDhtB,KAAKwB,QAAQjC,QACfS,KAAK+sB,UAAU,IAAIT,GAAMtsB,KAAK2kB,QAEhC3kB,KAAK2kB,MAAMuD,aAAeloB,KAAK2kB,MAAMnX,MACrCxN,KAAK2kB,MAAMqD,cAAgBhoB,KAAK2kB,MAAMmC,OACtC9mB,KAAK2kB,MAAMsD,gBAAkBjoB,KAAK2kB,MAAMkC,SACxC7mB,KAAKitB,WACP,CACAC,IAAIjc,GACF,QAAIjR,KAAK2qB,MAAM1Z,KACbjR,KAAK0iB,QACE,EAIX,CACAiI,MAAM1Z,GACJ,OAAOjR,KAAK2kB,MAAM1T,OAASA,CAC7B,CACAkc,qBAAqBxI,GACnB,MAAO,CACLzH,IAAKyH,EAAMzH,IACX3O,MAAO,KACP0C,KAAM0T,EAAM1T,KACZzD,MAAOmX,EAAMnX,MACbC,IAAKkX,EAAMlX,IACXT,QAAS,CAAChN,KAAKotB,cACfhG,OAAQzC,EAAMyC,OACdP,SAAUlC,EAAMkC,SAChBmB,cAAerD,EAAMqD,cACrBrB,QAAShC,EAAMgC,QACfC,UAAWjC,EAAMiC,UACjB6B,YAAa9D,EAAM8D,YAEvB,CACA4E,YACE,MAAMC,EAAMttB,KAAK2kB,MACjB3kB,KAAK2kB,MAAQ3kB,KAAKmtB,qBAAqBG,GACvCttB,KAAKwsB,aAAc,EACnBxsB,KAAKitB,YACLjtB,KAAKwsB,aAAc,EACnB,MAAMe,EAAOvtB,KAAK2kB,MAElB,OADA3kB,KAAK2kB,MAAQ2I,EACNC,CACT,CACAC,iBACE,OAAOxtB,KAAKytB,oBAAoBztB,KAAK2kB,MAAMzH,IAC7C,CACAuQ,oBAAoBvQ,GAElB,OADAmJ,GAAeqH,UAAYxQ,EACpBmJ,GAAelH,KAAKnf,KAAK0lB,OAASW,GAAeqH,UAAYxQ,CACtE,CACAyQ,oBACE,OAAO3tB,KAAK0lB,MAAMC,WAAW3lB,KAAKwtB,iBACpC,CACAI,uBACE,OAAO5tB,KAAK6tB,0BAA0B7tB,KAAK2kB,MAAMzH,IACnD,CACA2Q,0BAA0B3Q,GAExB,OADAoJ,GAAqBoH,UAAYxQ,EAC1BoJ,GAAqBnH,KAAKnf,KAAK0lB,OAASY,GAAqBoH,UAAYxQ,CAClF,CACA4Q,0BACE,OAAO9tB,KAAK0lB,MAAMC,WAAW3lB,KAAK4tB,uBACpC,CACAG,eAAe7Q,GACb,IAAI8Q,EAAKhuB,KAAK0lB,MAAMC,WAAWzI,GAC/B,GAAsB,QAAZ,MAAL8Q,MAA6B9Q,EAAMld,KAAK0lB,MAAM5Y,OAAQ,CACzD,MAAMmhB,EAAQjuB,KAAK0lB,MAAMC,WAAWzI,GACX,QAAZ,MAAR+Q,KACHD,EAAK,QAAiB,KAALA,IAAe,KAAe,KAARC,GAE3C,CACA,OAAOD,CACT,CACAE,UAAUxH,GACR1mB,KAAK2kB,MAAM+B,OAASA,EAChBA,IACF1mB,KAAK2kB,MAAM2D,aAAa6F,SAAQ,EAAEC,EAAc7pB,KAAQvE,KAAKwiB,MAAM4L,EAAc,CAC/E7pB,SAEFvE,KAAK2kB,MAAM2D,aAAa+F,QAE5B,CACAjB,aACE,OAAOptB,KAAK2kB,MAAM3X,QAAQhN,KAAK2kB,MAAM3X,QAAQF,OAAS,EACxD,CACAmgB,YACEjtB,KAAKsuB,YACLtuB,KAAK2kB,MAAMnX,MAAQxN,KAAK2kB,MAAMzH,IACzBld,KAAKwsB,cAAaxsB,KAAK2kB,MAAMkC,SAAW7mB,KAAK2kB,MAAM8D,eACpDzoB,KAAK2kB,MAAMzH,KAAOld,KAAK8M,OACzB9M,KAAKuuB,YAAY,KAGnBvuB,KAAKwuB,iBAAiBxuB,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,KACvD,CACAuR,iBAAiBvJ,GACf,IAAI2B,EACC7mB,KAAKwsB,cAAa3F,EAAW7mB,KAAK2kB,MAAM8D,eAC7C,MAAMjb,EAAQxN,KAAK2kB,MAAMzH,IACnBzP,EAAMzN,KAAK0lB,MAAM3Y,QAAQmY,EAAY1X,EAAQ,GACnD,IAAa,IAATC,EACF,MAAMzN,KAAKwiB,MAAM3E,EAAO5C,oBAAqB,CAC3C1W,GAAIvE,KAAK2kB,MAAM8D,gBAKnB,IAFAzoB,KAAK2kB,MAAMzH,IAAMzP,EAAMyX,EAAWpY,OAClCqZ,GAAWuH,UAAYlgB,EAAQ,EACxB2Y,GAAWhH,KAAKnf,KAAK0lB,QAAUS,GAAWuH,WAAajgB,KAC1DzN,KAAK2kB,MAAMgC,QACb3mB,KAAK2kB,MAAMiC,UAAYT,GAAWuH,UAEpC,GAAI1tB,KAAKwsB,YAAa,OACtB,MAAM9H,EAAU,CACdzT,KAAM,eACN1C,MAAOvO,KAAK0lB,MAAMkD,MAAMpb,EAAQ,EAAGC,GACnCD,QACAC,IAAKA,EAAMyX,EAAWpY,OACtBgQ,IAAK,IAAIvP,EAAesZ,EAAU7mB,KAAK2kB,MAAM8D,gBAG/C,OADIzoB,KAAKwB,QAAQjC,QAAQS,KAAK+sB,UAAUrI,GACjCA,CACT,CACAgK,gBAAgBC,GACd,MAAMnhB,EAAQxN,KAAK2kB,MAAMzH,IACzB,IAAI2J,EACC7mB,KAAKwsB,cAAa3F,EAAW7mB,KAAK2kB,MAAM8D,eAC7C,IAAIU,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAAOyR,GACjD,GAAI3uB,KAAK2kB,MAAMzH,IAAMld,KAAK8M,OACxB,MAAQsZ,GAAU+C,MAASnpB,KAAK2kB,MAAMzH,IAAMld,KAAK8M,QAC/Cqc,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAG1C,GAAIld,KAAKwsB,YAAa,OACtB,MAAM/e,EAAMzN,KAAK2kB,MAAMzH,IAEjBwH,EAAU,CACdzT,KAAM,cACN1C,MAHYvO,KAAK0lB,MAAMkD,MAAMpb,EAAQmhB,EAAWlhB,GAIhDD,QACAC,MACAqP,IAAK,IAAIvP,EAAesZ,EAAU7mB,KAAK2kB,MAAM8D,gBAG/C,OADIzoB,KAAKwB,QAAQjC,QAAQS,KAAK+sB,UAAUrI,GACjCA,CACT,CACA4J,YACE,MAAMM,EAAa5uB,KAAK2kB,MAAMzH,IACxB6G,EAAW,GACjB8K,EAAM,KAAO7uB,KAAK2kB,MAAMzH,IAAMld,KAAK8M,QAAQ,CACzC,MAAMqc,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAC5C,OAAQiM,GACN,KAAK,GACL,KAAK,IACL,KAAK,IACDnpB,KAAK2kB,MAAMzH,IACb,MACF,KAAK,GAC+C,KAA9Cld,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,MACvCld,KAAK2kB,MAAMzH,IAEjB,KAAK,GACL,KAAK,KACL,KAAK,OACDld,KAAK2kB,MAAMzH,MACXld,KAAK2kB,MAAMgC,QACb3mB,KAAK2kB,MAAMiC,UAAY5mB,KAAK2kB,MAAMzH,IAClC,MACF,KAAK,GACH,OAAQld,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,IAC7C,KAAK,GACH,CACE,MAAMwH,EAAU1kB,KAAKyuB,iBAAiB,WACtB9vB,IAAZ+lB,IACF1kB,KAAKykB,WAAWC,GACZ1kB,KAAKwB,QAAQ9B,eAAeqkB,EAASxhB,KAAKmiB,IAEhD,KACF,CACF,KAAK,GACH,CACE,MAAMA,EAAU1kB,KAAK0uB,gBAAgB,QACrB/vB,IAAZ+lB,IACF1kB,KAAKykB,WAAWC,GACZ1kB,KAAKwB,QAAQ9B,eAAeqkB,EAASxhB,KAAKmiB,IAEhD,KACF,CACF,QACE,MAAMmK,EAEV,MACF,QACE,GAAIrI,GAAa2C,KACbnpB,KAAK2kB,MAAMzH,SACR,GAAW,KAAPiM,IAAcnpB,KAAK2f,UAAY3f,KAAKwB,QAAQ7B,OAAQ,CAC7D,MAAMud,EAAMld,KAAK2kB,MAAMzH,IACvB,GAAuC,KAAnCld,KAAK0lB,MAAMC,WAAWzI,EAAM,IAAgD,KAAnCld,KAAK0lB,MAAMC,WAAWzI,EAAM,MAA6B,IAAf0R,GAAoB5uB,KAAK2kB,MAAMiC,UAAYgI,GAOhI,MAAMC,EAPuI,CAC7I,MAAMnK,EAAU1kB,KAAK0uB,gBAAgB,QACrB/vB,IAAZ+lB,IACF1kB,KAAKykB,WAAWC,GACZ1kB,KAAKwB,QAAQ9B,eAAeqkB,EAASxhB,KAAKmiB,GAElD,CAGF,KAAO,IAAW,KAAPyE,GAAcnpB,KAAK2f,WAAY3f,KAAKwB,QAAQ7B,OAYrD,MAAMkvB,EAZuD,CAC7D,MAAM3R,EAAMld,KAAK2kB,MAAMzH,IACvB,GAAuC,KAAnCld,KAAK0lB,MAAMC,WAAWzI,EAAM,IAAgD,KAAnCld,KAAK0lB,MAAMC,WAAWzI,EAAM,IAAgD,KAAnCld,KAAK0lB,MAAMC,WAAWzI,EAAM,GAOhH,MAAM2R,EAPqH,CAC3H,MAAMnK,EAAU1kB,KAAK0uB,gBAAgB,QACrB/vB,IAAZ+lB,IACF1kB,KAAKykB,WAAWC,GACZ1kB,KAAKwB,QAAQ9B,eAAeqkB,EAASxhB,KAAKmiB,GAElD,CAGF,CAEA,EAEN,CACA,GAAIX,EAASjX,OAAS,EAAG,CACvB,MACMgiB,EAAoB,CACxBthB,MAAOohB,EACPnhB,IAHUzN,KAAK2kB,MAAMzH,IAIrB6G,WACAiB,YAAa,KACbG,aAAc,KACdC,eAAgB,MAElBplB,KAAK2kB,MAAME,aAAatiB,KAAKusB,EAC/B,CACF,CACAP,YAAYtd,EAAM0X,GAChB3oB,KAAK2kB,MAAMlX,IAAMzN,KAAK2kB,MAAMzH,IAC5Bld,KAAK2kB,MAAMmC,OAAS9mB,KAAK2kB,MAAM8D,cAC/B,MAAMsG,EAAW/uB,KAAK2kB,MAAM1T,KAC5BjR,KAAK2kB,MAAM1T,KAAOA,EAClBjR,KAAK2kB,MAAMpW,MAAQoa,EACd3oB,KAAKwsB,aACRxsB,KAAKmB,cAAc4tB,EAEvB,CACAC,aAAa/d,GACXjR,KAAK2kB,MAAM1T,KAAOA,EAClBjR,KAAKmB,eACP,CACA8tB,uBACE,GAAuB,IAAnBjvB,KAAK2kB,MAAMzH,KAAald,KAAKkvB,wBAC/B,OAEF,MAAMC,EAAUnvB,KAAK2kB,MAAMzH,IAAM,EAC3BwF,EAAO1iB,KAAK+tB,eAAeoB,GACjC,GAAIzM,GAAQ,IAAMA,GAAQ,GACxB,MAAM1iB,KAAKwiB,MAAM3E,EAAOnE,yBAA0B,CAChDnV,GAAIvE,KAAK2kB,MAAM8D,gBAGnB,GAAa,MAAT/F,GAAyB,KAATA,GAAe1iB,KAAKsjB,UAAU,kBAAmB,CAEnE,GADAtjB,KAAKovB,aAAa,kBAC2C,QAAzDpvB,KAAK2jB,gBAAgB,iBAAkB,cACzC,MAAM3jB,KAAKwiB,MAAe,MAATE,EAAe7E,EAAOjF,6CAA+CiF,EAAOtE,4CAA6C,CACxIhV,GAAIvE,KAAK2kB,MAAM8D,gBAGnBzoB,KAAK2kB,MAAMzH,KAAO,EACL,MAATwF,EACF1iB,KAAKuuB,YAAY,GAEjBvuB,KAAKuuB,YAAY,EAErB,MAAWrP,GAAkBwD,MACzB1iB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,IAAKvuB,KAAKqvB,UAAU3M,KACnB,KAATA,KACP1iB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,IAAKvuB,KAAKqvB,cAE3BrvB,KAAKsvB,SAAS,GAAI,EAEtB,CACAC,gBACE,MAAM7M,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAChDwF,GAAQ,IAAMA,GAAQ,GACxB1iB,KAAKwvB,YAAW,GAGL,KAAT9M,GAA6D,KAA9C1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,IACxDld,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAKuuB,YAAY,QAEfvuB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,IAErB,CACAkB,kBAEe,KADAzvB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAElDld,KAAKsvB,SAAS,GAAI,GAElBtvB,KAAKsvB,SAAS,GAAI,EAEtB,CACAJ,wBACE,GAAuB,IAAnBlvB,KAAK2kB,MAAMzH,KAAald,KAAK8M,OAAS,EAAG,OAAO,EACpD,IAAIqc,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAChD,GAAW,KAAPiM,EAAW,OAAO,EACtB,MAAM3b,EAAQxN,KAAK2kB,MAAMzH,IAEzB,IADAld,KAAK2kB,MAAMzH,KAAO,GACVkJ,GAAU+C,MAASnpB,KAAK2kB,MAAMzH,IAAMld,KAAK8M,QAC/Cqc,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAExC,MAAM3O,EAAQvO,KAAK0lB,MAAMkD,MAAMpb,EAAQ,EAAGxN,KAAK2kB,MAAMzH,KAErD,OADAld,KAAKuuB,YAAY,GAAIhgB,IACd,CACT,CACAmhB,sBAAsBngB,GACpB,IAAI0B,EAAgB,KAAT1B,EAAc,GAAK,GAC1BogB,EAAQ,EACRjN,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACrC,KAAT3N,GAAwB,KAATmT,IACjBiN,IACAjN,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAC9CjM,EAAO,IAEI,KAATyR,GAAgB1iB,KAAK2kB,MAAMyC,SAC7BuI,IACA1e,EAAgB,KAAT1B,EAAc,GAAK,IAE5BvP,KAAKsvB,SAASre,EAAM0e,EACtB,CACAC,mBAAmBrgB,GACjB,MAAMmT,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACpD,GAAIwF,IAASnT,EAAb,CAQA,GAAa,MAATA,EAAc,CAChB,GAAa,KAATmT,EAEF,YADA1iB,KAAKsvB,SAAS,GAAI,GAGpB,GAAItvB,KAAKsjB,UAAU,mBAA8B,MAATZ,EAAc,CACpD,GAA6D,QAAzD1iB,KAAK2jB,gBAAgB,iBAAkB,cACzC,MAAM3jB,KAAKwiB,MAAM3E,EAAOnF,0CAA2C,CACjEnU,GAAIvE,KAAK2kB,MAAM8D,gBAKnB,OAFAzoB,KAAK2kB,MAAMzH,KAAO,OAClBld,KAAKuuB,YAAY,EAEnB,CACA,GAAIvuB,KAAKsjB,UAAU,mBAA8B,KAATZ,EAAa,CACnD,GAA6D,QAAzD1iB,KAAK2jB,gBAAgB,iBAAkB,cACzC,MAAM3jB,KAAKwiB,MAAM3E,EAAOxE,yCAA0C,CAChE9U,GAAIvE,KAAK2kB,MAAM8D,gBAKnB,OAFAzoB,KAAK2kB,MAAMzH,KAAO,OAClBld,KAAKuuB,YAAY,EAEnB,CACF,CACa,KAAT7L,EAIJ1iB,KAAKsvB,SAAkB,MAAT/f,EAAe,GAAK,GAAI,GAHpCvP,KAAKsvB,SAAS,GAAI,EA5BpB,MANoD,KAA9CtvB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACzCld,KAAKsvB,SAAS,GAAI,GAElBtvB,KAAKsvB,SAAkB,MAAT/f,EAAe,GAAK,GAAI,EAmC5C,CACAsgB,kBACE,MAAMnN,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACvC,KAATwF,GAAgB1iB,KAAK2kB,MAAMyC,OAEX,KAAT1E,GAAe1iB,KAAKsjB,UAAU,CAAC,mBAAoB,CAC5DwM,SAAU,OACVC,WAAY,SAEZ/vB,KAAKsvB,SAAS,GAAI,GAEE,KADAtvB,KAAK0lB,MAAMsK,YAAYhwB,KAAK2kB,MAAMzH,MAEpDld,KAAK+V,cAGP/V,KAAKsvB,SAAS,GAAI,GAXlBtvB,KAAKsvB,SAAS,GAAI,EAatB,CACAW,mBAEe,KADAjwB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,IACjCld,KAAKsjB,UAAU,CAAC,mBAAoB,CACrDwM,SAAU,OACVC,WAAY,QAEZ/vB,KAAKsvB,SAAS,GAAI,GAElBtvB,KAAKsvB,SAAS,GAAI,EAEtB,CACAY,mBAAmB3gB,GACjB,MAAMmT,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAChDwF,IAASnT,EAIA,KAATmT,EACF1iB,KAAKsvB,SAAS,GAAI,GAElBtvB,KAAKsvB,SAAS,GAAI,GANlBtvB,KAAKsvB,SAAS,GAAI,EAQtB,CACAa,eACE,MAAM,IACJjT,GACEld,KAAK2kB,MACHjC,EAAO1iB,KAAK0lB,MAAMC,WAAWzI,EAAM,GACzC,GAAa,KAATwF,EACF,OAAuC,KAAnC1iB,KAAK0lB,MAAMC,WAAWzI,EAAM,QAC9Bld,KAAKsvB,SAAS,GAAI,QAGpBtvB,KAAKsvB,SAAS,GAAI,GAGP,KAAT5M,EAIJ1iB,KAAKsvB,SAAS,GAAI,GAHhBtvB,KAAKsvB,SAAS,GAAI,EAItB,CACAc,eACE,MAAM,IACJlT,GACEld,KAAK2kB,MACHjC,EAAO1iB,KAAK0lB,MAAMC,WAAWzI,EAAM,GACzC,GAAa,KAATwF,EAAa,CACf,MAAM2N,EAA0C,KAAnCrwB,KAAK0lB,MAAMC,WAAWzI,EAAM,GAAY,EAAI,EACzD,OAA0C,KAAtCld,KAAK0lB,MAAMC,WAAWzI,EAAMmT,QAC9BrwB,KAAKsvB,SAAS,GAAIe,EAAO,QAG3BrwB,KAAKsvB,SAAS,GAAIe,EAEpB,CACa,KAAT3N,EAIJ1iB,KAAKsvB,SAAS,GAAI,GAHhBtvB,KAAKsvB,SAAS,GAAI,EAItB,CACAgB,kBAAkB/gB,GAChB,MAAMmT,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACpD,GAAa,KAATwF,EAIJ,OAAa,KAATnT,GAAwB,KAATmT,GACjB1iB,KAAK2kB,MAAMzH,KAAO,OAClBld,KAAKuuB,YAAY,UAGnBvuB,KAAKsvB,SAAkB,KAAT/f,EAAc,GAAK,GAAI,GARnCvP,KAAKsvB,SAAS,GAAkD,KAA9CtvB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAAY,EAAI,EAS7E,CACAqT,qBACE,MAAM7N,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAC9CsT,EAAQxwB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACxC,KAATwF,EACY,KAAV8N,EACFxwB,KAAKsvB,SAAS,GAAI,GAElBtvB,KAAKsvB,SAAS,GAAI,GAEF,KAAT5M,GAAiB8N,GAAS,IAAMA,GAAS,MAIhDxwB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,MAJjBvuB,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAKuuB,YAAY,IAKrB,CACAC,iBAAiBjf,GACf,OAAQA,GACN,KAAK,GAEH,YADAvP,KAAKuvB,gBAEP,KAAK,GAGH,QAFEvvB,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,IAEnB,KAAK,GAGH,QAFEvuB,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,IAEnB,KAAK,GAGH,QAFEvuB,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,IAEnB,KAAK,GAGH,QAFEvuB,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,IAEnB,KAAK,GACH,GAAIvuB,KAAKsjB,UAAU,mBAAmE,MAA9CtjB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAAY,CACzF,GAA6D,QAAzDld,KAAK2jB,gBAAgB,iBAAkB,cACzC,MAAM3jB,KAAKwiB,MAAM3E,EAAOvE,2CAA4C,CAClE/U,GAAIvE,KAAK2kB,MAAM8D,gBAGnBzoB,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAKuuB,YAAY,EACnB,OACIvuB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,GAEnB,OACF,KAAK,GAGH,QAFEvuB,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,GAEnB,KAAK,IACH,GAAIvuB,KAAKsjB,UAAU,mBAAmE,MAA9CtjB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAAY,CACzF,GAA6D,QAAzDld,KAAK2jB,gBAAgB,iBAAkB,cACzC,MAAM3jB,KAAKwiB,MAAM3E,EAAOlF,4CAA6C,CACnEpU,GAAIvE,KAAK2kB,MAAM8D,gBAGnBzoB,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAKuuB,YAAY,EACnB,OACIvuB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,GAEnB,OACF,KAAK,IAGH,QAFEvuB,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,GAEnB,KAAK,GAOH,YANIvuB,KAAKsjB,UAAU,iBAAiE,KAA9CtjB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAC3Eld,KAAKsvB,SAAS,GAAI,MAEhBtvB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,MAGrB,KAAK,GAEH,YADAvuB,KAAKuwB,qBAEP,KAAK,GAEH,YADAvwB,KAAKywB,oBAEP,KAAK,GACH,CACE,MAAM/N,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACpD,GAAa,MAATwF,GAAyB,KAATA,EAElB,YADA1iB,KAAK0wB,gBAAgB,IAGvB,GAAa,MAAThO,GAAyB,KAATA,EAElB,YADA1iB,KAAK0wB,gBAAgB,GAGvB,GAAa,KAAThO,GAAwB,KAATA,EAEjB,YADA1iB,KAAK0wB,gBAAgB,EAGzB,CACF,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEH,YADA1wB,KAAKwvB,YAAW,GAElB,KAAK,GACL,KAAK,GAEH,YADAxvB,KAAK2wB,WAAWphB,GAElB,KAAK,GAEH,YADAvP,KAAKyvB,kBAEP,KAAK,GACL,KAAK,GAEH,YADAzvB,KAAK0vB,sBAAsBngB,GAE7B,KAAK,IACL,KAAK,GAEH,YADAvP,KAAK4vB,mBAAmBrgB,GAE1B,KAAK,GAEH,YADAvP,KAAK6vB,kBAEP,KAAK,GACL,KAAK,GAEH,YADA7vB,KAAKkwB,mBAAmB3gB,GAE1B,KAAK,GAEH,YADAvP,KAAKmwB,eAEP,KAAK,GAEH,YADAnwB,KAAKowB,eAEP,KAAK,GACL,KAAK,GAEH,YADApwB,KAAKswB,kBAAkB/gB,GAEzB,KAAK,IAEH,YADAvP,KAAKsvB,SAAS,GAAI,GAEpB,KAAK,GAEH,YADAtvB,KAAKiwB,mBAEP,KAAK,GAEH,YADAjwB,KAAKivB,uBAEP,KAAK,GAEH,YADAjvB,KAAK4wB,WAEP,QACE,GAAI1R,GAAkB3P,GAEpB,YADAvP,KAAK4wB,SAASrhB,GAIpB,MAAMvP,KAAKwiB,MAAM3E,EAAO/H,yBAA0B,CAChDvR,GAAIvE,KAAK2kB,MAAM8D,cACf1S,WAAY7E,OAAOqZ,cAAchb,IAErC,CACA+f,SAASre,EAAMof,GACb,MAAMpG,EAAMjqB,KAAK0lB,MAAMkD,MAAM5oB,KAAK2kB,MAAMzH,IAAKld,KAAK2kB,MAAMzH,IAAMmT,GAC9DrwB,KAAK2kB,MAAMzH,KAAOmT,EAClBrwB,KAAKuuB,YAAYtd,EAAMgZ,EACzB,CACA4G,aACE,MAAMhK,EAAW7mB,KAAK2kB,MAAMkC,SACtBrZ,EAAQxN,KAAK2kB,MAAMnX,MAAQ,EACjC,IAAIsjB,EAASxP,GACT,IACFpE,GACEld,KAAK2kB,MACT,QAAUzH,EAAK,CACb,GAAIA,GAAOld,KAAK8M,OACd,MAAM9M,KAAKwiB,MAAM3E,EAAO3C,mBAAoB,CAC1C3W,GAAIqJ,EAA+BiZ,EAAU,KAGjD,MAAMsC,EAAKnpB,KAAK0lB,MAAMC,WAAWzI,GACjC,GAAIkJ,GAAU+C,GACZ,MAAMnpB,KAAKwiB,MAAM3E,EAAO3C,mBAAoB,CAC1C3W,GAAIqJ,EAA+BiZ,EAAU,KAGjD,GAAIiK,EACFA,GAAU,MACL,CACL,GAAW,KAAP3H,EACF7H,GAAU,OACL,GAAW,KAAP6H,GAAa7H,EACtBA,GAAU,OACL,GAAW,KAAP6H,IAAc7H,EACvB,MAEFwP,EAAiB,KAAP3H,CACZ,CACF,CACA,MAAM4H,EAAU/wB,KAAK0lB,MAAMkD,MAAMpb,EAAO0P,KACtCA,EACF,IAAI8T,EAAO,GACX,MAAM7B,EAAU,IAAMvhB,EAA+BiZ,EAAU3J,EAAM,EAAI1P,GACzE,KAAO0P,EAAMld,KAAK8M,QAAQ,CACxB,MAAMkhB,EAAKhuB,KAAK+tB,eAAe7Q,GACzB+T,EAAO/f,OAAOkO,aAAa4O,GACjC,GAAI3B,GAAkBxM,IAAImO,GACb,MAAPA,GACFhuB,KAAKovB,aAAa,oBAAqBD,KACnC6B,EAAKE,SAAS,MAChBlxB,KAAKwiB,MAAM3E,EAAOhJ,0BAA2B,CAC3CtQ,GAAI4qB,OAGQ,MAAPnB,GACLgD,EAAKE,SAAS,MAChBlxB,KAAKwiB,MAAM3E,EAAOhJ,0BAA2B,CAC3CtQ,GAAI4qB,MAIN6B,EAAKE,SAASD,IAChBjxB,KAAKwiB,MAAM3E,EAAOxK,qBAAsB,CACtC9O,GAAI4qB,UAGH,KAAI9P,GAAiB2O,IAAc,KAAPA,EAKjC,MAJAhuB,KAAKwiB,MAAM3E,EAAOpH,qBAAsB,CACtClS,GAAI4qB,KAIR,GACEjS,EACF8T,GAAQC,CACV,CACAjxB,KAAK2kB,MAAMzH,IAAMA,EACjBld,KAAKuuB,YAAY,IAAK,CACpB4C,QAASJ,EACTxQ,MAAOyQ,GAEX,CACA/F,QAAQ9V,EAAO2V,EAAKC,GAAW,EAAOI,GAAoB,GACxD,MAAM,EACJH,EAAC,IACD9N,GACE+N,GAAQjrB,KAAK0lB,MAAO1lB,KAAK2kB,MAAMzH,IAAKld,KAAK2kB,MAAMiC,UAAW5mB,KAAK2kB,MAAMgC,QAASxR,EAAO2V,EAAKC,EAAUI,EAAmBnrB,KAAKysB,uBAAuB,GAEvJ,OADAzsB,KAAK2kB,MAAMzH,IAAMA,EACV8N,CACT,CACA0F,gBAAgBvb,GACd,MAAM0R,EAAW7mB,KAAK2kB,MAAM8D,cAC5B,IAAI2I,GAAW,EACfpxB,KAAK2kB,MAAMzH,KAAO,EAClB,MAAMyL,EAAM3oB,KAAKirB,QAAQ9V,GACd,MAAPwT,GACF3oB,KAAKwiB,MAAM3E,EAAO3I,aAAc,CAC9B3Q,GAAIqJ,EAA+BiZ,EAAU,GAC7C1R,UAGJ,MAAMuN,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAC9C,GAAa,MAATwF,IACA1iB,KAAK2kB,MAAMzH,IACbkU,GAAW,OACN,GAAa,MAAT1O,EACT,MAAM1iB,KAAKwiB,MAAM3E,EAAO5I,eAAgB,CACtC1Q,GAAIsiB,IAGR,GAAI3H,GAAkBlf,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,MACnD,MAAMld,KAAKwiB,MAAM3E,EAAO9F,iBAAkB,CACxCxT,GAAIvE,KAAK2kB,MAAM8D,gBAGnB,GAAI2I,EAAJ,CACE,MAAMnH,EAAMjqB,KAAK0lB,MAAMkD,MAAM/B,EAASxZ,MAAOrN,KAAK2kB,MAAMzH,KAAKmU,QAAQ,QAAS,IAC9ErxB,KAAKuuB,YAAY,IAAKtE,EAExB,MACAjqB,KAAKuuB,YAAY,IAAK5F,EACxB,CACA6G,WAAW8B,GACT,MAAM9jB,EAAQxN,KAAK2kB,MAAMzH,IACnB2J,EAAW7mB,KAAK2kB,MAAM8D,cAC5B,IAAI8I,GAAU,EACVH,GAAW,EACXI,GAAY,EACZC,GAAc,EACdC,GAAU,EACTJ,GAAsC,OAArBtxB,KAAKirB,QAAQ,KACjCjrB,KAAKwiB,MAAM3E,EAAOjI,cAAe,CAC/BrR,GAAIvE,KAAK2kB,MAAM8D,gBAGnB,MAAMkJ,EAAiB3xB,KAAK2kB,MAAMzH,IAAM1P,GAAS,GAAsC,KAAjCxN,KAAK0lB,MAAMC,WAAWnY,GAC5E,GAAImkB,EAAgB,CAClB,MAAMC,EAAU5xB,KAAK0lB,MAAMkD,MAAMpb,EAAOxN,KAAK2kB,MAAMzH,KAInD,GAHAld,KAAK6sB,uBAAuBhP,EAAOQ,mBAAoB,CACrD9Z,GAAIsiB,KAED7mB,KAAK2kB,MAAM+B,OAAQ,CACtB,MAAMmL,EAAgBD,EAAQ7kB,QAAQ,KAClC8kB,EAAgB,GAClB7xB,KAAKwiB,MAAM3E,EAAOpC,0BAA2B,CAC3ClX,GAAIqJ,EAA+BiZ,EAAUgL,IAGnD,CACAH,EAAUC,IAAmB,OAAOxS,KAAKyS,EAC3C,CACA,IAAIlP,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAwC5C,GAvCa,KAATwF,GAAgBgP,MAChB1xB,KAAK2kB,MAAMzH,IACbld,KAAKirB,QAAQ,IACbsG,GAAU,EACV7O,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,MAE5B,KAATwF,GAAwB,MAATA,GAAkBgP,IACpChP,EAAO1iB,KAAK0lB,MAAMC,aAAa3lB,KAAK2kB,MAAMzH,KAC7B,KAATwF,GAAwB,KAATA,KACf1iB,KAAK2kB,MAAMzH,IAEU,OAArBld,KAAKirB,QAAQ,KACfjrB,KAAKwiB,MAAM3E,EAAOhI,yBAA0B,CAC1CtR,GAAIsiB,IAGR0K,GAAU,EACVE,GAAc,EACd/O,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,MAE7B,MAATwF,KACE6O,GAAWI,IACb3xB,KAAKwiB,MAAM3E,EAAO/I,qBAAsB,CACtCvQ,GAAIsiB,MAGN7mB,KAAK2kB,MAAMzH,IACbkU,GAAW,GAEA,MAAT1O,IACF1iB,KAAKovB,aAAa,UAAWpvB,KAAK2kB,MAAM8D,gBACpCgJ,GAAeE,IACjB3xB,KAAKwiB,MAAM3E,EAAO5I,eAAgB,CAChC1Q,GAAIsiB,MAGN7mB,KAAK2kB,MAAMzH,IACbsU,GAAY,GAEVtS,GAAkBlf,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,MACnD,MAAMld,KAAKwiB,MAAM3E,EAAO9F,iBAAkB,CACxCxT,GAAIvE,KAAK2kB,MAAM8D,gBAGnB,MAAMwB,EAAMjqB,KAAK0lB,MAAMkD,MAAMpb,EAAOxN,KAAK2kB,MAAMzH,KAAKmU,QAAQ,SAAU,IACtE,GAAID,EAEF,YADApxB,KAAKuuB,YAAY,IAAKtE,GAGxB,GAAIuH,EAEF,YADAxxB,KAAKuuB,YAAY,IAAKtE,GAGxB,MAAMtB,EAAM+I,EAAU7G,SAASZ,EAAK,GAAK6H,WAAW7H,GACpDjqB,KAAKuuB,YAAY,IAAK5F,EACxB,CACA2B,cAAcF,GACZ,MAAM,KACJ7a,EAAI,IACJ2N,GACEoN,GAActqB,KAAK0lB,MAAO1lB,KAAK2kB,MAAMzH,IAAKld,KAAK2kB,MAAMiC,UAAW5mB,KAAK2kB,MAAMgC,QAASyD,EAAgBpqB,KAAK2sB,6BAE7G,OADA3sB,KAAK2kB,MAAMzH,IAAMA,EACV3N,CACT,CACAohB,WAAWoB,GACT,MAAM,IACJ9H,EAAG,IACH/M,EAAG,QACHyJ,EAAO,UACPC,GACE0C,GAA6B,KAAVyI,EAAe,SAAW,SAAU/xB,KAAK0lB,MAAO1lB,KAAK2kB,MAAMzH,IAAM,EAAGld,KAAK2kB,MAAMiC,UAAW5mB,KAAK2kB,MAAMgC,QAAS3mB,KAAK4sB,yCAC1I5sB,KAAK2kB,MAAMzH,IAAMA,EAAM,EACvBld,KAAK2kB,MAAMiC,UAAYA,EACvB5mB,KAAK2kB,MAAMgC,QAAUA,EACrB3mB,KAAKuuB,YAAY,IAAKtE,EACxB,CACA+H,2BACOhyB,KAAK2qB,MAAM,IACd3qB,KAAK+V,WAAW,KAAM,GAExB/V,KAAK2kB,MAAMzH,MACXld,KAAKywB,mBACP,CACAA,oBACE,MAAMwB,EAAUjyB,KAAK0lB,MAAM1lB,KAAK2kB,MAAMzH,MAChC,IACJ+M,EAAG,gBACHN,EAAe,IACfzM,EAAG,QACHyJ,EAAO,UACPC,GACE0C,GAAmB,WAAYtpB,KAAK0lB,MAAO1lB,KAAK2kB,MAAMzH,IAAM,EAAGld,KAAK2kB,MAAMiC,UAAW5mB,KAAK2kB,MAAMgC,QAAS3mB,KAAK8sB,2CAClH9sB,KAAK2kB,MAAMzH,IAAMA,EAAM,EACvBld,KAAK2kB,MAAMiC,UAAYA,EACvB5mB,KAAK2kB,MAAMgC,QAAUA,EACjBgD,IACF3pB,KAAK2kB,MAAM0D,8BAAgC,IAAInb,EAASyc,EAAgBhD,QAASgD,EAAgBzM,IAAMyM,EAAgB/C,UAAW+C,EAAgBzM,MAEhH,KAAhCld,KAAK0lB,MAAMsK,YAAY9S,GACzBld,KAAKuuB,YAAY,GAAI5E,EAAkB,KAAOsI,EAAUhI,EAAM,MAE9DjqB,KAAK2kB,MAAMzH,MACXld,KAAKuuB,YAAY,GAAI5E,EAAkB,KAAOsI,EAAUhI,EAAM,MAElE,CACA4C,uBAAuBuB,GAAc,GACnC7pB,IAEA,MAAM8I,EAAQ9I,EAAG8I,MACbrN,KAAK2kB,MAAM+B,SAAW1mB,KAAK2kB,MAAM2D,aAAazI,IAAIxS,GACpDrN,KAAKwiB,MAAM4L,EAAc,CACvB7pB,OAGFvE,KAAK2kB,MAAM2D,aAAa5mB,IAAI2L,EAAO,CAAC+gB,EAAc7pB,GAEtD,CACA8qB,UAAU6C,GACRlyB,KAAK2kB,MAAMyD,aAAc,EACzB,IAAI1I,EAAO,GACX,MAAMlS,EAAQxN,KAAK2kB,MAAMzH,IACzB,IAAI0M,EAAa5pB,KAAK2kB,MAAMzH,IAI5B,SAHkBve,IAAduzB,IACFlyB,KAAK2kB,MAAMzH,KAAOgV,GAAa,MAAS,EAAI,GAEvClyB,KAAK2kB,MAAMzH,IAAMld,KAAK8M,QAAQ,CACnC,MAAMqc,EAAKnpB,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,KAC1C,GAAImC,GAAiB8J,GACnBnpB,KAAK2kB,MAAMzH,KAAOiM,GAAM,MAAS,EAAI,MAChC,IAAW,KAAPA,EAwBT,MAxBoB,CACpBnpB,KAAK2kB,MAAMyD,aAAc,EACzB1I,GAAQ1f,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,KAChD,MAAMiV,EAAWnyB,KAAK2kB,MAAM8D,cACtB2J,EAAkBpyB,KAAK2kB,MAAMzH,MAAQ1P,EAAQ0R,GAAoBG,GACvE,GAAgD,MAA5Crf,KAAK0lB,MAAMC,aAAa3lB,KAAK2kB,MAAMzH,KAAc,CACnDld,KAAKwiB,MAAM3E,EAAO1G,qBAAsB,CACtC5S,GAAIvE,KAAK2kB,MAAM8D,gBAEjBmB,EAAa5pB,KAAK2kB,MAAMzH,IAAM,EAC9B,QACF,GACEld,KAAK2kB,MAAMzH,IACb,MAAMmV,EAAMryB,KAAKsqB,eAAc,GACnB,OAAR+H,IACGD,EAAgBC,IACnBryB,KAAKwiB,MAAM3E,EAAOtK,2BAA4B,CAC5ChP,GAAI4tB,IAGRzS,GAAQxO,OAAOqZ,cAAc8H,IAE/BzI,EAAa5pB,KAAK2kB,MAAMzH,GAC1B,CAEA,CACF,CACA,OAAOwC,EAAO1f,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,IACxD,CACA0T,SAASsB,GACP,MAAMxS,EAAO1f,KAAKqvB,UAAU6C,GACtBjhB,EAAO7P,EAAWgN,IAAIsR,QACf/gB,IAATsS,EACFjR,KAAKuuB,YAAYtd,EAAMhF,EAAegF,IAEtCjR,KAAKuuB,YAAY,IAAK7O,EAE1B,CACAsN,sBACE,MAAM,KACJ/b,GACEjR,KAAK2kB,MACL3Y,EAAeiF,IAASjR,KAAK2kB,MAAMyD,aACrCpoB,KAAKwiB,MAAM3E,EAAOvI,2BAA4B,CAC5C/Q,GAAIvE,KAAK2kB,MAAMkC,SACftR,aAActJ,EAAegF,IAGnC,CACAuR,MAAM4L,EAAckE,GAClB,MAAM,GACF/tB,GACE+tB,EACJvV,EAAU1Q,EAA8BimB,EAAiBpG,IAErDqG,EAAQnE,EAAa,CACzBtR,IAFUvY,aAAc2I,EAAW3I,EAAKA,EAAGuY,IAAItP,MAG/CuP,YAEF,IAAK/c,KAAKwB,QAAQ/B,cAAe,MAAM8yB,EAEvC,OADKvyB,KAAKwsB,aAAaxsB,KAAK2kB,MAAMoC,OAAOxkB,KAAKgwB,GACvCA,CACT,CACAC,eAAepE,EAAckE,GAC3B,MAAM,GACF/tB,GACE+tB,EACJvV,EAAU1Q,EAA8BimB,EAAiBnG,IACrDrP,EAAMvY,aAAc2I,EAAW3I,EAAKA,EAAGuY,IAAItP,MAC3C0P,EAAMJ,EAAIzP,MACV0Z,EAAS/mB,KAAK2kB,MAAMoC,OAC1B,IAAK,IAAIta,EAAIsa,EAAOja,OAAS,EAAGL,GAAK,EAAGA,IAAK,CAC3C,MAAM8lB,EAAQxL,EAAOta,GACrB,GAAI8lB,EAAMzV,IAAIzP,QAAU6P,EACtB,OAAO6J,EAAOta,GAAK2hB,EAAa,CAC9BtR,MACAC,YAGJ,GAAIwV,EAAMzV,IAAIzP,MAAQ6P,EAAK,KAC7B,CACA,OAAOld,KAAKwiB,MAAM4L,EAAckE,EAClC,CACAnxB,cAAc4tB,GAAW,CACzBhZ,WAAW+G,EAAK7L,GACd,MAAMjR,KAAKwiB,MAAM3E,EAAOzD,gBAAiB,CACvCC,SAAUpJ,EAAOhF,EAAegF,GAAQ,KACxC1M,GAAW,MAAPuY,EAAcA,EAAM9c,KAAK2kB,MAAMkC,UAEvC,CACAuI,aAAa5L,EAAY1G,GACvB,GAAI9c,KAAKsjB,UAAUE,GACjB,OAAO,EAET,MAAMxjB,KAAKwiB,MAAM3E,EAAOhH,cAAe,CACrCtS,GAAW,MAAPuY,EAAcA,EAAM9c,KAAK2kB,MAAMkC,SACnC/P,cAAe,CAAC0M,IAEpB,CACAiP,gBAAgBC,GACd,IAAKA,EAAYC,MAAKpxB,GAAQvB,KAAKsjB,UAAU/hB,KAC3C,MAAMvB,KAAKwiB,MAAM3E,EAAO3G,oBAAqB,CAC3C3S,GAAIvE,KAAK2kB,MAAMkC,SACf/P,cAAe4b,GAGrB,CACAhG,aAAa6F,GACX,MAAO,CAACrV,EAAK0J,EAAWD,KACtB3mB,KAAKwiB,MAAM+P,EAAO,CAChBhuB,GAAI6nB,GAAclP,EAAK0J,EAAWD,IAClC,CAEN,EAEF,MAAMiM,GACJ/yB,cACEG,KAAK6yB,aAAe,IAAIlX,IACxB3b,KAAK8yB,cAAgB,IAAIzxB,IACzBrB,KAAK+yB,sBAAwB,IAAI1xB,GACnC,EAEF,MAAM2xB,GACJnzB,YAAY+gB,GACV5gB,KAAK4gB,YAAS,EACd5gB,KAAKizB,MAAQ,GACbjzB,KAAK+yB,sBAAwB,IAAI1xB,IACjCrB,KAAK4gB,OAASA,CAChB,CACAsS,UACE,OAAOlzB,KAAKizB,MAAMjzB,KAAKizB,MAAMnmB,OAAS,EACxC,CACA+U,QACE7hB,KAAKizB,MAAM1wB,KAAK,IAAIqwB,GACtB,CACA9Q,OACE,MAAMqR,EAAgBnzB,KAAKizB,MAAMhmB,MAC3BimB,EAAUlzB,KAAKkzB,UACrB,IAAK,MAAO3xB,EAAMub,KAAQQ,MAAM8V,KAAKD,EAAcJ,uBAC7CG,EACGA,EAAQH,sBAAsBlT,IAAIte,IACrC2xB,EAAQH,sBAAsBrxB,IAAIH,EAAMub,GAG1C9c,KAAK4gB,OAAO4B,MAAM3E,EAAO5H,8BAA+B,CACtD1R,GAAIuY,EACJnP,eAAgBpM,GAIxB,CACA8xB,mBAAmB9xB,EAAM+xB,EAAaxW,GACpC,MAAM,aACJ+V,EAAY,cACZC,EAAa,sBACbC,GACE/yB,KAAKkzB,UACT,IAAIK,EAAYV,EAAahT,IAAIte,GACjC,GAn4D4BiyB,EAm4DxBF,EAA2C,CAC7C,MAAMG,EAAWF,GAAaT,EAAc1kB,IAAI7M,GAC5CkyB,GAKFF,GA14DwBC,EAw4DRC,KAx4DQD,EAy4DRF,KA54DU,EAy4DRG,KAz4DQ,EA04DRH,GAIbC,GAAWT,EAAcxQ,OAAO/gB,IAC3BgyB,GACVT,EAAcpxB,IAAIH,EAAM+xB,EAE5B,CACIC,GACFvzB,KAAK4gB,OAAO4B,MAAM3E,EAAOpF,yBAA0B,CACjDlU,GAAIuY,EACJnP,eAAgBpM,IAGpBsxB,EAAa1Q,IAAI5gB,GACjBwxB,EAAsBzQ,OAAO/gB,EAC/B,CACAmyB,eAAenyB,EAAMub,GACnB,IAAI6W,EACJ,IAAKA,KAAc3zB,KAAKizB,MACtB,GAAIU,EAAWd,aAAahT,IAAIte,GAAO,OAErCoyB,EACFA,EAAWZ,sBAAsBrxB,IAAIH,EAAMub,GAE3C9c,KAAK4gB,OAAO4B,MAAM3E,EAAO5H,8BAA+B,CACtD1R,GAAIuY,EACJnP,eAAgBpM,GAGtB,EAMF,MAAMqyB,GACJ/zB,YAAYoR,EALM,GAMhBjR,KAAKiR,UAAO,EACZjR,KAAKiR,KAAOA,CACd,CACA4iB,iCACE,OARqC,IAQ9B7zB,KAAKiR,MAToB,IAS6BjR,KAAKiR,IACpE,CACA6iB,kCACE,OAVsB,IAUf9zB,KAAKiR,IACd,EAEF,MAAM8iB,WAA8BH,GAClC/zB,YAAYoR,GACV+R,MAAM/R,GACNjR,KAAKg0B,kBAAoB,IAAI3yB,GAC/B,CACA4yB,uBAAuBC,GAAmB,GACxC3vB,IAEA,MAAM8I,EAAQ9I,EAAG8I,MACjBrN,KAAKg0B,kBAAkBtyB,IAAI2L,EAAO,CAAC6mB,EAAmB3vB,GACxD,CACA4vB,sBAAsB9mB,GACpBrN,KAAKg0B,kBAAkB1R,OAAOjV,EAChC,CACA+mB,cAAcC,GACZr0B,KAAKg0B,kBAAkB7F,QAAQkG,EACjC,EAEF,MAAMC,GACJz0B,YAAY+gB,GACV5gB,KAAK4gB,YAAS,EACd5gB,KAAKizB,MAAQ,CAAC,IAAIW,IAClB5zB,KAAK4gB,OAASA,CAChB,CACAiB,MAAME,GACJ/hB,KAAKizB,MAAM1wB,KAAKwf,EAClB,CACAD,OACE9hB,KAAKizB,MAAMhmB,KACb,CACAsnB,gCAAgCnG,GAC9B7pB,GAAIka,IAEJ,MAAM+V,EAAS,CACbjwB,GAAIka,EAAK3B,IAAItP,QAET,MACJylB,GACEjzB,KACJ,IAAIyM,EAAIwmB,EAAMnmB,OAAS,EACnBiV,EAAQkR,EAAMxmB,GAClB,MAAQsV,EAAM+R,mCAAmC,CAC/C,IAAI/R,EAAM8R,iCAGR,OAFA9R,EAAMkS,uBAAuB7F,EAAcoG,GAI7CzS,EAAQkR,IAAQxmB,EAClB,CACAzM,KAAK4gB,OAAO4B,MAAM4L,EAAcoG,EAClC,CACAC,iCAAiClC,GAC/BhuB,GAAIka,IAEJ,MAAM,MACJwU,GACEjzB,KACE+hB,EAAQkR,EAAMA,EAAMnmB,OAAS,GAC7B0nB,EAAS,CACbjwB,GAAIka,EAAK3B,IAAItP,OAEf,GAAIuU,EAAM+R,kCACR9zB,KAAK4gB,OAAO4B,MAAM+P,EAAOiC,OACpB,KAAIzS,EAAM8R,iCAGf,OAFA9R,EAAMkS,uBAAuB1B,EAAOiC,EAGtC,CACF,CACAE,iCAAgC,GAC9BnwB,IAEA,MAAM,MACJ0uB,GACEjzB,KACJ,IAAIyM,EAAIwmB,EAAMnmB,OAAS,EACnBiV,EAAQkR,EAAMxmB,GAClB,KAAOsV,EAAM8R,kCA3FwB,IA4F/B9R,EAAM9Q,MACR8Q,EAAMkS,uBAAuBpW,EAAOrM,uBAAwB,CAC1DjN,OAGJwd,EAAQkR,IAAQxmB,EAEpB,CACAkoB,oBACE,MAAM,MACJ1B,GACEjzB,KACEghB,EAAeiS,EAAMA,EAAMnmB,OAAS,GACrCkU,EAAa6S,kCAClB7S,EAAaoT,eAAc,EAAEhG,EAActR,MACzC9c,KAAK4gB,OAAO4B,MAAM4L,EAAc,CAC9B7pB,GAAIuY,IAEN,IAAIrQ,EAAIwmB,EAAMnmB,OAAS,EACnBiV,EAAQkR,EAAMxmB,GAClB,KAAOsV,EAAM8R,kCACX9R,EAAMoS,sBAAsBrX,EAAIzP,OAChC0U,EAAQkR,IAAQxmB,EAClB,GAEJ,EAWF,SAASmoB,KACP,OAAO,IAAIhB,EACb,CACA,MACEiB,GAAc,EACdC,GAAc,EAGhB,MAAMC,GACJl1B,cACEG,KAAKg1B,OAAS,EAChB,CACAnT,MAAMtB,GACJvgB,KAAKg1B,OAAOzyB,KAAKge,EACnB,CACAuB,OACE9hB,KAAKg1B,OAAO/nB,KACd,CACAgoB,eACE,OAAOj1B,KAAKg1B,OAAOh1B,KAAKg1B,OAAOloB,OAAS,EAC1C,CACIooB,eACF,OAAQl1B,KAAKi1B,eAAiBH,IAAe,CAC/C,CACIK,eACF,OAAQn1B,KAAKi1B,eAAiBJ,IAAe,CAC/C,CACIO,gBACF,OAtBa,EAsBLp1B,KAAKi1B,gBAAiC,CAChD,CACII,YACF,OAxBS,EAwBDr1B,KAAKi1B,gBAA6B,CAC5C,EAEF,SAASK,GAAcC,EAASC,GAC9B,OAAQD,EAAUT,GAAc,IAAMU,EAAcX,GAAc,EACpE,CACA,MAAMY,WAAmBlJ,GACvBmJ,SAASjX,EAAMjS,EAAK+B,EAAOQ,GAAa,GACtC,IAAK0P,EAAM,OACX,MAAMkX,EAAQlX,EAAKkX,MAAQlX,EAAKkX,OAAS,CAAC,EACtC5mB,EACF4mB,EAAMnpB,GAAO+B,EAEb3B,OAAOsC,eAAeymB,EAAOnpB,EAAK,CAChCuC,aACAR,SAGN,CACAqnB,aAAa91B,GACX,OAAOE,KAAK2kB,MAAM1T,OAASnR,IAAUE,KAAK2kB,MAAMyD,WAClD,CACAyN,qBAAqBC,EAAWv0B,GAC9B,MAAMw0B,EAAUD,EAAYv0B,EAAKuL,OACjC,GAAI9M,KAAK0lB,MAAMkD,MAAMkN,EAAWC,KAAax0B,EAAM,CACjD,MAAMy0B,EAASh2B,KAAK0lB,MAAMC,WAAWoQ,GACrC,QAAS1W,GAAiB2W,IAAiC,QAAZ,MAATA,GACxC,CACA,OAAO,CACT,CACAC,sBAAsB10B,GACpB,MAAMmhB,EAAO1iB,KAAKwtB,iBAClB,OAAOxtB,KAAK61B,qBAAqBnT,EAAMnhB,EACzC,CACA20B,cAAcp2B,GACZ,QAAIE,KAAK41B,aAAa91B,KACpBE,KAAK0iB,QACE,EAGX,CACAyT,iBAAiBr2B,EAAOsuB,GACtB,IAAKpuB,KAAKk2B,cAAcp2B,GAAQ,CAC9B,GAAoB,MAAhBsuB,EACF,MAAMpuB,KAAKwiB,MAAM4L,EAAc,CAC7B7pB,GAAIvE,KAAK2kB,MAAMkC,WAGnB7mB,KAAK+V,WAAW,KAAMjW,EACxB,CACF,CACAs2B,qBACE,OAAOp2B,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,IAAM3qB,KAAKq2B,uBAClD,CACAA,wBACE,OAAOnQ,GAAU/G,KAAKnf,KAAK0lB,MAAMkD,MAAM5oB,KAAK2kB,MAAMqD,cAAc3a,MAAOrN,KAAK2kB,MAAMnX,OACpF,CACA8oB,wBAEE,OADA/P,GAA0BmH,UAAY1tB,KAAK2kB,MAAMlX,IAC1C8Y,GAA0BpH,KAAKnf,KAAK0lB,MAC7C,CACA6Q,mBACE,OAAOv2B,KAAKktB,IAAI,KAAOltB,KAAKo2B,oBAC9B,CACAI,UAAUC,GAAW,IACfA,EAAWz2B,KAAKu2B,mBAAqBv2B,KAAKktB,IAAI,MAClDltB,KAAKwiB,MAAM3E,EAAOjH,iBAAkB,CAClCrS,GAAIvE,KAAK2kB,MAAMqD,eAEnB,CACA0O,OAAOzlB,EAAM6L,GACX9c,KAAKktB,IAAIjc,IAASjR,KAAK+V,WAAW+G,EAAK7L,EACzC,CACA0lB,SAASC,EAAIC,EAAW72B,KAAK2kB,MAAM3H,SACjC,MAAM8Z,EAAc,CAClBrY,KAAM,MAER,IACE,MAAMA,EAAOmY,GAAG,CAACnY,EAAO,QAEtB,MADAqY,EAAYrY,KAAOA,EACbqY,CAAW,IAEnB,GAAI92B,KAAK2kB,MAAMoC,OAAOja,OAAS+pB,EAAS9P,OAAOja,OAAQ,CACrD,MAAMiqB,EAAY/2B,KAAK2kB,MAGvB,OAFA3kB,KAAK2kB,MAAQkS,EACb72B,KAAK2kB,MAAM4D,aAAewO,EAAUxO,aAC7B,CACL9J,OACA8T,MAAOwE,EAAUhQ,OAAO8P,EAAS9P,OAAOja,QACxCkqB,QAAQ,EACRC,SAAS,EACTF,YAEJ,CACA,MAAO,CACLtY,OACA8T,MAAO,KACPyE,QAAQ,EACRC,SAAS,EACTF,UAAW,KAEf,CAAE,MAAOxE,GACP,MAAMwE,EAAY/2B,KAAK2kB,MAEvB,GADA3kB,KAAK2kB,MAAQkS,EACTtE,aAAiBvkB,YACnB,MAAO,CACLyQ,KAAM,KACN8T,QACAyE,QAAQ,EACRC,SAAS,EACTF,aAGJ,GAAIxE,IAAUuE,EACZ,MAAO,CACLrY,KAAMqY,EAAYrY,KAClB8T,MAAO,KACPyE,QAAQ,EACRC,SAAS,EACTF,aAGJ,MAAMxE,CACR,CACF,CACA2E,sBAAsBC,EAAqBC,GACzC,IAAKD,EAAqB,OAAO,EACjC,MAAM,mBACJE,EAAkB,eAClBC,EAAc,cACdC,EAAa,sBACbC,GACEL,EAEJ,IAAKC,EACH,SAFkBC,GAAwBC,GAAoBE,GAA2BD,GAIjE,MAAtBF,GACFr3B,KAAKwiB,MAAM3E,EAAO7I,4BAA6B,CAC7CzQ,GAAI8yB,IAGc,MAAlBC,GACFt3B,KAAKwiB,MAAM3E,EAAOzK,eAAgB,CAChC7O,GAAI+yB,IAGa,MAAjBC,GACFv3B,KAAKwiB,MAAM3E,EAAO5D,uBAAwB,CACxC1V,GAAIgzB,IAGqB,MAAzBC,GACFx3B,KAAK+V,WAAWyhB,EAEpB,CACAC,wBACE,OAAO5rB,EAA2B7L,KAAK2kB,MAAM1T,KAC/C,CACAymB,cAAcjZ,GACZ,MAAqB,gBAAdA,EAAKxN,IACd,CACA0mB,iBAAiBlZ,GACf,OAAOA,EAAKmE,GAAGrhB,IACjB,CACAq2B,yBAAyBnZ,GACvB,OAAsB,qBAAdA,EAAKxN,MAA6C,6BAAdwN,EAAKxN,OAAwCjR,KAAK03B,cAAcjZ,EAAKoZ,SACnH,CACAC,iBAAiBrZ,GACf,MAAqB,mBAAdA,EAAKxN,IACd,CACA8mB,eAAetZ,GACb,MAAqB,iBAAdA,EAAKxN,IACd,CACA+mB,iBAAiBrY,EAAuC,WAA5B3f,KAAKwB,QAAQ/C,YACvC,MAAMw5B,EAAYj4B,KAAK2kB,MAAMoD,OAC7B/nB,KAAK2kB,MAAMoD,OAAS,GACpB,MAAMmQ,EAAyBl4B,KAAKm4B,oBACpCn4B,KAAKm4B,oBAAsB,IAAIxc,IAC/B,MAAMyc,EAAcp4B,KAAK2f,SACzB3f,KAAK2f,SAAWA,EAChB,MAAM0Y,EAAWr4B,KAAK+hB,MAChBpB,EAAe3gB,KAAKs4B,kBAC1Bt4B,KAAK+hB,MAAQ,IAAIpB,EAAa3gB,KAAM2f,GACpC,MAAM4Y,EAAev4B,KAAKw4B,UAC1Bx4B,KAAKw4B,UAAY,IAAIzD,GACrB,MAAM5B,EAAgBnzB,KAAK2zB,WAC3B3zB,KAAK2zB,WAAa,IAAIX,GAAkBhzB,MACxC,MAAMy4B,EAAqBz4B,KAAK04B,gBAEhC,OADA14B,KAAK04B,gBAAkB,IAAIpE,GAAuBt0B,MAC3C,KACLA,KAAK2kB,MAAMoD,OAASkQ,EACpBj4B,KAAKm4B,oBAAsBD,EAC3Bl4B,KAAK2f,SAAWyY,EAChBp4B,KAAK+hB,MAAQsW,EACbr4B,KAAKw4B,UAAYD,EACjBv4B,KAAK2zB,WAAaR,EAClBnzB,KAAK04B,gBAAkBD,CAAkB,CAE7C,CACAE,qBACE,IAAIC,EArOM,EAsON54B,KAAK2f,WACPiZ,GAAc9D,IAEhB90B,KAAK+hB,MAAMF,MA/zEG,GAg0Ed7hB,KAAKw4B,UAAU3W,MAAM+W,EACvB,CACAC,0BAA0B1B,GACxB,MAAM,cACJI,GACEJ,EACkB,OAAlBI,GACFv3B,KAAKovB,aAAa,uBAAwBmI,EAE9C,EAEF,MAAMuB,GACJj5B,cACEG,KAAKq3B,mBAAqB,KAC1Br3B,KAAKs3B,eAAiB,KACtBt3B,KAAKu3B,cAAgB,KACrBv3B,KAAKw3B,sBAAwB,IAC/B,EAEF,MAAMuB,GACJl5B,YAAY+gB,EAAQ1D,EAAKJ,GACvB9c,KAAKiR,KAAO,GACZjR,KAAKwN,MAAQ0P,EACbld,KAAKyN,IAAM,EACXzN,KAAK8c,IAAM,IAAIvP,EAAeuP,GAChB,MAAV8D,GAAkBA,EAAOpf,QAAQlC,SAAQU,KAAKg5B,MAAQ,CAAC9b,EAAK,IAClD,MAAV0D,GAAkBA,EAAOlT,WAAU1N,KAAK8c,IAAIpP,SAAWkT,EAAOlT,SACpE,EAEF,MAAMurB,GAAgBF,GAAKG,UAiB3B,SAASC,GAAgB1a,GACvB,MAAM,KACJxN,EAAI,MACJzD,EAAK,IACLC,EAAG,IACHqP,EAAG,MACHkc,EAAK,MACLrD,EAAK,KACLp0B,GACEkd,EACE2a,EAASxsB,OAAOysB,OAAOJ,IAW7B,OAVAG,EAAOnoB,KAAOA,EACdmoB,EAAO5rB,MAAQA,EACf4rB,EAAO3rB,IAAMA,EACb2rB,EAAOtc,IAAMA,EACbsc,EAAOJ,MAAQA,EACfI,EAAOzD,MAAQA,EACfyD,EAAO73B,KAAOA,EACD,gBAAT0P,IACFmoB,EAAOE,aAAe7a,EAAK6a,cAEtBF,CACT,CArCEH,GAAcM,QAAU,WACtB,MAAMC,EAAU,IAAIT,QAAKp6B,EAAWqB,KAAKwN,MAAOxN,KAAK8c,IAAItP,OACnDX,EAAOD,OAAOC,KAAK7M,MACzB,IAAK,IAAIyM,EAAI,EAAGK,EAASD,EAAKC,OAAQL,EAAIK,EAAQL,IAAK,CACrD,MAAMD,EAAMK,EAAKJ,GACL,oBAARD,GAAqC,qBAARA,GAAsC,kBAARA,IAC7DgtB,EAAQhtB,GAAOxM,KAAKwM,GAExB,CACA,OAAOgtB,CACT,EAsDF,MAAMC,WAAkBhE,GACtBiE,YACE,OAAO,IAAIX,GAAK/4B,KAAMA,KAAK2kB,MAAMnX,MAAOxN,KAAK2kB,MAAMkC,SACrD,CACA8S,YAAY7c,GACV,OAAO,IAAIic,GAAK/4B,KAAM8c,EAAIzP,MAAOyP,EACnC,CACA8c,gBAAgB3oB,GACd,OAAOjR,KAAK25B,YAAY1oB,EAAK6L,IAAItP,MACnC,CACAqsB,WAAWpb,EAAMxN,GACf,OAAOjR,KAAK85B,aAAarb,EAAMxN,EAAMjR,KAAK2kB,MAAMqD,cAClD,CACA8R,aAAarb,EAAMxN,EAAM6V,GAMvB,OALArI,EAAKxN,KAAOA,EACZwN,EAAKhR,IAAMqZ,EAAOzZ,MAClBoR,EAAK3B,IAAIrP,IAAMqZ,EACX9mB,KAAKwB,QAAQlC,SAAQmf,EAAKua,MAAM,GAAKlS,EAAOzZ,OAC5CrN,KAAKwB,QAAQ9B,eAAeM,KAAK4kB,eAAenG,GAC7CA,CACT,CACAsb,mBAAmBtb,EAAMoI,GACvBpI,EAAKjR,MAAQqZ,EAASxZ,MACtBoR,EAAK3B,IAAItP,MAAQqZ,EACb7mB,KAAKwB,QAAQlC,SAAQmf,EAAKua,MAAM,GAAKnS,EAASxZ,MACpD,CACA2sB,iBAAiBvb,EAAMqI,EAAS9mB,KAAK2kB,MAAMqD,eACzCvJ,EAAKhR,IAAMqZ,EAAOzZ,MAClBoR,EAAK3B,IAAIrP,IAAMqZ,EACX9mB,KAAKwB,QAAQlC,SAAQmf,EAAKua,MAAM,GAAKlS,EAAOzZ,MAClD,CACA4sB,2BAA2Bxb,EAAMyb,GAC/Bl6B,KAAK+5B,mBAAmBtb,EAAMyb,EAAapd,IAAItP,MACjD,EAEF,MAAM2sB,GAAgB,IAAIxe,IAAI,CAAC,IAAK,MAAO,OAAQ,UAAW,QAAS,UAAW,QAAS,YAAa,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAQ,SAAU,SACnKye,GAAajd,CAAc,OAAO,CACtCkd,0BAA2B,iFAC3BC,2BAA4B,yKAC5BC,mBAAoB,EAClBC,kBACI,kCAAkCA,KACxCC,oBAAqB,0DACrBC,6BAA8B,sEAC9BC,8BAA+B,gDAC/BC,gCAAiC,EAC/BC,aACAC,cACI,6DAA6DD,oBAA6BA,0BAAmCC,OACnIC,wBAAyB,EACvBF,aACAC,cACI,uDAAuDD,8CAAuDC,OACpHE,6BAA8B,EAC5BF,cACI,UAAUA,yKAChBG,wBAAyB,EACvBC,kBACAJ,cACI,eAAeI,6FAA2GJ,OAChIK,uCAAwC,EACtCL,cACI,4GAA4GA,OAClHM,wCAAyC,EACvCN,WACAD,aACAQ,kBACI,UAAUP,kBAAyBO,gCAA2CR,qBAA8BQ,aAClHC,uCAAwC,EACtCR,WACAD,gBACI,oDAAoDA,kBAA2BC,OACrFS,wCAAyC,EACvCT,WACAD,gBACI,qCAAqCA,6EAAsFC,OACjIU,sBAAuB,EACrBV,WACAD,aACAY,gBACI,qFAAqFZ,yBAAkCY,kBAA2BX,OACxJY,+BAAgC,EAC9BZ,WACAD,gBACI,sDAAsDA,qBAA8BC,OAC1Fa,0CAA2C,EACzCb,cACI,2GAA2GA,OACjHc,0BAA2B,2CAC3BC,8BAA+B,yEAC/BC,oCAAqC,yKACrCC,mBAAoB,8EACpBC,uBAAwB,2EACxBC,gBAAiB,gDACjBC,oCAAqC,0FACrCC,wBAAyB,0GACzBC,oBAAqB,mEACrBC,kBAAmB,0DACnBC,kBAAmB1vB,OAAOjI,OAAO,CAC/B2K,QAAS,kFACR,CACDoO,WAAY,2BAEd6e,0BAA2B,2CAC3BC,eAAgB,0CAChBC,4BAA6B,0DAC7BC,6BAA8B,oGAC9BC,0BAA2B,2CAC3BC,qBAAsB,6DACtBC,mBAAoB,qDACpBC,sBAAuB,oHACvBC,kBAAmB,uEACnBC,kCAAmC,uEACnCC,uBAAwB,EACtBzC,kBACI,4BAA4BA,KAClC0C,6BAA8B,yDAC9BC,mCAAoC,wDACpCC,qBAAsB,mEACtBC,6BAA8B,mDAC9BC,kCAAmC,oEACnCC,gDAAiD,oHACjDC,6BAA8B,EAC5BC,wBACAhC,gBACI,oBAAoBgC,+BAAmDhC,eAC7EiC,oCAAqC,oEACrCC,wBAAyB,+BAK3B,SAASC,GAAkBnf,GACzB,MAA2B,SAApBA,EAAKof,YAA6C,WAApBpf,EAAKof,UAC5C,CACA,SAASC,GAAqB7sB,GAC5B,OAAOrF,EAA2BqF,IAAkB,KAATA,CAC7C,CACA,MAAM8sB,GAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACLhtB,KAAM,cACNitB,UAAW,oBAUPC,GAAoB,yBAuzEpBC,GAAW,CACfC,UAAW,KACXC,KAAM,IACNC,IAAK,IACLC,KAAM,IACN54B,GAAI,IACJC,GAAI,IACJ44B,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,KAAM,IACN9/B,MAAO,IACP+/B,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,QAAS,IACTC,GAAI,IACJC,IAAK,IACLC,MAAO,IACPC,IAAK,IACLC,QAAS,IACTC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,QAAS,IACTC,GAAI,IACJC,IAAK,IACLC,OAAQ,IACRC,MAAO,IACPC,IAAK,IACLC,QAAS,IACTC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,SAAU,IACVC,MAAO,IACPC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,GAAI,IACJC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,OAAQ,IACRC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,GAAI,IACJC,MAAO,IACPC,GAAI,IACJC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,KAEHC,GAAY7wB,CAAc,MAAM,CACpC8wB,iBAAkB,+DAClBC,yBAA0B,EACxBC,oBACI,+CAA+CA,MACrDC,0BAA2B,iDAC3BC,6BAA8B,2GAC9Bj0B,gBAAiB,EACfrE,aACAu4B,gBACI,sBAAsBv4B,uBAAgCu4B,cAAuBv4B,SACnFw4B,oBAAqB,iEACrBC,uBAAwB,6BACxBC,6BAA8B,qGAEhC,SAASC,GAAWpgC,GAClB,QAAOA,IAAyB,uBAAhBA,EAAO2C,MAAiD,uBAAhB3C,EAAO2C,KACjE,CACA,SAAS09B,GAAoBrgC,GAC3B,GAAoB,kBAAhBA,EAAO2C,KACT,OAAO3C,EAAO/M,KAEhB,GAAoB,sBAAhB+M,EAAO2C,KACT,OAAO3C,EAAOsgC,UAAUrtC,KAAO,IAAM+M,EAAO/M,KAAKA,KAEnD,GAAoB,wBAAhB+M,EAAO2C,KACT,OAAO09B,GAAoBrgC,EAAOA,QAAU,IAAMqgC,GAAoBrgC,EAAOupB,UAE/E,MAAM,IAAIgX,MAAM,6BAA+BvgC,EAAO2C,KACxD,CA8YA,MAAM69B,WAAwBxuB,GAC5BzgB,eAAekjB,GACbC,SAASD,GACT/iB,KAAKC,MAAQ,IAAI0b,IACjB3b,KAAK+uC,MAAQ,IAAIpzB,IACjB3b,KAAKgvC,WAAa,IAAIrzB,IACtB3b,KAAKivC,QAAU,IAAItzB,IACnB3b,KAAKkvC,mBAAqB,IAAIvzB,GAChC,EAEF,MAAMwzB,WAA+BxuB,GACnC9gB,eAAekjB,GACbC,SAASD,GACT/iB,KAAKovC,aAAe,EACtB,CACAxtB,YAAYrB,GAEV,OADAvgB,KAAKovC,aAAa7sC,KAAK,IAAIoZ,KACpB,IAAImzB,GAAgBvuB,EAC7B,CACAsB,MAAMtB,GACAA,GAASN,IACXjgB,KAAKovC,aAAa7sC,KAAK,IAAIoZ,KAE7BqH,MAAMnB,MAAMtB,EACd,CACAuB,OACE,MAAMvB,EAAQyC,MAAMlB,OAIpB,OAHIvB,GAASN,IACXjgB,KAAKovC,aAAaniC,MAEbsT,CACT,CACA8uB,UAAU9tC,EAAM+tC,GACd,MAAMxkB,EAAM9qB,KAAKovC,aAAatiC,OAC9B,GAAI9M,KAAKovC,aAAatkB,EAAM,GAAGjL,IAAIte,GACjC,OAAO,EAET,IAAK+tC,GAAexkB,EAAM,EACxB,IAAK,IAAIre,EAAI,EAAGA,EAAIqe,EAAM,EAAGre,IAC3B,GAAIzM,KAAKovC,aAAa3iC,GAAGoT,IAAIte,GAAO,OAAO,EAG/C,OAAO,CACT,CACAygB,YAAYzgB,EAAM0gB,EAAanF,GAC7B,GAAImF,EAAc/B,GAQhB,OAPIlgB,KAAKqvC,UAAU9tC,GAAM,IACvBvB,KAAK4gB,OAAO4B,MAAM3E,EAAOvC,iBAAkB,CACzC/W,GAAIuY,EACJnP,eAAgBpM,SAGpBvB,KAAKovC,aAAapvC,KAAKovC,aAAatiC,OAAS,GAAGqV,IAAI5gB,GAGtD,MAAMwgB,EAAQ/hB,KAAKghB,eACnB,GA9jL0B,KA8jLtBiB,EAGF,OAFAjiB,KAAKoiB,mBAAmBL,EAAOxgB,QAC/BwgB,EAAMmtB,mBAAmB/sB,IAAI5gB,GAG/ByhB,MAAMhB,YAAYzgB,EAAM0gB,EAAanF,GA3kLtB,EA4kLXmF,IA7kLgB,EA8kLZA,IACJjiB,KAAKkiB,0BAA0BH,EAAOxgB,EAAM0gB,EAAanF,GACzD9c,KAAKoiB,mBAAmBL,EAAOxgB,IAEjCwgB,EAAM9hB,MAAMkiB,IAAI5gB,IA3kLC,IA6kLf0gB,GAAkCF,EAAMgtB,MAAM5sB,IAAI5gB,GA5kL7B,IA6kLrB0gB,GAAwCF,EAAMitB,WAAW7sB,IAAI5gB,GA/kLhD,IAglLb0gB,GAAgCF,EAAMktB,QAAQ9sB,IAAI5gB,EACxD,CACAghB,oBAAoBR,EAAOxgB,EAAM0gB,GAC/B,OAAIF,EAAMgtB,MAAMlvB,IAAIte,KAllLD,IAmlLb0gB,OAllLmB,IAmlLFA,KACFF,EAAMitB,WAAWnvB,IAAIte,GAtlLzB,IA2lLb0gB,GAAkCF,EAAMktB,QAAQpvB,IAAIte,KAClDwgB,EAAMtB,QAAQZ,IAAIte,OAlmLJ,EAmmLN0gB,MAlmLC,EAumLXA,GAAgCF,EAAM9hB,MAAM4f,IAAIte,KAG7CyhB,MAAMT,oBAAoBR,EAAOxgB,EAAM0gB,EAChD,CACAU,iBAAiBC,GACf,MAAM,KACJrhB,GACEqhB,EACJ,IAAI5iB,KAAKqvC,UAAU9tC,GAAnB,CAEA,IAAK,IAAIkL,EADGzM,KAAK6gB,WAAW/T,OACT,EAAGL,GAAK,EAAGA,IAAK,CACjC,MAAMsV,EAAQ/hB,KAAK6gB,WAAWpU,GAC9B,GAAIsV,EAAM9hB,MAAM4f,IAAIte,IAASwgB,EAAMmtB,mBAAmBrvB,IAAIte,GAAO,MACnE,CACAyhB,MAAML,iBAAiBC,EANS,CAOlC,EAEF,MACM2sB,GAAgC9wB,GACf,4BAAdA,EAAKxN,KAAqCs+B,GAA8B9wB,EAAK+wB,YAAc/wB,EAEpG,MAAMgxB,WAAmBhW,GACvBiW,aAAajxB,EAAMkxB,GAAQ,GACzB,IAAIC,EAAaC,EACjB,IAAIC,EAmBJ,QAlBkB,4BAAdrxB,EAAKxN,MAAoE,OAA7B2+B,EAAcnxB,EAAKkX,QAAkBia,EAAYE,iBAC/FA,EAAgBP,GAA8B9wB,GAC1CkxB,EACyB,eAAvBG,EAAc7+B,KAChBjR,KAAK04B,gBAAgBjE,iCAAiC5W,EAAO7H,+BAAgC,CAC3FzR,GAAIka,IAE0B,qBAAvBqxB,EAAc7+B,MACvBjR,KAAKwiB,MAAM3E,EAAO7H,+BAAgC,CAChDzR,GAAIka,IAIRze,KAAKwiB,MAAM3E,EAAO7H,+BAAgC,CAChDzR,GAAIka,KAIFA,EAAKxN,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACL,IAAK,cACH,MACF,IAAK,mBACHwN,EAAKxN,KAAO,gBACZ,IAAK,IAAIxE,EAAI,EAAGK,EAAS2R,EAAK/P,WAAW5B,OAAQqB,EAAOrB,EAAS,EAAGL,EAAIK,EAAQL,IAAK,CACnF,IAAIsjC,EACJ,MAAMnE,EAAOntB,EAAK/P,WAAWjC,GACvBujC,EAASvjC,IAAM0B,EACrBnO,KAAKiwC,iCAAiCrE,EAAMoE,EAAQL,GAChDK,GAAwB,gBAAdpE,EAAK36B,MAAyD,OAA9B8+B,EAAetxB,EAAKkX,QAAkBoa,EAAaG,kBAC/FlwC,KAAKwiB,MAAM3E,EAAO/E,kBAAmB,CACnCvU,GAAIka,EAAKkX,MAAMua,kBAGrB,CACA,MACF,IAAK,iBACH,CACE,MAAM,IACJ1jC,EAAG,MACH+B,GACEkQ,EACAze,KAAK03B,cAAclrB,IACrBxM,KAAK2zB,WAAWD,eAAe1zB,KAAK23B,iBAAiBnrB,GAAMA,EAAIsQ,IAAItP,OAErExN,KAAK0vC,aAAanhC,EAAOohC,GACzB,KACF,CACF,IAAK,gBAED,MAAM,IAAId,MAAM,gIAEpB,IAAK,kBACHpwB,EAAKxN,KAAO,eACZjR,KAAKmwC,iBAAiB1xB,EAAK4F,SAAyC,OAA9BwrB,EAAepxB,EAAKkX,YAAiB,EAASka,EAAaK,iBAAkBP,GACnH,MACF,IAAK,uBACmB,MAAlBlxB,EAAK2xB,UACPpwC,KAAKwiB,MAAM3E,EAAOlH,sBAAuB,CACvCpS,GAAIka,EAAK4xB,KAAKvzB,IAAIrP,MAGtBgR,EAAKxN,KAAO,2BACLwN,EAAK2xB,SACZpwC,KAAK0vC,aAAajxB,EAAK4xB,KAAMV,GAC7B,MACF,IAAK,0BACH3vC,KAAK0vC,aAAaI,EAAeH,GAGvC,CACAM,iCAAiCrE,EAAMoE,EAAQL,GAC7C,GAAkB,iBAAd/D,EAAK36B,KACPjR,KAAKwiB,MAAoB,QAAdopB,EAAKv6B,MAAgC,QAAdu6B,EAAKv6B,KAAiBwM,EAAOvF,mBAAqBuF,EAAOtF,iBAAkB,CAC3GhU,GAAIqnC,EAAKp/B,WAEN,GAAkB,kBAAdo/B,EAAK36B,KAA0B,CACxC26B,EAAK36B,KAAO,cACZ,MAAMq/B,EAAM1E,EAAKxuB,SACjBpd,KAAKuwC,sBAAsBD,GAAK,GAChCtwC,KAAK0vC,aAAaY,EAAKX,GAClBK,GACHhwC,KAAKwiB,MAAM3E,EAAO/E,kBAAmB,CACnCvU,GAAIqnC,GAGV,MACE5rC,KAAK0vC,aAAa9D,EAAM+D,EAE5B,CACAQ,iBAAiBK,EAAUN,EAAkBP,GAC3C,MAAMliC,EAAM+iC,EAAS1jC,OAAS,EAC9B,IAAK,IAAIL,EAAI,EAAGA,GAAKgB,EAAKhB,IAAK,CAC7B,MAAMgkC,EAAMD,EAAS/jC,GACrB,GAAKgkC,EAAL,CACA,GAAiB,kBAAbA,EAAIx/B,KAA0B,CAChCw/B,EAAIx/B,KAAO,cACX,MAAMq/B,EAAMG,EAAIrzB,SAChBpd,KAAKuwC,sBAAsBD,GAAK,GAChCtwC,KAAK0vC,aAAaY,EAAKX,EACzB,MACE3vC,KAAK0vC,aAAae,EAAKd,GAER,gBAAbc,EAAIx/B,OACFxE,EAAIgB,EACNzN,KAAKwiB,MAAM3E,EAAO/E,kBAAmB,CACnCvU,GAAIksC,IAEGP,GACTlwC,KAAKwiB,MAAM3E,EAAO/E,kBAAmB,CACnCvU,GAAI2rC,IAhBQ,CAoBpB,CACF,CACAQ,aAAajyB,EAAMkyB,GACjB,OAAQlyB,EAAKxN,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACL,IAAK,cACH,OAAO,EACT,IAAK,mBACH,CACE,MAAM9C,EAAOsQ,EAAK/P,WAAW5B,OAAS,EACtC,OAAO2R,EAAK/P,WAAWkiC,OAAM,CAAChF,EAAMn/B,IACb,iBAAdm/B,EAAK36B,OAA4BxE,IAAM0B,GAAsB,kBAAdy9B,EAAK36B,OAA6BjR,KAAK0wC,aAAa9E,IAE9G,CACF,IAAK,iBACH,OAAO5rC,KAAK0wC,aAAajyB,EAAKlQ,OAChC,IAAK,gBACH,OAAOvO,KAAK0wC,aAAajyB,EAAKrB,UAChC,IAAK,kBACH,OAAOqB,EAAK4F,SAASusB,OAAMC,GAAuB,OAAZA,GAAoB7wC,KAAK0wC,aAAaG,KAC9E,IAAK,uBACH,MAAyB,MAAlBpyB,EAAK2xB,SACd,IAAK,0BACH,OAAOpwC,KAAK0wC,aAAajyB,EAAK+wB,YAChC,IAAK,mBACL,IAAK,2BACH,OAAQmB,EACV,QACE,OAAO,EAEb,CACAG,iBAAiBN,EAAUO,GACzB,OAAOP,CACT,CACAQ,qBAAqBR,EAAUO,GAC7B/wC,KAAK8wC,iBAAiBN,EAAUO,GAChC,IAAK,MAAME,KAAQT,EAC2B,qBAA/B,MAARS,OAAe,EAASA,EAAKhgC,OAChCjR,KAAKgxC,qBAAqBC,EAAK5sB,SAGrC,CACA6sB,YAAY/Z,GACV,MAAM1Y,EAAOze,KAAK05B,YAGlB,OAFA15B,KAAK0iB,OACLjE,EAAKrB,SAAWpd,KAAKmxC,wBAAwBha,OAAqBx4B,GAC3DqB,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA2yB,mBACE,MAAM3yB,EAAOze,KAAK05B,YAGlB,OAFA15B,KAAK0iB,OACLjE,EAAKrB,SAAWpd,KAAKqxC,mBACdrxC,KAAK65B,WAAWpb,EAAM,cAC/B,CACA4yB,mBACE,OAAQrxC,KAAK2kB,MAAM1T,MACjB,KAAK,EACH,CACE,MAAMwN,EAAOze,KAAK05B,YAGlB,OAFA15B,KAAK0iB,OACLjE,EAAK4F,SAAWrkB,KAAKsxC,iBAAiB,EAAG,GAAI,GACtCtxC,KAAK65B,WAAWpb,EAAM,eAC/B,CACF,KAAK,EACH,OAAOze,KAAKuxC,gBAAgB,GAAG,GAEnC,OAAOvxC,KAAKwxC,iBACd,CACAF,iBAAiBG,EAAOC,EAAenxB,GACrC,MAAMoxB,EAAqB,EAARpxB,EACbqxB,EAAO,GACb,IAAIC,GAAQ,EACZ,MAAQ7xC,KAAKktB,IAAIukB,IAMf,GALII,EACFA,GAAQ,EAER7xC,KAAK02B,OAAO,IAEVib,GAAc3xC,KAAK2qB,MAAM,IAC3BinB,EAAKrvC,KAAK,UACL,IAAIvC,KAAKktB,IAAIukB,GAClB,MACK,GAAIzxC,KAAK2qB,MAAM,KAEpB,GADAinB,EAAKrvC,KAAKvC,KAAK8xC,6BAA6B9xC,KAAKoxC,mBAAoB7wB,KAChEvgB,KAAK+xC,oBAAoBL,GAAgB,CAC5C1xC,KAAK02B,OAAO+a,GACZ,KACF,MACK,CACL,MAAMO,EAAa,GAMnB,IALIhyC,KAAK2qB,MAAM,KAAO3qB,KAAKsjB,UAAU,eACnCtjB,KAAKwiB,MAAM3E,EAAO/C,8BAA+B,CAC/CvW,GAAIvE,KAAK2kB,MAAMkC,WAGZ7mB,KAAK2qB,MAAM,KAChBqnB,EAAWzvC,KAAKvC,KAAKiyC,kBAEvBL,EAAKrvC,KAAKvC,KAAKkyC,wBAAwB3xB,EAAOyxB,GAChD,EAEF,OAAOJ,CACT,CACAO,yBAAyBvG,GAIvB,OAHA5rC,KAAK0iB,OACLkpB,EAAKxuB,SAAWpd,KAAKwxC,kBACrBxxC,KAAK+xC,oBAAoB,KAClB/xC,KAAK65B,WAAW+R,EAAM,cAC/B,CACAwG,uBACE,MAAMxG,EAAO5rC,KAAK05B,aACZ,KACJzoB,EAAI,SACJ4V,GACE7mB,KAAK2kB,MACT,OAAa,KAAT1T,EACKjR,KAAKmyC,yBAAyBvG,IACnB,MAAT36B,GACTjR,KAAKovB,aAAa,uBAAwBvI,GAC1C7mB,KAAK2zB,WAAWD,eAAe1zB,KAAK2kB,MAAMpW,MAAOsY,GACjD+kB,EAAKp/B,IAAMxM,KAAKqyC,oBAEhBryC,KAAKsyC,kBAAkB1G,GAEzBA,EAAK2G,QAAS,EACPvyC,KAAKwyC,kBAAkB5G,EAAM/kB,GAAU,GAAO,GAAO,GAAM,GACpE,CACAqrB,wBAAwB3xB,EAAOyxB,GAC7B,MAAM3B,EAAOrwC,KAAKyyC,oBAClBzyC,KAAK8xC,6BAA6BzB,EAAM9vB,GACxC,MAAMkwB,EAAMzwC,KAAKyyC,kBAAkBpC,EAAKvzB,IAAItP,MAAO6iC,GAInD,OAHI2B,EAAWllC,SACbujC,EAAK2B,WAAaA,GAEbvB,CACT,CACAqB,6BAA6BY,EAAOnyB,GAClC,OAAOmyB,CACT,CACAD,kBAAkB5rB,EAAUwpB,GAC1B,IAAesC,EAGf,GAF0B,MAAb9rB,IAAgCA,EAAW7mB,KAAK2kB,MAAMkC,UACnEwpB,EAAyB,OAAjBsC,EAAQtC,GAAgBsC,EAAQ3yC,KAAKqxC,oBACxCrxC,KAAKktB,IAAI,IAAK,OAAOmjB,EAC1B,MAAM5xB,EAAOze,KAAK25B,YAAY9S,GAG9B,OAFApI,EAAK4xB,KAAOA,EACZ5xB,EAAKm0B,MAAQ5yC,KAAKmxC,0BACXnxC,KAAK65B,WAAWpb,EAAM,oBAC/B,CACAo0B,YAAY5hC,EAAM6hC,EAA2BC,GAC3C,OAtRczkC,EAsRE,CACdsB,kBAAmB,OACnBc,YAAa,WACbsiC,eAAgB,QAChBviC,wBAAyB,aACzBf,aAAc,WACdc,cAAe,cA5RKhE,EA6RnByE,EA7R2BrE,OAAOqmC,eAAeC,KAAK5kC,EAAQ9B,IAAQ8B,EAAO9B,GAAnE,IAAC8B,EAAQ9B,CA8RxB,CACA2mC,UAAU3D,GACR4D,GAAI19B,EAAQ,QACZq9B,EAAU1yB,GAAS,aACnBgzB,GAAe,EAAK,kBACpBC,GAAoB,EAAK,yBACzBC,GAA2B,IAE3B,IAAIC,EACJ,MAAMviC,EAAOu+B,EAAWv+B,KACxB,GAAIjR,KAAK+3B,eAAeyX,GAAa,OACrC,GAAa,qBAATv+B,EAMF,YALI8hC,IAAY1yB,IACdrgB,KAAKwiB,MAAM3E,EAAO3H,8BAA+B,CAC/C3R,GAAIirC,KAKV,GAAa,eAATv+B,EAAuB,CACzBjR,KAAKyzC,gBAAgBjE,EAAYuD,EAASO,GAC1C,MAAM,KACJ/xC,GACEiuC,EAUJ,YATI6D,IACEA,EAAaxzB,IAAIte,GACnBvB,KAAKwiB,MAAM3E,EAAOxF,UAAW,CAC3B9T,GAAIirC,IAGN6D,EAAalxB,IAAI5gB,IAIvB,CACA,MAAMmyC,EAAW1zC,KAAK6yC,YAAY5hC,IAAQsiC,GAAsE,OAAzCC,EAAoBhE,EAAW7Z,QAAkB6d,EAAkB1D,gBAAoC,yBAAlBp6B,EAASzE,KAAiC8hC,GACtM,IAAiB,IAAbW,EAAmB,OACvB,IAAiB,IAAbA,EAAoB,CACtB,MAAMC,EAAkBZ,IAAY1yB,GAAYxC,EAAOpI,WAAaoI,EAAOlI,kBAK3E,YAJA3V,KAAKwiB,MAAMmxB,EAAiB,CAC1BpvC,GAAIirC,EACJ95B,YAGJ,CACA,MAAOlJ,EAAKonC,GAA6Bt2B,MAAMC,QAAQm2B,GAAYA,EAAW,CAACA,EAAmB,4BAATziC,GACnF4iC,EAAwB,iBAAT5iC,GAAoC,kBAATA,GAAqC,4BAATA,EAAqC,CAC/GA,QACEyE,EACJ,IAAK,MAAMo+B,IAAS,GAAGC,OAAOvE,EAAWhjC,IACnCsnC,GACF9zC,KAAKmzC,UAAUW,EAAO,CACpBV,GAAIS,EACJd,UACAM,eACAC,oBACAC,yBAA0BK,GAIlC,CACAH,gBAAgBlvC,EAAI0d,EAAaqxB,GAAoB,GAC/CtzC,KAAK2kB,MAAM+B,SAAW4sB,EAAoBvzB,GAAyBxb,EAAGhD,KAAMvB,KAAK2f,UAAYG,GAA6Bvb,EAAGhD,SAC3H0gB,IAAgB5B,GAClBrgB,KAAKwiB,MAAM3E,EAAOE,oBAAqB,CACrCxZ,KACAyZ,cAAezZ,EAAGhD,OAGpBvB,KAAKwiB,MAAM3E,EAAOI,2BAA4B,CAC5C1Z,KACA2Z,YAAa3Z,EAAGhD,QAn9LO,KAu9LzB0gB,GAA0D,QAAZ1d,EAAGhD,MACnDvB,KAAKwiB,MAAM3E,EAAOtH,oBAAqB,CACrChS,OAGE0d,EAAc5B,IAClBrgB,KAAKg0C,0BAA0BzvC,EAAI0d,EAEvC,CACA+xB,0BAA0BC,EAAYlB,GACpC/yC,KAAK+hB,MAAMC,YAAYiyB,EAAW1yC,KAAMwxC,EAASkB,EAAWn3B,IAAItP,MAClE,CACA+iC,sBAAsB9xB,EAAMy1B,GAC1B,OAAQz1B,EAAKxN,MACX,IAAK,0BACHjR,KAAKuwC,sBAAsB9xB,EAAK+wB,WAAY0E,GAC5C,MACF,IAAK,aACL,IAAK,mBACH,MACF,IAAK,kBACL,IAAK,mBACH,GAAIA,EAAc,MACpB,QACEl0C,KAAKwiB,MAAM3E,EAAOzH,6BAA8B,CAC9C7R,GAAIka,IAGZ,CACAszB,oBAAoBN,GAClB,QAAKzxC,KAAK2qB,MAAM,MAGhB3qB,KAAKwiB,MAAMxiB,KAAK2tB,sBAAwB8jB,EAAQ5zB,EAAO/E,kBAAoB+E,EAAOvK,iBAAkB,CAClG/O,GAAIvE,KAAK2kB,MAAMkC,YAEV,EACT,EASF,SAASstB,GAAOC,GACd,IAAKA,EACH,MAAM,IAAIvF,MAAM,cAEpB,CACA,MAAMwF,GAAWl3B,CAAc,aAAa,CAC1Cm3B,gCAAiC,EAC/BC,gBACI,WAAWA,kEACjBC,+BAAgC,EAC9BC,kBACI,aAAaA,+DACnBC,kCAAmC,8DACnCC,gCAAiC,2CACjCC,yBAA0B,sDAC1BC,sBAAuB,oDACvBC,uBAAwB,qDACxBC,oEAAqE,6GACrEC,6BAA8B,8DAC9BC,gBAAiB,EACf5jC,UACI,+BAA+BA,SACrC6jC,gCAAiC,oDACjCC,iCAAkC,4DAClCC,+BAAgC,EAC9BC,cACI,uCACNC,kBAAmB,EACjBD,cACI,wBAAwBA,MAC9BE,wBAAyB,EACvBz1C,WACI,IAAIA,2BACV01C,mBAAoB,sCACpBC,oBAAqB,uCACrBC,kCAAmC,+DACnCC,yBAA0B,6CAC1B9Z,8BAA+B,6DAC/B+Z,sBAAuB,EACrBC,eACI,IAAIA,EAAU,qCAAqCA,EAAU,gBACnEC,0BAA2B,wDAC3BC,+BAAgC,EAC9BV,cACI,4DAA4DA,OAClEW,yBAA0B,uDAC1BC,0BAA2B,2DAC3BC,wBAAyB,sDACzBC,sCAAuC,oDACvCC,4BAA6B,EAC3Bf,cACI,IAAIA,8CACVgB,+BAAgC,EAC9BhB,cACI,IAAIA,iDACViB,wCAAyC,EACvCjB,cACI,IAAIA,uFACVkB,sBAAuB,EACrBC,sBACI,IAAIA,EAAiB,8BAA8BA,EAAiB,gBAC1EC,kDAAmD,4JACnDC,wBAAyB,0DACzBC,qBAAsB,8DACtBC,iCAAkC,2DAClCC,kCAAmC,6DACnCC,yCAA0C,mFAC1CC,2BAA4B,wDAC5BC,sBAAuB,6GACvB1a,kBAAmB,iFACnB2a,0BAA2B,wDAC3BC,+BAAgC,EAC9B7B,cACI,4DAA4DA,OAClE8B,2BAA4B,oFAC5BC,uBAAwB,iHACxBC,sBAAuB,oGACvBC,sCAAuC,sDACvCC,kCAAmC,+CACnCC,+BAAgC,yDAChCC,wCAAyC,EACvCC,uBACI,yBAAyBA,mDAAmEA,OAClGC,8BAA+B,gDAC/BC,uBAAwB,2KACxBC,0BAA2B,oHAC3BC,uCAAwC,mFACxCC,gCAAiC,2GACjCC,gCAAiC,2GACjCC,4BAA6B,wEAC7BC,mBAAoB,+EACpBC,yBAA0B,yCAC1BC,8BAA+B,8CAC/BC,8BAA+B,sDAC/BC,iCAAkC,oEAClCC,kCAAmC,EACjCtnC,UACI,yFAAyFA,OA4BjG,SAASunC,GAAmBnD,GAC1B,MAAoB,YAAbA,GAAuC,WAAbA,GAAsC,cAAbA,CAC5D,CACA,SAASoD,GAAwBpD,GAC/B,MAAoB,OAAbA,GAAkC,QAAbA,CAC9B,CAo3EA,SAASqD,GAAsBlJ,GAC7B,GAAwB,qBAApBA,EAAWv+B,KAA6B,OAAO,EACnD,MAAM,SACJ0nC,EAAQ,SACR9gB,GACE2X,EACJ,QAAImJ,GAA8B,kBAAlB9gB,EAAS5mB,QAA+C,oBAAlB4mB,EAAS5mB,MAA8B4mB,EAAS+gB,YAAY9rC,OAAS,KAGpH+rC,GAAkCrJ,EAAWlhC,OACtD,CACA,SAASwqC,GAA+BtJ,EAAYuJ,GAClD,IAAIvF,EACJ,MAAM,KACJviC,GACEu+B,EACJ,GAA8C,OAAzCgE,EAAoBhE,EAAW7Z,QAAkB6d,EAAkB1D,cACtE,OAAO,EAET,GAAIiJ,GACF,GAAa,YAAT9nC,EAAoB,CACtB,MAAM,MACJ1C,GACEihC,EACJ,GAAqB,iBAAVjhC,GAAuC,kBAAVA,EACtC,OAAO,CAEX,OAEA,GAAa,kBAAT0C,GAAqC,mBAATA,EAC9B,OAAO,EAGX,SAAI+nC,GAASxJ,EAAYuJ,KAkB3B,SAA0BvJ,EAAYuJ,GACpC,GAAwB,oBAApBvJ,EAAWv+B,KAA4B,CACzC,MAAM,SACJm/B,EAAQ,SACRhzB,GACEoyB,EACJ,GAAiB,MAAbY,GAAoB4I,GAAS57B,EAAU27B,GACzC,OAAO,CAEX,CACA,OAAO,CACT,CA7BsCE,CAAiBzJ,EAAYuJ,KAGpD,oBAAT9nC,GAAgE,IAAlCu+B,EAAWoJ,YAAY9rC,UAGrD4rC,GAAsBlJ,EAI5B,CACA,SAASwJ,GAASxJ,EAAYuJ,GAC5B,OAAIA,EACyB,YAApBvJ,EAAWv+B,OAAmD,iBAArBu+B,EAAWjhC,OAAsB,WAAYihC,GAElE,mBAApBA,EAAWv+B,MAAiD,kBAApBu+B,EAAWv+B,IAE9D,CAaA,SAAS4nC,GAAkCrJ,GACzC,MAAwB,eAApBA,EAAWv+B,MACS,qBAApBu+B,EAAWv+B,OACXu+B,EAAWmJ,UACRE,GAAkCrJ,EAAWlhC,OACtD,CACA,MAAM4qC,GAAoB/7B,CAAc,eAAe,CACrDg8B,oBAAqB,4BACrBC,gBAAiB,qCA4MnB,SAAS91B,GAAUlkB,EAASi6C,GAC1B,MAAOC,EAAcC,GAA6C,iBAAnBF,EAA8B,CAACA,EAAgB,CAAC,GAAKA,EAC9FG,EAAe5sC,OAAOC,KAAK0sC,GAC3BE,EAAiD,IAAxBD,EAAa1sC,OAC5C,OAAO1N,EAAQuzB,MAAK+mB,IAClB,GAAiB,iBAANA,EACT,OAAOD,GAA0BC,IAAMJ,EAClC,CACL,MAAO91B,EAAYC,GAAiBi2B,EACpC,GAAIl2B,IAAe81B,EACjB,OAAO,EAET,IAAK,MAAM9sC,KAAOgtC,EAChB,GAAI/1B,EAAcjX,KAAS+sC,EAAgB/sC,GACzC,OAAO,EAGX,OAAO,CACT,IAEJ,CACA,SAASmX,GAAgBvkB,EAASmC,EAAMo4C,GACtC,MAAM/1B,EAASxkB,EAAQw6C,MAAKh2B,GACtBtG,MAAMC,QAAQqG,GACTA,EAAO,KAAOriB,EAEdqiB,IAAWriB,IAGtB,OAAIqiB,GAAUtG,MAAMC,QAAQqG,IAAWA,EAAO9W,OAAS,EAC9C8W,EAAO,GAAG+1B,GAEZ,IACT,CACA,MAAME,GAAqB,CAAC,UAAW,SAAU,OAAQ,SACnDC,GAAe,CAAC,KAAM,KAAM,IAAK,IAAK,KACtCC,GAAgC,CAAC,OAAQ,OAqEzCC,GAAe,CACnBjB,OAlxSWkB,GAAc,cAAgCA,EACzDC,QACE,MAAMC,EAAO37B,GAAiBwE,MAAMk3B,SAIpC,OAHIl6C,KAAKwB,QAAQjC,SACf46C,EAAK56C,OAAS46C,EAAK56C,OAAOqP,IAAI4P,KAEzB27B,CACT,CACAC,oBAAmB,QACjBjpB,EAAO,MACP5Q,IAEA,IAAI85B,EAAQ,KACZ,IACEA,EAAQ,IAAIx7B,OAAOsS,EAAS5Q,EAC9B,CAAE,MAAOkL,GAAI,CACb,MAAMhN,EAAOze,KAAKs6C,mBAAmBD,GAKrC,OAJA57B,EAAK47B,MAAQ,CACXlpB,UACA5Q,SAEK9B,CACT,CACA87B,mBAAmBhsC,GACjB,IAAIisC,EACJ,IACEA,EAASC,OAAOlsC,EAClB,CAAE,MAAOmsC,GACPF,EAAS,IACX,CACA,MAAM/7B,EAAOze,KAAKs6C,mBAAmBE,GAErC,OADA/7B,EAAKxT,OAASiG,OAAOuN,EAAKlQ,OAASA,GAC5BkQ,CACT,CACAk8B,oBAAoBpsC,GAClB,MACMkQ,EAAOze,KAAKs6C,mBADF,MAGhB,OADA77B,EAAKvT,QAAUgG,OAAOuN,EAAKlQ,OAASA,GAC7BkQ,CACT,CACA67B,mBAAmB/rC,GACjB,OAAOvO,KAAK46C,aAAarsC,EAAO,UAClC,CACAssC,mBAAmBtsC,GACjB,OAAOvO,KAAKs6C,mBAAmB/rC,EACjC,CACAusC,oBAAoBvsC,GAClB,OAAOvO,KAAKs6C,mBAAmB/rC,EACjC,CACAwsC,mBACE,OAAO/6C,KAAKs6C,mBAAmB,KACjC,CACAU,oBAAoBzsC,GAClB,OAAOvO,KAAKs6C,mBAAmB/rC,EACjC,CACA0sC,gBAAgBC,GACd,MAAM1L,EAAa0L,EAAU3sC,aACtB2sC,EAAU3sC,MACjBihC,EAAWv+B,KAAO,UAClBu+B,EAAW2L,IAAM3L,EAAW7Z,MAAMwlB,IAClC3L,EAAWjhC,MAAQihC,EAAW7Z,MAAMylB,gBACpC,MAAMC,EAAOH,EAKb,OAJAG,EAAKpqC,KAAO,sBACZoqC,EAAK7L,WAAaA,EAClB6L,EAAKH,UAAY1L,EAAW7Z,MAAM2lB,gBAC3B9L,EAAW7Z,MACX0lB,CACT,CACAE,aAAa98B,EAAM8W,GACjBvS,MAAMu4B,aAAa98B,EAAM8W,GACzB9W,EAAK+wB,YAAa,CACpB,CACAgM,iBAAiB/8B,GACH,MAARA,GAAgBze,KAAK83B,iBAAiBrZ,GACxCze,KAAKw7C,iBAAiB/8B,EAAKlQ,OAE3ByU,MAAMw4B,iBAAiB/8B,EAE3B,CACAg9B,6BAA6BlJ,GAC3B,OAAOA,EAAOhkC,MAAMsX,MACtB,CACA61B,iBAAiBL,GACf,IAAIM,EACJ,MAAqB,wBAAdN,EAAKpqC,MAA2D,YAAzBoqC,EAAK7L,WAAWv+B,MAAuD,iBAA1BoqC,EAAK7L,WAAWjhC,SAA2E,OAAlDotC,EAAwBN,EAAK7L,WAAW7Z,QAAkBgmB,EAAsB7L,cACtN,CACA8L,eAAen9B,EAAMo9B,EAAiBC,EAAUruC,EAAKsuC,GACnD/4B,MAAM44B,eAAen9B,EAAMo9B,EAAiBC,EAAUruC,EAAKsuC,GAC3D,MAAMC,EAAsBv9B,EAAKw9B,WAAWrtC,KAAIstC,GAAKl8C,KAAKi7C,gBAAgBiB,KAC1Ez9B,EAAK09B,KAAOH,EAAoBjI,OAAOt1B,EAAK09B,aACrC19B,EAAKw9B,UACd,CACAG,gBAAgBC,EAAW9J,EAAQ/c,EAAaD,EAAS+mB,EAAeC,GACtEv8C,KAAKw8C,YAAYjK,EAAQ/c,EAAaD,EAAS+mB,EAAeC,EAAmB,eAAe,GAC5FhK,EAAOkK,iBACTlK,EAAOhkC,MAAMkuC,eAAiBlK,EAAOkK,sBAC9BlK,EAAOkK,gBAEhBJ,EAAUF,KAAK55C,KAAKgwC,EACtB,CACAF,mBACE,MAAM5zB,EAAOuE,MAAMqvB,mBAEjB,OAAKryC,KAAK2jB,gBAAgB,SAAU,iBAI/B3jB,KAAK08C,sCAAsCj+B,GAHvCA,CAIb,CACAi+B,sCAAsCj+B,GACpC,MAAMld,EAAOyhB,MAAM2U,iBAAiBlZ,GAKpC,cAHOA,EAAKmE,GACZnE,EAAKld,KAAOA,EACZkd,EAAKxN,KAAO,oBACLwN,CACT,CACAiZ,cAAcjZ,GAEV,OAAKze,KAAK2jB,gBAAgB,SAAU,iBAIjB,sBAAdlF,EAAKxN,KAHD+R,MAAM0U,cAAcjZ,EAIjC,CACAkZ,iBAAiBlZ,GAEb,OAAKze,KAAK2jB,gBAAgB,SAAU,iBAI/BlF,EAAKld,KAHDyhB,MAAM2U,iBAAiBlZ,EAIpC,CACAm8B,aAAarsC,EAAO0C,GAClB,MAAMwN,EAAOuE,MAAM43B,aAAarsC,EAAO0C,GAGvC,OAFAwN,EAAK08B,IAAM18B,EAAKkX,MAAMwlB,WACf18B,EAAKkX,MACLlX,CACT,CACAk+B,kBAAkBl+B,EAAMm+B,EAAiBC,GAAW,GAClD75B,MAAM25B,kBAAkBl+B,EAAMm+B,EAAiBC,GAC/Cp+B,EAAK+wB,WAAgC,mBAAnB/wB,EAAK09B,KAAKlrC,IAC9B,CACAurC,YAAY/9B,EAAM+W,EAAaD,EAAS+mB,EAAej7B,EAAkBpQ,EAAM6rC,GAAe,GAC5F,IAAIC,EAAW/8C,KAAK05B,YASpB,OARAqjB,EAAS1rC,KAAOoN,EAAKpN,KACrB0rC,EAAW/5B,MAAMw5B,YAAYO,EAAUvnB,EAAaD,EAAS+mB,EAAej7B,EAAkBpQ,EAAM6rC,GACpGC,EAAS9rC,KAAO,4BACT8rC,EAAS1rC,KAChBoN,EAAKlQ,MAAQwuC,EACA,uBAAT9rC,IACFwN,EAAKk6B,UAAW,GAEX34C,KAAK65B,WAAWpb,EAAM,mBAC/B,CACAu+B,sBAAsBj6B,GACpB,MAAMk6B,EAAej6B,MAAMg6B,sBAAsBj6B,GAE/C,OAAK/iB,KAAK2jB,gBAAgB,SAAU,kBAItCs5B,EAAahsC,KAAO,qBACbgsC,GAJIA,CAKb,CACAC,6BAA6Bn6B,GAC3B,MAAMk6B,EAAej6B,MAAMk6B,6BAA6Bn6B,GAEtD,OAAK/iB,KAAK2jB,gBAAgB,SAAU,kBAItCs5B,EAAahsC,KAAO,qBACpBgsC,EAAatE,UAAW,EACjBsE,GALIA,CAMb,CACAE,kBAAkBvR,EAAMpW,EAAaD,EAAS6nB,EAAWC,GACvD,MAAM5+B,EAAOuE,MAAMm6B,kBAAkBvR,EAAMpW,EAAaD,EAAS6nB,EAAWC,GAQ5E,OAPI5+B,IACFA,EAAKxN,KAAO,WACM,WAAdwN,EAAKpN,OACPoN,EAAKpN,KAAO,QAEdoN,EAAK6+B,WAAY,GAEZ7+B,CACT,CACA8+B,oBAAoB3R,EAAM/kB,EAAUu2B,EAAWjmB,GAC7C,MAAM1Y,EAAOuE,MAAMu6B,oBAAoB3R,EAAM/kB,EAAUu2B,EAAWjmB,GAKlE,OAJI1Y,IACFA,EAAKpN,KAAO,OACZoN,EAAKxN,KAAO,YAEPwN,CACT,CACAo0B,YAAY5hC,EAAM6hC,EAA2BC,GAC3C,MAAgB,aAAT9hC,EAAsB,QAAU+R,MAAM6vB,YAAY5hC,EAAM6hC,EAA2BC,EAC5F,CACArC,aAAajyB,EAAMkyB,GACjB,OAAY,MAARlyB,GAAgBze,KAAK83B,iBAAiBrZ,GACjCze,KAAK0wC,aAAajyB,EAAKlQ,MAAOoiC,GAEhC3tB,MAAM0tB,aAAajyB,EAAMkyB,EAClC,CACAjB,aAAajxB,EAAMkxB,GAAQ,GACzB,GAAY,MAARlxB,GAAgBze,KAAK83B,iBAAiBrZ,GAAO,CAC/C,MAAM,IACJjS,EAAG,MACH+B,GACEkQ,EACAze,KAAK03B,cAAclrB,IACrBxM,KAAK2zB,WAAWD,eAAe1zB,KAAK23B,iBAAiBnrB,GAAMA,EAAIsQ,IAAItP,OAErExN,KAAK0vC,aAAanhC,EAAOohC,EAC3B,MACE3sB,MAAM0sB,aAAajxB,EAAMkxB,EAE7B,CACAM,iCAAiCrE,EAAMoE,EAAQL,GAC3B,QAAd/D,EAAKv6B,MAAgC,QAAdu6B,EAAKv6B,KAC9BrR,KAAKwiB,MAAM3E,EAAOvF,mBAAoB,CACpC/T,GAAIqnC,EAAKp/B,MAEFo/B,EAAK2G,OACdvyC,KAAKwiB,MAAM3E,EAAOtF,iBAAkB,CAClChU,GAAIqnC,EAAKp/B,MAGXwW,MAAMitB,iCAAiCrE,EAAMoE,EAAQL,EAEzD,CACA6N,qBAAqBC,EAAYC,GAC/B,MAAMj/B,EAAOuE,MAAMw6B,qBAAqBC,EAAYC,GAKhD,IAAIC,EAJiB,WAArBl/B,EAAKm/B,OAAO3sC,OACdwN,EAAKxN,KAAO,mBACZwN,EAAKnS,OAASmS,EAAKmH,UAAU,GACzB5lB,KAAKsjB,UAAU,sBAEjB7E,EAAKo/B,WAAuD,OAAzCF,EAAmBl/B,EAAKmH,UAAU,IAAc+3B,EAAmB,aAEjFl/B,EAAKmH,iBACLnH,EAAKm/B,QAEd,OAAOn/B,CACT,CACAq/B,sBAAsBr/B,GACF,qBAAdA,EAAKxN,MAGT+R,MAAM86B,sBAAsBr/B,EAC9B,CACAs/B,YAAYN,EAAYzL,GACtB,MAAMgM,EAAiBh+C,KAAK2kB,MAAMsD,gBAC5BxJ,EAAOuE,MAAM+6B,YAAYN,EAAYzL,GAC3C,OAAQvzB,EAAKxN,MACX,IAAK,uBACHwN,EAAKw/B,SAAW,KAChB,MACF,IAAK,yBAC4B,IAA3Bx/B,EAAKqH,WAAWhZ,QAA4C,6BAA5B2R,EAAKqH,WAAW,GAAG7U,OACrDwN,EAAKxN,KAAO,uBACZwN,EAAKw/B,SAAWx/B,EAAKqH,WAAW,GAAGm4B,gBAC5Bx/B,EAAKqH,YAEhB,IAAK,2BACH,CACE,IAAIo4B,EACJ,MAAM,YACJC,GACE1/B,EACsD,sBAAtC,MAAf0/B,OAAsB,EAASA,EAAYltC,QAAqF,OAAnDitC,EAAwBC,EAAYnM,iBAAsB,EAASkM,EAAsBpxC,QAAU,GAAKqxC,EAAY3wC,QAAUiR,EAAKjR,OACnNxN,KAAK+5B,mBAAmBtb,EAAMu/B,EAElC,EAGJ,OAAOv/B,CACT,CACA2/B,eAAeC,EAAMx3B,EAAUy3B,EAAS35B,GACtC,MAAMlG,EAAOuE,MAAMo7B,eAAeC,EAAMx3B,EAAUy3B,EAAS35B,GAC3D,GAAIA,EAAM45B,qBAIR,GAHkB,6BAAd9/B,EAAKxN,MAAqD,2BAAdwN,EAAKxN,OACnDwN,EAAKxN,KAAOwN,EAAKxN,KAAKutC,UAAU,IAE9B75B,EAAM85B,KAAM,CACd,MAAMC,EAAQ1+C,KAAK45B,gBAAgBnb,GAEnC,OADAigC,EAAMlP,WAAa/wB,EACZze,KAAK65B,WAAW6kB,EAAO,kBAChC,MACuB,qBAAdjgC,EAAKxN,MAA6C,mBAAdwN,EAAKxN,OAClDwN,EAAKi/B,UAAW,GAElB,OAAOj/B,CACT,CACAmZ,yBAAyBnZ,GAIvB,MAHkB,oBAAdA,EAAKxN,OACPwN,EAAOA,EAAK+wB,YAEPxsB,MAAM4U,yBAAyBnZ,EACxC,CACAqZ,iBAAiBrZ,GACf,MAAqB,aAAdA,EAAKxN,MAAqC,SAAdwN,EAAKpN,OAAoBoN,EAAK8zB,MACnE,CACAxa,eAAetZ,GACb,OAAOA,EAAK8zB,QAAwB,QAAd9zB,EAAKpN,MAAgC,QAAdoN,EAAKpN,IACpD,CACAyoB,aAAarb,EAAMxN,EAAM6V,GACvB,OAAOtI,GAAiBwE,MAAM8W,aAAarb,EAAMxN,EAAM6V,GACzD,CACAiT,mBAAmBtb,EAAMoI,GACvB7D,MAAM+W,mBAAmBtb,EAAMoI,GAC/BrI,GAAiBC,EACnB,CACAub,iBAAiBvb,EAAMqI,EAAS9mB,KAAK2kB,MAAMqD,eACzChF,MAAMgX,iBAAiBvb,EAAMqI,GAC7BtI,GAAiBC,EACnB,GAu9RAkgC,IAnwHQ1E,GAAc,cAA6BA,EACnD2E,eACE,IAAIl1B,EAAM,GACNE,EAAa5pB,KAAK2kB,MAAMzH,IAC5B,OAAS,CACP,GAAIld,KAAK2kB,MAAMzH,KAAOld,KAAK8M,OACzB,MAAM9M,KAAKwiB,MAAMwrB,GAAUQ,uBAAwB,CACjDjqC,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MAAMsC,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAC5C,OAAQiM,GACN,KAAK,GACL,KAAK,IACH,OAAInpB,KAAK2kB,MAAMzH,MAAQld,KAAK2kB,MAAMnX,WACrB,KAAP2b,GAAanpB,KAAK2kB,MAAMwD,sBACxBnoB,KAAK2kB,MAAMzH,IACbld,KAAKuuB,YAAY,MAEjBvL,MAAMwL,iBAAiBrF,KAI3BO,GAAO1pB,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,UAC/Cld,KAAKuuB,YAAY,IAAK7E,IAExB,KAAK,GACHA,GAAO1pB,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,KAC/CwM,GAAO1pB,KAAK6+C,gBACZj1B,EAAa5pB,KAAK2kB,MAAMzH,IACxB,MAGF,QACMkJ,GAAU+C,IACZO,GAAO1pB,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,KAC/CwM,GAAO1pB,KAAK8+C,gBAAe,GAC3Bl1B,EAAa5pB,KAAK2kB,MAAMzH,OAEtBld,KAAK2kB,MAAMzH,IAGrB,CACF,CACA4hC,eAAeC,GACb,MAAM51B,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAC5C,IAAIwM,EAUJ,QATE1pB,KAAK2kB,MAAMzH,IACF,KAAPiM,GAAuD,KAA1CnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,QAC9Cld,KAAK2kB,MAAMzH,IACbwM,EAAMq1B,EAAgB,KAAO,QAE7Br1B,EAAMxY,OAAOkO,aAAa+J,KAE1BnpB,KAAK2kB,MAAMgC,QACb3mB,KAAK2kB,MAAMiC,UAAY5mB,KAAK2kB,MAAMzH,IAC3BwM,CACT,CACAs1B,cAAcjtB,GACZ,IAAIrI,EAAM,GACNE,IAAe5pB,KAAK2kB,MAAMzH,IAC9B,OAAS,CACP,GAAIld,KAAK2kB,MAAMzH,KAAOld,KAAK8M,OACzB,MAAM9M,KAAKwiB,MAAM3E,EAAO1C,mBAAoB,CAC1C5W,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MAAMsC,EAAKnpB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,KAC5C,GAAIiM,IAAO4I,EAAO,MACP,KAAP5I,GACFO,GAAO1pB,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,KAC/CwM,GAAO1pB,KAAK6+C,gBACZj1B,EAAa5pB,KAAK2kB,MAAMzH,KACfkJ,GAAU+C,IACnBO,GAAO1pB,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,KAC/CwM,GAAO1pB,KAAK8+C,gBAAe,GAC3Bl1B,EAAa5pB,KAAK2kB,MAAMzH,OAEtBld,KAAK2kB,MAAMzH,GAEjB,CACAwM,GAAO1pB,KAAK0lB,MAAMkD,MAAMgB,EAAY5pB,KAAK2kB,MAAMzH,OAC/Cld,KAAKuuB,YAAY,IAAK7E,EACxB,CACAm1B,gBACE,MAAMp0B,IAAazqB,KAAK2kB,MAAMzH,IAC9B,GAA4C,KAAxCld,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,KAAa,GAC5Cld,KAAK2kB,MAAMzH,IACb,IAAI/H,EAAQ,GACgC,MAAxCnV,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,OACjC/H,EAAQ,KACNnV,KAAK2kB,MAAMzH,KAEf,MAAM+hC,EAAYj/C,KAAKirB,QAAQ9V,OAAOxW,GAAW,EAAO,QACxD,GAAkB,OAAdsgD,GAA8D,KAAxCj/C,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,KAEvD,QADEld,KAAK2kB,MAAMzH,IACNhM,OAAOqZ,cAAc00B,EAEhC,KAAO,CACL,IAAIC,EAAQ,EACRv7C,GAAO,EACX,KAAOu7C,IAAU,IAAMl/C,KAAK2kB,MAAMzH,IAAMld,KAAK8M,UAAYnJ,EAA8C,IAAvC3D,KAAK+tB,eAAe/tB,KAAK2kB,MAAMzH,SAC3Fld,KAAK2kB,MAAMzH,IAEf,GAAIvZ,EAAM,CACR,MAAMw7C,EAAOn/C,KAAK0lB,MAAMkD,MAAM6B,EAAUzqB,KAAK2kB,MAAMzH,KAC7CkiC,EAAShhB,GAAS+gB,GAExB,KADEn/C,KAAK2kB,MAAMzH,IACTkiC,EACF,OAAOA,CAEX,CACF,CAEA,OADAp/C,KAAK2kB,MAAMzH,IAAMuN,EACV,GACT,CACA40B,cACE,IAAIl2B,EACJ,MAAM3b,EAAQxN,KAAK2kB,MAAMzH,IACzB,GACEiM,EAAKnpB,KAAK0lB,MAAMC,aAAa3lB,KAAK2kB,MAAMzH,WACjCmC,GAAiB8J,IAAc,KAAPA,GACjCnpB,KAAKuuB,YAAY,IAAKvuB,KAAK0lB,MAAMkD,MAAMpb,EAAOxN,KAAK2kB,MAAMzH,KAC3D,CACAoiC,qBACE,MAAM7gC,EAAOze,KAAK05B,YASlB,OARI15B,KAAK2qB,MAAM,KACblM,EAAKld,KAAOvB,KAAK2kB,MAAMpW,MACdvC,EAAehM,KAAK2kB,MAAM1T,MACnCwN,EAAKld,KAAO0K,EAAejM,KAAK2kB,MAAM1T,MAEtCjR,KAAK+V,aAEP/V,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA8gC,yBACE,MAAM14B,EAAW7mB,KAAK2kB,MAAMkC,SACtBtlB,EAAOvB,KAAKs/C,qBAClB,IAAKt/C,KAAKktB,IAAI,IAAK,OAAO3rB,EAC1B,MAAMkd,EAAOze,KAAK25B,YAAY9S,GAG9B,OAFApI,EAAKmwB,UAAYrtC,EACjBkd,EAAKld,KAAOvB,KAAKs/C,qBACVt/C,KAAK65B,WAAWpb,EAAM,oBAC/B,CACA+gC,sBACE,MAAM34B,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,IAAIpI,EAAOze,KAAKu/C,yBAChB,GAAkB,sBAAd9gC,EAAKxN,KACP,OAAOwN,EAET,KAAOze,KAAKktB,IAAI,KAAK,CACnB,MAAMsM,EAAUx5B,KAAK25B,YAAY9S,GACjC2S,EAAQlrB,OAASmQ,EACjB+a,EAAQ3B,SAAW73B,KAAKs/C,qBACxB7gC,EAAOze,KAAK65B,WAAWL,EAAS,sBAClC,CACA,OAAO/a,CACT,CACAghC,yBACE,IAAIhhC,EACJ,OAAQze,KAAK2kB,MAAM1T,MACjB,KAAK,EAUH,OATAwN,EAAOze,KAAK05B,YACZ15B,KAAK0/C,WAAWz/C,EAAMC,OACtBF,KAAK0iB,OACLjE,EAAOze,KAAK2/C,4BAA4BlhC,EAAMxe,EAAME,QACvB,uBAAzBse,EAAK+wB,WAAWv+B,MAClBjR,KAAKwiB,MAAMwrB,GAAUC,iBAAkB,CACrC1pC,GAAIka,IAGDA,EACT,KAAK,IACL,KAAK,IACH,OAAOze,KAAK4/C,gBACd,QACE,MAAM5/C,KAAKwiB,MAAMwrB,GAAUO,oBAAqB,CAC9ChqC,GAAIvE,KAAK2kB,MAAMkC,WAGvB,CACAg5B,0BACE,MAAMphC,EAAOze,KAAK25B,YAAY35B,KAAK2kB,MAAMqD,eACzC,OAAOhoB,KAAK85B,aAAarb,EAAM,qBAAsBze,KAAK2kB,MAAMkC,SAClE,CACAi5B,oBAAoBrhC,GAMlB,OALAze,KAAK0iB,OACLjE,EAAK+wB,WAAaxvC,KAAK+/C,kBACvB//C,KAAK0/C,WAAWz/C,EAAMI,QACtBL,KAAK2kB,MAAMwD,oBAAqB,EAChCnoB,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,iBAC/B,CACAkhC,4BAA4BlhC,EAAMuhC,GAChC,GAAIhgD,KAAK2qB,MAAM,GACblM,EAAK+wB,WAAaxvC,KAAK6/C,8BAClB,CACL,MAAMrQ,EAAaxvC,KAAK+/C,kBACxBthC,EAAK+wB,WAAaA,CACpB,CAIA,OAHAxvC,KAAK0/C,WAAWM,GAChBhgD,KAAK2kB,MAAMwD,oBAAqB,EAChCnoB,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,yBAC/B,CACAwhC,oBACE,MAAMxhC,EAAOze,KAAK05B,YAClB,OAAI15B,KAAK2qB,MAAM,IACb3qB,KAAK0/C,WAAWz/C,EAAMC,OACtBF,KAAK0iB,OACL1iB,KAAK02B,OAAO,IACZjY,EAAKrB,SAAWpd,KAAKmxC,0BACrBnxC,KAAK0/C,WAAWz/C,EAAME,QACtBH,KAAK2kB,MAAMwD,oBAAqB,EAChCnoB,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,wBAE/BA,EAAKld,KAAOvB,KAAKu/C,yBACjB9gC,EAAKlQ,MAAQvO,KAAKktB,IAAI,IAAMltB,KAAKy/C,yBAA2B,KACrDz/C,KAAK65B,WAAWpb,EAAM,gBAC/B,CACAyhC,yBAAyBr5B,GACvB,MAAMpI,EAAOze,KAAK25B,YAAY9S,GAC9B,OAAI7mB,KAAKktB,IAAI,KACJltB,KAAK65B,WAAWpb,EAAM,uBAE/BA,EAAKld,KAAOvB,KAAKw/C,sBACVx/C,KAAKmgD,gCAAgC1hC,GAC9C,CACA0hC,gCAAgC1hC,GAC9B,MAAMo/B,EAAa,GACnB,MAAQ79C,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,MACpCkzB,EAAWt7C,KAAKvC,KAAKigD,qBAKvB,OAHAxhC,EAAKo/B,WAAaA,EAClBp/B,EAAK2hC,YAAcpgD,KAAKktB,IAAI,IAC5BltB,KAAK02B,OAAO,KACL12B,KAAK65B,WAAWpb,EAAM,oBAC/B,CACA4hC,yBAAyBx5B,GACvB,MAAMpI,EAAOze,KAAK25B,YAAY9S,GAC9B,OAAI7mB,KAAKktB,IAAI,KACJltB,KAAK65B,WAAWpb,EAAM,uBAE/BA,EAAKld,KAAOvB,KAAKw/C,sBACjBx/C,KAAK02B,OAAO,KACL12B,KAAK65B,WAAWpb,EAAM,qBAC/B,CACA6hC,kBAAkBz5B,GAChB,MAAMpI,EAAOze,KAAK25B,YAAY9S,GACxB05B,EAAW,GACXC,EAAiBxgD,KAAKkgD,yBAAyBr5B,GACrD,IAAI45B,EAAiB,KACrB,IAAKD,EAAeJ,YAAa,CAC/BM,EAAU,OACR,OAAQ1gD,KAAK2kB,MAAM1T,MACjB,KAAK,IAGH,GAFA4V,EAAW7mB,KAAK2kB,MAAMkC,SACtB7mB,KAAK0iB,OACD1iB,KAAKktB,IAAI,IAAK,CAChBuzB,EAAiBzgD,KAAKqgD,yBAAyBx5B,GAC/C,MAAM65B,CACR,CACAH,EAASh+C,KAAKvC,KAAKsgD,kBAAkBz5B,IACrC,MACF,KAAK,IACH05B,EAASh+C,KAAKvC,KAAK4/C,iBACnB,MACF,KAAK,EACH,CACE,MAAMnhC,EAAOze,KAAK05B,YAClB15B,KAAK0/C,WAAWz/C,EAAMC,OACtBF,KAAK0iB,OACD1iB,KAAK2qB,MAAM,IACb41B,EAASh+C,KAAKvC,KAAK8/C,oBAAoBrhC,IAEvC8hC,EAASh+C,KAAKvC,KAAK2/C,4BAA4BlhC,EAAMxe,EAAMI,SAE7D,KACF,CACF,QACEL,KAAK+V,aAGP24B,GAAW8R,KAAoB9R,GAAW+R,IAAsC,OAAnBA,EAC/DzgD,KAAKwiB,MAAMwrB,GAAUI,0BAA2B,CAC9C7pC,GAAIk8C,KAEI/R,GAAW8R,IAAmB9R,GAAW+R,GACnDzgD,KAAKwiB,MAAMwrB,GAAUE,yBAA0B,CAC7C3pC,GAAIk8C,EACJtS,eAAgBQ,GAAoB6R,EAAej/C,QAE3CmtC,GAAW8R,IAAoB9R,GAAW+R,IAChD9R,GAAoB8R,EAAel/C,QAAUotC,GAAoB6R,EAAej/C,OAClFvB,KAAKwiB,MAAMwrB,GAAUE,yBAA0B,CAC7C3pC,GAAIk8C,EACJtS,eAAgBQ,GAAoB6R,EAAej/C,OAI3D,CASA,GARImtC,GAAW8R,IACb/hC,EAAKkiC,gBAAkBH,EACvB/hC,EAAKmiC,gBAAkBH,IAEvBhiC,EAAK+hC,eAAiBA,EACtB/hC,EAAKgiC,eAAiBA,GAExBhiC,EAAK8hC,SAAWA,EACZvgD,KAAK2qB,MAAM,IACb,MAAM3qB,KAAKwiB,MAAMwrB,GAAUS,6BAA8B,CACvDlqC,GAAIvE,KAAK2kB,MAAMkC,WAGnB,OAAO6nB,GAAW8R,GAAkBxgD,KAAK65B,WAAWpb,EAAM,eAAiBze,KAAK65B,WAAWpb,EAAM,aACnG,CACAoiC,kBACE,MAAMh6B,EAAW7mB,KAAK2kB,MAAMkC,SAE5B,OADA7mB,KAAK0iB,OACE1iB,KAAKsgD,kBAAkBz5B,EAChC,CACA64B,WAAWoB,GACT,MAAM,QACJ9zC,GACEhN,KAAK2kB,MACT3X,EAAQA,EAAQF,OAAS,GAAKg0C,CAChC,CACAlB,cAAczoB,GACZ,OAAIn3B,KAAK2qB,MAAM,KACN3qB,KAAK46C,aAAa56C,KAAK2kB,MAAMpW,MAAO,WAClCvO,KAAK2qB,MAAM,KACb3qB,KAAK6gD,kBACH7gD,KAAK2qB,MAAM,KAAiD,KAA1C3qB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,MAC5Dld,KAAKgvB,aAAa,KACXhvB,KAAK6gD,mBAEL79B,MAAM48B,cAAczoB,EAE/B,CACA7I,YACqBtuB,KAAKotB,aACRrtB,eAAeijB,MAAMsL,WACvC,CACAE,iBAAiBjf,GACf,MAAMvC,EAAUhN,KAAKotB,aACrB,GAAIpgB,IAAY/M,EAAMI,OAAtB,CAIA,GAAI2M,IAAY/M,EAAME,QAAU6M,IAAY/M,EAAMG,OAAQ,CACxD,GAAI8e,GAAkB3P,GAEpB,YADAvP,KAAKq/C,cAGP,GAAa,KAAT9vC,EAGF,QAFEvP,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,KAGnB,IAAc,KAAThf,GAAwB,KAATA,IAAgBvC,IAAY/M,EAAME,OAEpD,YADAH,KAAKg/C,cAAczvC,EAGvB,CACA,GAAa,KAATA,GAAevP,KAAK2kB,MAAMwD,oBAAoE,KAA9CnoB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GAGzF,QAFEld,KAAK2kB,MAAMzH,SACbld,KAAKuuB,YAAY,KAGnBvL,MAAMwL,iBAAiBjf,EArBvB,MAFEvP,KAAK4+C,cAwBT,CACAz9C,cAAc4tB,GACZ,MAAM,QACJ/hB,EAAO,KACPiE,GACEjR,KAAK2kB,MACT,GAAa,KAAT1T,GAA4B,MAAb8d,EACjB/hB,EAAQsY,QAAQ,EAAG,EAAGrlB,EAAMG,QAC5BJ,KAAK2kB,MAAMwD,oBAAqB,OAC3B,GAAa,MAATlX,EACTjE,EAAQzK,KAAKtC,EAAME,aACd,GAAa,MAAT8Q,EAAc,CACvB,MAAMyY,EAAM1c,EAAQA,EAAQF,OAAS,GACjC4c,IAAQzpB,EAAME,QAAuB,KAAb4uB,GAAmBrF,IAAQzpB,EAAMG,QAC3D4M,EAAQC,MACRjN,KAAK2kB,MAAMwD,mBAAqBnb,EAAQA,EAAQF,OAAS,KAAO7M,EAAMI,SAEtEL,KAAK0/C,WAAWz/C,EAAMI,QACtBL,KAAK2kB,MAAMwD,oBAAqB,EAEpC,MACEnoB,KAAK2kB,MAAMwD,mBAp4MRnmB,EAo4MwDiP,EAE/D,GAy3GA8vC,KAx1MS9G,GAAc,cAA8BA,EACrDp6C,eAAekjB,GACbC,SAASD,GACT/iB,KAAKghD,gBAAariD,CACpB,CACA25B,kBACE,OAAOpV,EACT,CACA+9B,mBACE,OAAOjhD,KAAK2jB,gBAAgB,OAAQ,QAA8B,SAApB3jB,KAAKghD,UACrD,CACAE,mBACE,QAASlhD,KAAK2jB,gBAAgB,OAAQ,QACxC,CACA4K,YAAYtd,EAAM0X,GACH,MAAT1X,GAAyB,KAATA,GAAwB,KAATA,QACTtS,IAApBqB,KAAKghD,aACPhhD,KAAKghD,WAAa,MAGtBh+B,MAAMuL,YAAYtd,EAAM0X,EAC1B,CACAlE,WAAWC,GACT,QAAwB/lB,IAApBqB,KAAKghD,WAA0B,CACjC,MAAMG,EAAUhjB,GAAkBijB,KAAK18B,EAAQnW,OAC/C,GAAK4yC,EAAe,GAAmB,SAAfA,EAAQ,GAC9BnhD,KAAKghD,WAAa,WACb,IAAmB,WAAfG,EAAQ,GAGjB,MAAM,IAAItS,MAAM,0BAFhB7uC,KAAKghD,WAAa,QAGpB,CACF,CACAh+B,MAAMyB,WAAWC,EACnB,CACA28B,yBAAyBC,GACvB,MAAMC,EAAYvhD,KAAK2kB,MAAMyC,OAC7BpnB,KAAK2kB,MAAMyC,QAAS,EACpBpnB,KAAK02B,OAAO4qB,GAAO,IACnB,MAAMrwC,EAAOjR,KAAKwhD,gBAElB,OADAxhD,KAAK2kB,MAAMyC,OAASm6B,EACbtwC,CACT,CACAwwC,qBACE,MAAMhjC,EAAOze,KAAK05B,YACZgoB,EAAY1hD,KAAK2kB,MAAMkC,SAQ7B,OAPA7mB,KAAK0iB,OACL1iB,KAAKm2B,iBAAiB,KAClBn2B,KAAK2kB,MAAMuD,aAAew5B,EAAUr0C,MAAQ,GAC9CrN,KAAKwiB,MAAM4X,GAAW+C,mCAAoC,CACxD54B,GAAIm9C,IAGJ1hD,KAAKktB,IAAI,KACXzO,EAAKlQ,MAAQyU,MAAM+8B,kBACnB//C,KAAK02B,OAAO,IACL12B,KAAK65B,WAAWpb,EAAM,sBAEtBze,KAAK65B,WAAWpb,EAAM,oBAEjC,CACAkjC,uCACE,MAAMJ,EAAYvhD,KAAK2kB,MAAMyC,OAC7BpnB,KAAK2kB,MAAMyC,QAAS,EACpBpnB,KAAK02B,OAAO,IACZ,IAAIzlB,EAAO,KACP2wC,EAAY,KAWhB,OAVI5hD,KAAK2qB,MAAM,KACb3qB,KAAK2kB,MAAMyC,OAASm6B,EACpBK,EAAY5hD,KAAKyhD,uBAEjBxwC,EAAOjR,KAAKwhD,gBACZxhD,KAAK2kB,MAAMyC,OAASm6B,EAChBvhD,KAAK2qB,MAAM,MACbi3B,EAAY5hD,KAAKyhD,uBAGd,CAACxwC,EAAM2wC,EAChB,CACAC,sBAAsBpjC,GAGpB,OAFAze,KAAK0iB,OACL1iB,KAAK8hD,sBAAsBrjC,GAAM,GAC1Bze,KAAK65B,WAAWpb,EAAM,eAC/B,CACAsjC,yBAAyBtjC,GACvBze,KAAK0iB,OACL,MAAME,EAAKnE,EAAKmE,GAAK5iB,KAAKwxC,kBACpBwQ,EAAWhiD,KAAK05B,YAChBuoB,EAAgBjiD,KAAK05B,YACvB15B,KAAK2qB,MAAM,IACbq3B,EAASvF,eAAiBz8C,KAAKkiD,oCAE/BF,EAASvF,eAAiB,KAE5Bz8C,KAAK02B,OAAO,IACZ,MAAMyrB,EAAMniD,KAAKoiD,8BAWjB,OAVAJ,EAASn8B,OAASs8B,EAAIt8B,OACtBm8B,EAASpkC,KAAOukC,EAAIvkC,KACpBokC,EAAShiD,KAAOmiD,EAAIx6C,MACpB3H,KAAK02B,OAAO,KACXsrB,EAASK,WAAY5jC,EAAKmjC,WAAa5hD,KAAK2hD,uCAC7CM,EAAcK,eAAiBtiD,KAAK65B,WAAWmoB,EAAU,0BACzDp/B,EAAG0/B,eAAiBtiD,KAAK65B,WAAWooB,EAAe,kBACnDjiD,KAAKg6B,iBAAiBpX,GACtB5iB,KAAKw2B,YACLx2B,KAAK+hB,MAAMC,YAAYvD,EAAKmE,GAAGrhB,KA5nFVghD,KA4nFsC9jC,EAAKmE,GAAG9F,IAAItP,OAChExN,KAAK65B,WAAWpb,EAAM,kBAC/B,CACA+jC,iBAAiB/jC,EAAMgkC,GACrB,OAAIziD,KAAK2qB,MAAM,IACN3qB,KAAK6hD,sBAAsBpjC,GACzBze,KAAK2qB,MAAM,IACb3qB,KAAK+hD,yBAAyBtjC,GAC5Bze,KAAK2qB,MAAM,IACb3qB,KAAK0iD,yBAAyBjkC,GAC5Bze,KAAKk2B,cAAc,KACxBl2B,KAAK2qB,MAAM,IACN3qB,KAAK2iD,8BAA8BlkC,IAEtCgkC,GACFziD,KAAKwiB,MAAM4X,GAAWgC,oBAAqB,CACzC73B,GAAIvE,KAAK2kB,MAAMsD,kBAGZjoB,KAAK4iD,uBAAuBnkC,IAE5Bze,KAAK41B,aAAa,KACpB51B,KAAK6iD,0BAA0BpkC,GAC7Bze,KAAK41B,aAAa,KACpB51B,KAAK8iD,2BAA2BrkC,GAC9Bze,KAAK41B,aAAa,KACpB51B,KAAK+iD,0BAA0BtkC,GAC7Bze,KAAK2qB,MAAM,IACb3qB,KAAKgjD,kCAAkCvkC,EAAMgkC,QAEpDziD,KAAK+V,YAET,CACA2sC,yBAAyBjkC,GAKvB,OAJAze,KAAK0iB,OACLjE,EAAKmE,GAAK5iB,KAAKijD,oCAAmC,GAClDjjD,KAAK+hB,MAAMC,YAAYvD,EAAKmE,GAAGrhB,KA3qFtB6e,EA2qFsC3B,EAAKmE,GAAG9F,IAAItP,OAC3DxN,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAmkC,uBAAuBnkC,GACrBze,KAAK+hB,MAAMF,MA3sFK,GA4sFZ7hB,KAAK2qB,MAAM,KACblM,EAAKmE,GAAKI,MAAM48B,gBAEhBnhC,EAAKmE,GAAK5iB,KAAKwxC,kBAEjB,MAAM0R,EAAWzkC,EAAK09B,KAAOn8C,KAAK05B,YAC5ByiB,EAAO+G,EAAS/G,KAAO,GAE7B,IADAn8C,KAAK02B,OAAO,IACJ12B,KAAK2qB,MAAM,IAAI,CACrB,IAAIu4B,EAAWljD,KAAK05B,YAChB15B,KAAK2qB,MAAM,KACb3qB,KAAK0iB,OACA1iB,KAAK41B,aAAa,MAAS51B,KAAK2qB,MAAM,KACzC3qB,KAAKwiB,MAAM4X,GAAW8B,oCAAqC,CACzD33B,GAAIvE,KAAK2kB,MAAMsD,kBAGnBjF,MAAMmgC,YAAYD,KAElBljD,KAAKm2B,iBAAiB,IAAKiE,GAAWsD,qCACtCwlB,EAAWljD,KAAKwiD,iBAAiBU,GAAU,IAE7C/G,EAAK55C,KAAK2gD,EACZ,CACAljD,KAAK+hB,MAAMD,OACX9hB,KAAK02B,OAAO,GACZ12B,KAAK65B,WAAWqpB,EAAU,kBAC1B,IAAI7xC,EAAO,KACP+xC,GAAkB,EAyBtB,OAxBAjH,EAAKhuB,SAAQk1B,KAxMjB,SAAwBA,GACtB,MAA4B,gCAArBA,EAAYpyC,MAA+D,6BAArBoyC,EAAYpyC,QAAyCoyC,EAAYlF,aAAgD,cAAjCkF,EAAYlF,YAAYltC,MAAyD,yBAAjCoyC,EAAYlF,YAAYltC,KACvN,CAuMUqyC,CAAeD,GAOa,yBAArBA,EAAYpyC,OACjBmyC,GACFpjD,KAAKwiB,MAAM4X,GAAWO,8BAA+B,CACnDp2B,GAAI8+C,IAGK,OAAThyC,GACFrR,KAAKwiB,MAAM4X,GAAWE,2BAA4B,CAChD/1B,GAAI8+C,IAGRhyC,EAAO,WACP+xC,GAAkB,IAlBL,aAAT/xC,GACFrR,KAAKwiB,MAAM4X,GAAWE,2BAA4B,CAChD/1B,GAAI8+C,IAGRhyC,EAAO,KAcT,IAEFoN,EAAKpN,KAAOA,GAAQ,WACbrR,KAAK65B,WAAWpb,EAAM,gBAC/B,CACAukC,kCAAkCvkC,EAAMgkC,GAEtC,GADAziD,KAAK02B,OAAO,IACR12B,KAAKktB,IAAI,IAQX,OAPIltB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAC/BlM,EAAK0/B,YAAcn+C,KAAKwiD,iBAAiBxiD,KAAK05B,cAE9Cjb,EAAK0/B,YAAcn+C,KAAKwhD,gBACxBxhD,KAAKw2B,aAEP/X,EAAK8kC,SAAU,EACRvjD,KAAK65B,WAAWpb,EAAM,4BAE7B,GAAIze,KAAK2qB,MAAM,KAAO3qB,KAAKwjD,UAAYxjD,KAAK41B,aAAa,MAAQ51B,KAAK41B,aAAa,QAAU6sB,EAAc,CACzG,MAAM5hD,EAAQb,KAAK2kB,MAAMpW,MACzB,MAAMvO,KAAKwiB,MAAM4X,GAAWoD,6BAA8B,CACxDj5B,GAAIvE,KAAK2kB,MAAMkC,SACf4W,sBAAuB58B,EACvB46B,WAAYsC,GAAkBl9B,IAElC,CACA,OAAIb,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK41B,aAAa,MAC1EnX,EAAK0/B,YAAcn+C,KAAKwiD,iBAAiBxiD,KAAK05B,aAC9Cjb,EAAK8kC,SAAU,EACRvjD,KAAK65B,WAAWpb,EAAM,6BACpBze,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAAM3qB,KAAK41B,aAAa,MAAQ51B,KAAK41B,aAAa,MAAQ51B,KAAK41B,aAAa,MAEhG,4BADlBnX,EAAOze,KAAK+9C,YAAYt/B,EAAM,OACrBxN,OACPwN,EAAKxN,KAAO,oBACZwN,EAAK8kC,SAAU,SACR9kC,EAAKglC,YAEdhlC,EAAKxN,KAAO,UAAYwN,EAAKxN,KACtBwN,QAGXze,KAAK+V,YACP,CACA4sC,8BAA8BlkC,GAK5B,OAJAze,KAAK0iB,OACL1iB,KAAKm2B,iBAAiB,KACtB1X,EAAK6jC,eAAiBtiD,KAAK0jD,0BAC3B1jD,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,uBAC/B,CACAokC,0BAA0BpkC,GACxBze,KAAK0iB,OACL,MAAMihC,EAAW3jD,KAAK4jD,mBAAmBnlC,GAEzC,OADAklC,EAAS1yC,KAAO,mBACT0yC,CACT,CACAb,2BAA2BrkC,GACzBze,KAAK0iB,OACL,MAAMihC,EAAW3jD,KAAK6jD,oBAAoBplC,GAAM,GAEhD,OADAklC,EAAS1yC,KAAO,oBACT0yC,CACT,CACAZ,0BAA0BtkC,GAGxB,OAFAze,KAAK0iB,OACL1iB,KAAK8hD,sBAAsBrjC,GAAM,GAC1Bze,KAAK65B,WAAWpb,EAAM,mBAC/B,CACAqjC,sBAAsBrjC,EAAMqlC,GAW1B,GAVArlC,EAAKmE,GAAK5iB,KAAK+jD,+BAA+BD,GAAS,GACvD9jD,KAAK+hB,MAAMC,YAAYvD,EAAKmE,GAAGrhB,KAAMuiD,EAtyFvB1jC,GAsyFiDD,GAAc1B,EAAKmE,GAAG9F,IAAItP,OACrFxN,KAAK2qB,MAAM,IACblM,EAAKg+B,eAAiBz8C,KAAKkiD,oCAE3BzjC,EAAKg+B,eAAiB,KAExBh+B,EAAKulC,QAAU,GACfvlC,EAAKwlC,WAAa,GAClBxlC,EAAKylC,OAAS,GACVlkD,KAAKktB,IAAI,IACX,GACEzO,EAAKulC,QAAQzhD,KAAKvC,KAAKmkD,oCACfL,GAAW9jD,KAAKktB,IAAI,KAEhC,GAAI42B,EAAS,CACX,GAAI9jD,KAAKk2B,cAAc,KACrB,GACEzX,EAAKylC,OAAO3hD,KAAKvC,KAAKmkD,mCACfnkD,KAAKktB,IAAI,KAEpB,GAAIltB,KAAKk2B,cAAc,KACrB,GACEzX,EAAKwlC,WAAW1hD,KAAKvC,KAAKmkD,mCACnBnkD,KAAKktB,IAAI,IAEtB,CACAzO,EAAK09B,KAAOn8C,KAAKokD,oBAAoB,CACnCC,YAAaP,EACbQ,YAAY,EACZC,aAAa,EACbC,WAAYV,EACZW,cAAc,GAElB,CACAN,4BACE,MAAM1lC,EAAOze,KAAK05B,YAOlB,OANAjb,EAAKmE,GAAK5iB,KAAK0kD,mCACX1kD,KAAK2qB,MAAM,IACblM,EAAKg+B,eAAiBz8C,KAAK2kD,sCAE3BlmC,EAAKg+B,eAAiB,KAEjBz8C,KAAK65B,WAAWpb,EAAM,mBAC/B,CACAmmC,mBAAmBnmC,GAEjB,OADAze,KAAK8hD,sBAAsBrjC,GAAM,GAC1Bze,KAAK65B,WAAWpb,EAAM,uBAC/B,CACAomC,mBAAmBnlC,GACJ,MAATA,GACF1f,KAAKwiB,MAAM4X,GAAW8C,6BAA8B,CAClD34B,GAAIvE,KAAK2kB,MAAMkC,UAGrB,CACAi+B,kBAAkBplC,EAAMmH,EAAUs3B,GAC3BhkB,GAActa,IAAIH,IACvB1f,KAAKwiB,MAAM27B,EAAc/jB,GAAWG,mBAAqBH,GAAW6C,uBAAwB,CAC1F14B,GAAIsiB,EACJ2T,aAAc9a,GAElB,CACAqkC,8BAA8BgB,EAAS5G,GAErC,OADAn+C,KAAK8kD,kBAAkB9kD,KAAK2kB,MAAMpW,MAAOvO,KAAK2kB,MAAMkC,SAAUs3B,GACvDn+C,KAAKwxC,gBAAgBuT,EAC9B,CACAnB,mBAAmBnlC,GAUjB,OATAA,EAAKmE,GAAK5iB,KAAK+jD,+BAA8B,GAAO,GACpD/jD,KAAK+hB,MAAMC,YAAYvD,EAAKmE,GAAGrhB,KAAM4e,GAAc1B,EAAKmE,GAAG9F,IAAItP,OAC3DxN,KAAK2qB,MAAM,IACblM,EAAKg+B,eAAiBz8C,KAAKkiD,oCAE3BzjC,EAAKg+B,eAAiB,KAExBh+B,EAAKm0B,MAAQ5yC,KAAKqhD,yBAAyB,IAC3CrhD,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,YAC/B,CACAolC,oBAAoBplC,EAAMumC,GAkBxB,OAjBAhlD,KAAKm2B,iBAAiB,KACtB1X,EAAKmE,GAAK5iB,KAAK+jD,+BAA8B,GAAM,GACnD/jD,KAAK+hB,MAAMC,YAAYvD,EAAKmE,GAAGrhB,KAAM4e,GAAc1B,EAAKmE,GAAG9F,IAAItP,OAC3DxN,KAAK2qB,MAAM,IACblM,EAAKg+B,eAAiBz8C,KAAKkiD,oCAE3BzjC,EAAKg+B,eAAiB,KAExBh+B,EAAKwmC,UAAY,KACbjlD,KAAK2qB,MAAM,MACblM,EAAKwmC,UAAYjlD,KAAKqhD,yBAAyB,KAEjD5iC,EAAKymC,SAAW,KACXF,IACHvmC,EAAKymC,SAAWllD,KAAKqhD,yBAAyB,KAEhDrhD,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,aAC/B,CACA0mC,uBAAuBC,GAAiB,GACtC,MAAMC,EAAerlD,KAAK2kB,MAAMkC,SAC1BpI,EAAOze,KAAK05B,YACZ4rB,EAAWtlD,KAAKulD,oBAChBC,EAAQxlD,KAAKijD,qCAcnB,OAbAxkC,EAAKld,KAAOikD,EAAMjkD,KAClBkd,EAAK6mC,SAAWA,EAChB7mC,EAAKgnC,MAAQD,EAAMlD,eACftiD,KAAK2qB,MAAM,KACb3qB,KAAKktB,IAAI,IACTzO,EAAK8kC,QAAUvjD,KAAKwhD,iBAEhB4D,GACFplD,KAAKwiB,MAAM4X,GAAW+B,wBAAyB,CAC7C53B,GAAI8gD,IAIHrlD,KAAK65B,WAAWpb,EAAM,gBAC/B,CACAyjC,oCACE,MAAMX,EAAYvhD,KAAK2kB,MAAMyC,OACvB3I,EAAOze,KAAK05B,YAClBjb,EAAKoH,OAAS,GACd7lB,KAAK2kB,MAAMyC,QAAS,EAChBpnB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAC/B3qB,KAAK0iB,OAEL1iB,KAAK+V,aAEP,IAAI2vC,GAAkB,EACtB,EAAG,CACD,MAAMC,EAAgB3lD,KAAKmlD,uBAAuBO,GAClDjnC,EAAKoH,OAAOtjB,KAAKojD,GACbA,EAAcpC,UAChBmC,GAAkB,GAEf1lD,KAAK2qB,MAAM,KACd3qB,KAAK02B,OAAO,GAEhB,QAAU12B,KAAK2qB,MAAM,KAGrB,OAFA3qB,KAAK02B,OAAO,IACZ12B,KAAK2kB,MAAMyC,OAASm6B,EACbvhD,KAAK65B,WAAWpb,EAAM,2BAC/B,CACAkmC,sCACE,MAAMlmC,EAAOze,KAAK05B,YACZ6nB,EAAYvhD,KAAK2kB,MAAMyC,OAC7B3I,EAAKoH,OAAS,GACd7lB,KAAK2kB,MAAMyC,QAAS,EACpBpnB,KAAK02B,OAAO,IACZ,MAAMkvB,EAAwB5lD,KAAK2kB,MAAM0C,mBAEzC,IADArnB,KAAK2kB,MAAM0C,oBAAqB,GACxBrnB,KAAK2qB,MAAM,KACjBlM,EAAKoH,OAAOtjB,KAAKvC,KAAKwhD,iBACjBxhD,KAAK2qB,MAAM,KACd3qB,KAAK02B,OAAO,IAMhB,OAHA12B,KAAK2kB,MAAM0C,mBAAqBu+B,EAChC5lD,KAAK02B,OAAO,IACZ12B,KAAK2kB,MAAMyC,OAASm6B,EACbvhD,KAAK65B,WAAWpb,EAAM,6BAC/B,CACAonC,+CACE,MAAMpnC,EAAOze,KAAK05B,YACZ6nB,EAAYvhD,KAAK2kB,MAAMyC,OAI7B,IAHA3I,EAAKoH,OAAS,GACd7lB,KAAK2kB,MAAMyC,QAAS,EACpBpnB,KAAK02B,OAAO,KACJ12B,KAAK2qB,MAAM,KACjBlM,EAAKoH,OAAOtjB,KAAKvC,KAAK8lD,wCACjB9lD,KAAK2qB,MAAM,KACd3qB,KAAK02B,OAAO,IAKhB,OAFA12B,KAAK02B,OAAO,IACZ12B,KAAK2kB,MAAMyC,OAASm6B,EACbvhD,KAAK65B,WAAWpb,EAAM,6BAC/B,CACAsnC,yBACE,MAAMtnC,EAAOze,KAAK05B,YAGlB,GAFA15B,KAAKm2B,iBAAiB,KACtB1X,EAAKulC,QAAU,GACXhkD,KAAKktB,IAAI,IACX,GACEzO,EAAKulC,QAAQzhD,KAAKvC,KAAKmkD,mCAChBnkD,KAAKktB,IAAI,KASpB,OAPAzO,EAAK09B,KAAOn8C,KAAKokD,oBAAoB,CACnCC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAETzkD,KAAK65B,WAAWpb,EAAM,0BAC/B,CACAunC,6BACE,OAAOhmD,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,KAAO3H,MAAM48B,gBAAkB5/C,KAAKwxC,iBAAgB,EAC3F,CACAyU,2BAA2BxnC,EAAMynC,EAAUZ,GAYzC,OAXA7mC,EAAK0nC,OAASD,EACgB,KAA1BlmD,KAAKqtB,YAAYpc,MACnBwN,EAAKmE,GAAK5iB,KAAKgmD,6BACfvnC,EAAKjS,IAAMxM,KAAKqhD,6BAEhB5iC,EAAKmE,GAAK,KACVnE,EAAKjS,IAAMxM,KAAKwhD,iBAElBxhD,KAAK02B,OAAO,GACZjY,EAAKlQ,MAAQvO,KAAKqhD,2BAClB5iC,EAAK6mC,SAAWA,EACTtlD,KAAK65B,WAAWpb,EAAM,oBAC/B,CACA2nC,gCAAgC3nC,EAAMynC,GAgBpC,OAfAznC,EAAK0nC,OAASD,EACdznC,EAAKmE,GAAK5iB,KAAKgmD,6BACfhmD,KAAK02B,OAAO,GACZ12B,KAAK02B,OAAO,GACR12B,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAC/BlM,EAAK8zB,QAAS,EACd9zB,EAAKi/B,UAAW,EAChBj/B,EAAKlQ,MAAQvO,KAAKqmD,6BAA6BrmD,KAAK25B,YAAYlb,EAAK3B,IAAItP,UAEzEiR,EAAK8zB,QAAS,EACVvyC,KAAKktB,IAAI,MACXzO,EAAKi/B,UAAW,GAElBj/B,EAAKlQ,MAAQvO,KAAKqhD,4BAEbrhD,KAAK65B,WAAWpb,EAAM,yBAC/B,CACA4nC,6BAA6B5nC,GAgB3B,IAfAA,EAAKoH,OAAS,GACdpH,EAAKb,KAAO,KACZa,EAAKg+B,eAAiB,KACtBh+B,EAAKze,KAAO,KACRA,KAAK2qB,MAAM,MACblM,EAAKg+B,eAAiBz8C,KAAKkiD,qCAE7BliD,KAAK02B,OAAO,IACR12B,KAAK2qB,MAAM,MACblM,EAAKze,KAAOA,KAAKsmD,4BAA2B,GAC5C7nC,EAAKze,KAAKuB,KAAO,KACZvB,KAAK2qB,MAAM,KACd3qB,KAAK02B,OAAO,MAGR12B,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,KACpClM,EAAKoH,OAAOtjB,KAAKvC,KAAKsmD,4BAA2B,IAC5CtmD,KAAK2qB,MAAM,KACd3qB,KAAK02B,OAAO,IAQhB,OALI12B,KAAKktB,IAAI,MACXzO,EAAKb,KAAO5d,KAAKsmD,4BAA2B,IAE9CtmD,KAAK02B,OAAO,IACZjY,EAAK4jC,WAAariD,KAAKqhD,2BAChBrhD,KAAK65B,WAAWpb,EAAM,yBAC/B,CACA8nC,gCAAgC9nC,EAAMynC,GACpC,MAAMM,EAAYxmD,KAAK05B,YAGvB,OAFAjb,EAAK0nC,OAASD,EACdznC,EAAKlQ,MAAQvO,KAAKqmD,6BAA6BG,GACxCxmD,KAAK65B,WAAWpb,EAAM,yBAC/B,CACA2lC,qBAAoB,YAClBC,EAAW,WACXC,EAAU,YACVC,EAAW,WACXC,EAAU,aACVC,IAEA,MAAMlD,EAAYvhD,KAAK2kB,MAAMyC,OAC7BpnB,KAAK2kB,MAAMyC,QAAS,EACpB,MAAMnC,EAAYjlB,KAAK05B,YAKvB,IAAI+sB,EACAC,EALJzhC,EAAU0hC,eAAiB,GAC3B1hC,EAAUvW,WAAa,GACvBuW,EAAU2hC,SAAW,GACrB3hC,EAAU4hC,cAAgB,GAG1B,IAAIC,GAAU,EAWd,IAVIxC,GAActkD,KAAK2qB,MAAM,IAC3B3qB,KAAK02B,OAAO,GACZ+vB,EAAW,EACXC,GAAQ,IAER1mD,KAAK02B,OAAO,GACZ+vB,EAAW,EACXC,GAAQ,GAEVzhC,EAAUyhC,MAAQA,GACV1mD,KAAK2qB,MAAM87B,IAAW,CAC5B,IAAIP,GAAW,EACXa,EAAgB,KAChBC,EAAkB,KACtB,MAAMvoC,EAAOze,KAAK05B,YAClB,GAAI8qB,GAAcxkD,KAAK41B,aAAa,KAAM,CACxC,MAAMvI,EAAYrtB,KAAKqtB,YACA,KAAnBA,EAAUpc,MAAkC,KAAnBoc,EAAUpc,OACrCjR,KAAK0iB,OACLqkC,EAAgB/mD,KAAK2kB,MAAMkC,SAC3Bw9B,GAAc,EAElB,CACA,GAAIA,GAAerkD,KAAK41B,aAAa,KAAM,CACzC,MAAMvI,EAAYrtB,KAAKqtB,YACA,KAAnBA,EAAUpc,MAAkC,KAAnBoc,EAAUpc,OACrCjR,KAAK0iB,OACLwjC,GAAW,EAEf,CACA,MAAMZ,EAAWtlD,KAAKulD,oBACtB,GAAIvlD,KAAKktB,IAAI,GACU,MAAjB65B,GACF/mD,KAAK+V,WAAWgxC,GAEd/mD,KAAKktB,IAAI,IACPo4B,GACFtlD,KAAK+V,WAAWuvC,EAASxoC,IAAItP,OAE/ByX,EAAU4hC,cAActkD,KAAKvC,KAAKomD,gCAAgC3nC,EAAMynC,KAExEjhC,EAAU2hC,SAASrkD,KAAKvC,KAAKimD,2BAA2BxnC,EAAMynC,EAAUZ,SAErE,GAAItlD,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IACjB,MAAjBo8B,GACF/mD,KAAK+V,WAAWgxC,GAEdzB,GACFtlD,KAAK+V,WAAWuvC,EAASxoC,IAAItP,OAE/ByX,EAAU0hC,eAAepkD,KAAKvC,KAAKumD,gCAAgC9nC,EAAMynC,QACpE,CACL,IAAI70C,EAAO,QACPrR,KAAK41B,aAAa,KAAO51B,KAAK41B,aAAa,OAEzC/pB,EADc7L,KAAKqtB,YACkBpc,QACvCI,EAAOrR,KAAK2kB,MAAMpW,MAClBvO,KAAK0iB,QAGT,MAAMukC,EAAgBjnD,KAAKknD,4BAA4BzoC,EAAMynC,EAAUa,EAAezB,EAAUj0C,EAAMkzC,EAA6B,MAAhBE,EAAuBA,GAAgBiC,GACpI,OAAlBO,GACFH,GAAU,EACVE,EAAkBhnD,KAAK2kB,MAAMsD,iBAE7BhD,EAAUvW,WAAWnM,KAAK0kD,EAE9B,CACAjnD,KAAKmnD,2BACDH,GAAoBhnD,KAAK2qB,MAAM,IAAO3qB,KAAK2qB,MAAM,IACnD3qB,KAAKwiB,MAAM4X,GAAW4C,kCAAmC,CACvDz4B,GAAIyiD,GAGV,CACAhnD,KAAK02B,OAAO+vB,GACRlC,IACFt/B,EAAU6hC,QAAUA,GAEtB,MAAMp9B,EAAM1pB,KAAK65B,WAAW5U,EAAW,wBAEvC,OADAjlB,KAAK2kB,MAAMyC,OAASm6B,EACb73B,CACT,CACAw9B,4BAA4BzoC,EAAMynC,EAAUa,EAAezB,EAAUj0C,EAAMkzC,EAAaE,GACtF,GAAIzkD,KAAKktB,IAAI,IAEX,OADuBltB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAAM3qB,KAAK2qB,MAAM,IAEhF45B,EAIOE,GACVzkD,KAAKwiB,MAAM4X,GAAW2B,mBAAoB,CACxCx3B,GAAIvE,KAAK2kB,MAAMsD,kBALjBjoB,KAAKwiB,MAAM4X,GAAW4B,uBAAwB,CAC5Cz3B,GAAIvE,KAAK2kB,MAAMsD,kBAOfq9B,GACFtlD,KAAKwiB,MAAM4X,GAAW6B,gBAAiB,CACrC13B,GAAI+gD,IAGD,OAEJf,GACHvkD,KAAKwiB,MAAM4X,GAAWgD,qBAAsB,CAC1C74B,GAAIvE,KAAK2kB,MAAMsD,kBAGE,MAAjB8+B,GACF/mD,KAAK+V,WAAWgxC,GAEdzB,GACFtlD,KAAKwiB,MAAM4X,GAAWoC,eAAgB,CACpCj4B,GAAI+gD,IAGR7mC,EAAKrB,SAAWpd,KAAKwhD,gBACdxhD,KAAK65B,WAAWpb,EAAM,6BACxB,CACLA,EAAKjS,IAAMxM,KAAKgmD,6BAChBvnC,EAAK0nC,OAASD,EACdznC,EAAK2oC,MAAyB,MAAjBL,EACbtoC,EAAKpN,KAAOA,EACZ,IAAIqsC,GAAW,EA4Bf,OA3BI19C,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAC/BlM,EAAK8zB,QAAS,EACO,MAAjBwU,GACF/mD,KAAK+V,WAAWgxC,GAEdzB,GACFtlD,KAAK+V,WAAWuvC,EAASxoC,IAAItP,OAE/BiR,EAAKlQ,MAAQvO,KAAKqmD,6BAA6BrmD,KAAK25B,YAAYlb,EAAK3B,IAAItP,QAC5D,QAAT6D,GAA2B,QAATA,GACpBrR,KAAKqnD,4BAA4B5oC,IAE9B8lC,GAAiC,gBAAlB9lC,EAAKjS,IAAIjL,MAA0Bkd,EAAKlQ,MAAMvO,MAChEA,KAAKwiB,MAAM4X,GAAWsC,6BAA8B,CAClDn4B,GAAIka,EAAKlQ,MAAMvO,SAIN,SAATqR,GAAiBrR,KAAK+V,aAC1B0I,EAAK8zB,QAAS,EACVvyC,KAAKktB,IAAI,MACXwwB,GAAW,GAEbj/B,EAAKlQ,MAAQvO,KAAKqhD,2BAClB5iC,EAAK6mC,SAAWA,GAElB7mC,EAAKi/B,SAAWA,EACT19C,KAAK65B,WAAWpb,EAAM,qBAC/B,CACF,CACA4oC,4BAA4BxvB,GAC1B,MAAMyvB,EAA+B,QAAlBzvB,EAASxmB,KAAiB,EAAI,EAC3CvE,EAAS+qB,EAAStpB,MAAMsX,OAAO/Y,QAAU+qB,EAAStpB,MAAMqP,KAAO,EAAI,GACrEia,EAAStpB,MAAMvO,MACjBA,KAAKwiB,MAAwB,QAAlBqV,EAASxmB,KAAiB+oB,GAAWwB,0BAA4BxB,GAAWmC,0BAA2B,CAChHh4B,GAAIszB,EAAStpB,MAAMvO,OAGnB8M,IAAWw6C,GACbtnD,KAAKwiB,MAAwB,QAAlBqV,EAASxmB,KAAiBwM,EAAO/L,eAAiB+L,EAAO9L,eAAgB,CAClFxN,GAAIszB,IAGc,QAAlBA,EAASxmB,MAAkBwmB,EAAStpB,MAAMqP,MAC5C5d,KAAKwiB,MAAM3E,EAAO7L,uBAAwB,CACxCzN,GAAIszB,GAGV,CACAsvB,0BACOnnD,KAAKktB,IAAI,KAAQltB,KAAKktB,IAAI,KAAQltB,KAAK2qB,MAAM,IAAO3qB,KAAK2qB,MAAM,IAClE3qB,KAAK+V,YAET,CACA2uC,iCAAiC79B,EAAUjE,GAEf,MAAbiE,IAAgCA,EAAW7mB,KAAK2kB,MAAMkC,UACnE,IAAIpI,EAAOmE,GAAM5iB,KAAK+jD,+BAA8B,GACpD,KAAO/jD,KAAKktB,IAAI,KAAK,CACnB,MAAMq6B,EAAQvnD,KAAK25B,YAAY9S,GAC/B0gC,EAAMC,cAAgB/oC,EACtB8oC,EAAM3kC,GAAK5iB,KAAK+jD,+BAA8B,GAC9CtlC,EAAOze,KAAK65B,WAAW0tB,EAAO,0BAChC,CACA,OAAO9oC,CACT,CACAgpC,qBAAqB5gC,EAAUjE,GAC7B,MAAMnE,EAAOze,KAAK25B,YAAY9S,GAM9B,OALApI,EAAKg+B,eAAiB,KACtBh+B,EAAKmE,GAAK5iB,KAAK0kD,iCAAiC79B,EAAUjE,GACtD5iB,KAAK2qB,MAAM,MACblM,EAAKg+B,eAAiBz8C,KAAK2kD,uCAEtB3kD,KAAK65B,WAAWpb,EAAM,wBAC/B,CACAipC,sBACE,MAAMjpC,EAAOze,KAAK05B,YAGlB,OAFA15B,KAAK02B,OAAO,IACZjY,EAAKrB,SAAWpd,KAAK2nD,uBACd3nD,KAAK65B,WAAWpb,EAAM,uBAC/B,CACAmpC,qBACE,MAAMnpC,EAAOze,KAAK05B,YAGlB,IAFAjb,EAAKxe,MAAQ,GACbD,KAAK02B,OAAO,GACL12B,KAAK2kB,MAAMzH,IAAMld,KAAK8M,SAAW9M,KAAK2qB,MAAM,KACjDlM,EAAKxe,MAAMsC,KAAKvC,KAAKwhD,kBACjBxhD,KAAK2qB,MAAM,KACf3qB,KAAK02B,OAAO,IAGd,OADA12B,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,sBAC/B,CACA6nC,2BAA2BzU,GACzB,IAAItwC,EAAO,KACPm8C,GAAW,EACX4E,EAAiB,KACrB,MAAM7jC,EAAOze,KAAK05B,YACZmuB,EAAK7nD,KAAKqtB,YACVy6B,EAA6B,KAApB9nD,KAAK2kB,MAAM1T,KAuB1B,OAtBgB,KAAZ42C,EAAG52C,MAA2B,KAAZ42C,EAAG52C,MACnB62C,IAAWjW,GACb7xC,KAAKwiB,MAAM4X,GAAWwC,qBAAsB,CAC1Cr4B,GAAIka,IAGRld,EAAOvB,KAAKwxC,gBAAgBsW,GACxB9nD,KAAKktB,IAAI,MACXwwB,GAAW,EACPoK,GACF9nD,KAAKwiB,MAAM4X,GAAWuC,0BAA2B,CAC/Cp4B,GAAIka,KAIV6jC,EAAiBtiD,KAAKqhD,4BAEtBiB,EAAiBtiD,KAAKwhD,gBAExB/iC,EAAKld,KAAOA,EACZkd,EAAKi/B,SAAWA,EAChBj/B,EAAK6jC,eAAiBA,EACftiD,KAAK65B,WAAWpb,EAAM,oBAC/B,CACAspC,mCAAmC92C,GACjC,MAAMwN,EAAOze,KAAK25B,YAAY1oB,EAAK6L,IAAItP,OAIvC,OAHAiR,EAAKld,KAAO,KACZkd,EAAKi/B,UAAW,EAChBj/B,EAAK6jC,eAAiBrxC,EACfjR,KAAK65B,WAAWpb,EAAM,oBAC/B,CACA2jC,4BAA4Bv8B,EAAS,IACnC,IAAIjI,EAAO,KACPjW,EAAQ,KAQZ,IAPI3H,KAAK2qB,MAAM,MACbhjB,EAAQ3H,KAAKsmD,4BAA2B,GACxC3+C,EAAMpG,KAAO,KACRvB,KAAK2qB,MAAM,KACd3qB,KAAK02B,OAAO,MAGR12B,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,KACpC9E,EAAOtjB,KAAKvC,KAAKsmD,4BAA2B,IACvCtmD,KAAK2qB,MAAM,KACd3qB,KAAK02B,OAAO,IAMhB,OAHI12B,KAAKktB,IAAI,MACXtP,EAAO5d,KAAKsmD,4BAA2B,IAElC,CACLzgC,SACAjI,OACAjW,QAEJ,CACAqgD,0BAA0BnhC,EAAUpI,EAAMmE,GACxC,OAAQA,EAAGrhB,MACT,IAAK,MACH,OAAOvB,KAAK65B,WAAWpb,EAAM,qBAC/B,IAAK,OACL,IAAK,UACH,OAAOze,KAAK65B,WAAWpb,EAAM,yBAC/B,IAAK,QACH,OAAOze,KAAK65B,WAAWpb,EAAM,uBAC/B,IAAK,QACH,OAAOze,KAAK65B,WAAWpb,EAAM,uBAC/B,IAAK,SACH,OAAOze,KAAK65B,WAAWpb,EAAM,wBAC/B,IAAK,SACH,OAAOze,KAAK65B,WAAWpb,EAAM,wBAC/B,IAAK,SACH,OAAOze,KAAK65B,WAAWpb,EAAM,wBAC/B,QAEE,OADAze,KAAK6kD,mBAAmBjiC,EAAGrhB,MACpBvB,KAAKynD,qBAAqB5gC,EAAUjE,GAEjD,CACA+kC,uBACE,MAAM9gC,EAAW7mB,KAAK2kB,MAAMkC,SACtBpI,EAAOze,KAAK05B,YAClB,IAAIyoB,EACAlxC,EACAg3C,GAAgB,EACpB,MAAMrC,EAAwB5lD,KAAK2kB,MAAM0C,mBACzC,OAAQrnB,KAAK2kB,MAAM1T,MACjB,KAAK,EACH,OAAOjR,KAAKokD,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAElB,KAAK,EACH,OAAOzkD,KAAKokD,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAElB,KAAK,EAIH,OAHAzkD,KAAK2kB,MAAM0C,oBAAqB,EAChCpW,EAAOjR,KAAK4nD,qBACZ5nD,KAAK2kB,MAAM0C,mBAAqBu+B,EACzB30C,EACT,KAAK,GAUH,OATAwN,EAAKg+B,eAAiBz8C,KAAKkiD,oCAC3BliD,KAAK02B,OAAO,IACZyrB,EAAMniD,KAAKoiD,8BACX3jC,EAAKoH,OAASs8B,EAAIt8B,OAClBpH,EAAKb,KAAOukC,EAAIvkC,KAChBa,EAAKze,KAAOmiD,EAAIx6C,MAChB3H,KAAK02B,OAAO,IACZ12B,KAAK02B,OAAO,IACZjY,EAAK4jC,WAAariD,KAAKwhD,gBAChBxhD,KAAK65B,WAAWpb,EAAM,0BAC/B,KAAK,GAEH,GADAze,KAAK0iB,QACA1iB,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,IACjC,GAAIhf,EAAkB3L,KAAK2kB,MAAM1T,OAASjR,KAAK2qB,MAAM,IAAK,CACxD,MAAM7qB,EAAQE,KAAKqtB,YAAYpc,KAC/Bg3C,EAA0B,KAAVnoD,GAA0B,KAAVA,CAClC,MACEmoD,GAAgB,EAGpB,GAAIA,EAAe,CAIjB,GAHAjoD,KAAK2kB,MAAM0C,oBAAqB,EAChCpW,EAAOjR,KAAKwhD,gBACZxhD,KAAK2kB,MAAM0C,mBAAqBu+B,EAC5B5lD,KAAK2kB,MAAM0C,sBAAwBrnB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAiC,KAA1B3qB,KAAKqtB,YAAYpc,MAE1F,OADAjR,KAAK02B,OAAO,IACLzlB,EAEPjR,KAAKktB,IAAI,GAEb,CAaA,OAXEi1B,EADElxC,EACIjR,KAAKoiD,4BAA4B,CAACpiD,KAAK+nD,mCAAmC92C,KAE1EjR,KAAKoiD,8BAEb3jC,EAAKoH,OAASs8B,EAAIt8B,OAClBpH,EAAKb,KAAOukC,EAAIvkC,KAChBa,EAAKze,KAAOmiD,EAAIx6C,MAChB3H,KAAK02B,OAAO,IACZ12B,KAAK02B,OAAO,IACZjY,EAAK4jC,WAAariD,KAAKwhD,gBACvB/iC,EAAKg+B,eAAiB,KACfz8C,KAAK65B,WAAWpb,EAAM,0BAC/B,KAAK,IACH,OAAOze,KAAK46C,aAAa56C,KAAK2kB,MAAMpW,MAAO,+BAC7C,KAAK,GACL,KAAK,GAGH,OAFAkQ,EAAKlQ,MAAQvO,KAAK2qB,MAAM,IACxB3qB,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,gCAC/B,KAAK,GACH,GAAyB,MAArBze,KAAK2kB,MAAMpW,MAAe,CAE5B,GADAvO,KAAK0iB,OACD1iB,KAAK2qB,MAAM,KACb,OAAO3qB,KAAKkoD,oBAAoBloD,KAAK2kB,MAAMpW,MAAO,8BAA+BkQ,GAEnF,GAAIze,KAAK2qB,MAAM,KACb,OAAO3qB,KAAKkoD,oBAAoBloD,KAAK2kB,MAAMpW,MAAO,8BAA+BkQ,GAEnF,MAAMze,KAAKwiB,MAAM4X,GAAWiD,6BAA8B,CACxD94B,GAAIvE,KAAK2kB,MAAMkC,UAEnB,CAEA,YADA7mB,KAAK+V,aAEP,KAAK,IACH,OAAO/V,KAAK46C,aAAa56C,KAAK2kB,MAAMpW,MAAO,+BAC7C,KAAK,IACH,OAAOvO,KAAK46C,aAAa56C,KAAK2kB,MAAMpW,MAAO,+BAC7C,KAAK,GAEH,OADAvO,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,sBAC/B,KAAK,GAEH,OADAze,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,6BAC/B,KAAK,GAEH,OADAze,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,sBAC/B,KAAK,GAEH,OADAze,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,wBAC/B,KAAK,GACH,OAAOze,KAAK0nD,sBACd,QACE,GAAI17C,EAAehM,KAAK2kB,MAAM1T,MAAO,CACnC,MAAMpQ,EAAQoL,EAAejM,KAAK2kB,MAAM1T,MAExC,OADAjR,KAAK0iB,OACEM,MAAMmlC,iBAAiB1pC,EAAM5d,EACtC,CAAO,GAAI8K,EAAkB3L,KAAK2kB,MAAM1T,MACtC,OAAIjR,KAAK41B,aAAa,KACb51B,KAAK+lD,yBAEP/lD,KAAKgoD,0BAA0BnhC,EAAUpI,EAAMze,KAAKwxC,mBAGjExxC,KAAK+V,YACP,CACAqyC,uBACE,MAAMvhC,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,IAAI5V,EAAOjR,KAAK2nD,uBACZU,GAA4B,EAChC,MAAQroD,KAAK2qB,MAAM,IAAM3qB,KAAK2qB,MAAM,OAAS3qB,KAAKo2B,sBAAsB,CACtE,MAAM3X,EAAOze,KAAK25B,YAAY9S,GACxB62B,EAAW19C,KAAKktB,IAAI,IAC1Bm7B,EAA4BA,GAA6B3K,EACzD19C,KAAK02B,OAAO,IACPgnB,GAAY19C,KAAK2qB,MAAM,IAC1BlM,EAAK6U,YAAcriB,EACnBjR,KAAK0iB,OACLzR,EAAOjR,KAAK65B,WAAWpb,EAAM,yBAE7BA,EAAK6pC,WAAar3C,EAClBwN,EAAK8pC,UAAYvoD,KAAKwhD,gBACtBxhD,KAAK02B,OAAO,GACR2xB,GACF5pC,EAAKi/B,SAAWA,EAChBzsC,EAAOjR,KAAK65B,WAAWpb,EAAM,8BAE7BxN,EAAOjR,KAAK65B,WAAWpb,EAAM,qBAGnC,CACA,OAAOxN,CACT,CACAu3C,sBACE,MAAM/pC,EAAOze,KAAK05B,YAClB,OAAI15B,KAAKktB,IAAI,KACXzO,EAAK6jC,eAAiBtiD,KAAKwoD,sBACpBxoD,KAAK65B,WAAWpb,EAAM,2BAEtBze,KAAKooD,sBAEhB,CACAK,qCACE,MAAM/V,EAAQ1yC,KAAKwoD,sBACnB,IAAKxoD,KAAK2kB,MAAM0C,oBAAsBrnB,KAAKktB,IAAI,IAAK,CAClD,MAAMzO,EAAOze,KAAK25B,YAAY+Y,EAAM51B,IAAItP,OAMxC,OALAiR,EAAKoH,OAAS,CAAC7lB,KAAK+nD,mCAAmCrV,IACvDj0B,EAAKb,KAAO,KACZa,EAAKze,KAAO,KACZye,EAAK4jC,WAAariD,KAAKwhD,gBACvB/iC,EAAKg+B,eAAiB,KACfz8C,KAAK65B,WAAWpb,EAAM,yBAC/B,CACA,OAAOi0B,CACT,CACAgW,4BACE,MAAMjqC,EAAOze,KAAK05B,YAClB15B,KAAKktB,IAAI,IACT,MAAMjc,EAAOjR,KAAKyoD,qCAElB,IADAhqC,EAAKxe,MAAQ,CAACgR,GACPjR,KAAKktB,IAAI,KACdzO,EAAKxe,MAAMsC,KAAKvC,KAAKyoD,sCAEvB,OAA6B,IAAtBhqC,EAAKxe,MAAM6M,OAAemE,EAAOjR,KAAK65B,WAAWpb,EAAM,6BAChE,CACAkqC,qBACE,MAAMlqC,EAAOze,KAAK05B,YAClB15B,KAAKktB,IAAI,IACT,MAAMjc,EAAOjR,KAAK0oD,4BAElB,IADAjqC,EAAKxe,MAAQ,CAACgR,GACPjR,KAAKktB,IAAI,KACdzO,EAAKxe,MAAMsC,KAAKvC,KAAK0oD,6BAEvB,OAA6B,IAAtBjqC,EAAKxe,MAAM6M,OAAemE,EAAOjR,KAAK65B,WAAWpb,EAAM,sBAChE,CACA+iC,gBACE,MAAMD,EAAYvhD,KAAK2kB,MAAMyC,OAC7BpnB,KAAK2kB,MAAMyC,QAAS,EACpB,MAAMnW,EAAOjR,KAAK2oD,qBAElB,OADA3oD,KAAK2kB,MAAMyC,OAASm6B,EACbtwC,CACT,CACA60C,uCACE,GAAwB,MAApB9lD,KAAK2kB,MAAM1T,MAAqC,MAArBjR,KAAK2kB,MAAMpW,MAAe,CACvD,MAAMsY,EAAW7mB,KAAK2kB,MAAMkC,SACtBpI,EAAOze,KAAKwxC,kBAClB,OAAOxxC,KAAKynD,qBAAqB5gC,EAAUpI,EAC7C,CACE,OAAOze,KAAKwhD,eAEhB,CACAkC,0BACE,MAAMjlC,EAAOze,KAAK05B,YAElB,OADAjb,EAAK6jC,eAAiBtiD,KAAKqhD,2BACpBrhD,KAAK65B,WAAWpb,EAAM,iBAC/B,CACAwkC,mCAAmC2F,GACjC,MAAMpD,EAAQoD,EAAyB5oD,KAAKwxC,kBAAoBxxC,KAAK+jD,gCAKrE,OAJI/jD,KAAK2qB,MAAM,MACb66B,EAAMlD,eAAiBtiD,KAAK0jD,0BAC5B1jD,KAAKg6B,iBAAiBwrB,IAEjBA,CACT,CACAqD,oBAAoBpqC,GAGlB,OAFAA,EAAK+wB,WAAW8S,eAAiB7jC,EAAK6jC,eACtCtiD,KAAKg6B,iBAAiBvb,EAAK+wB,WAAY/wB,EAAK6jC,eAAexlC,IAAIrP,KACxDgR,EAAK+wB,UACd,CACA+V,oBACE,IAAID,EAAW,KACf,OAAItlD,KAAK2qB,MAAM,KACb26B,EAAWtlD,KAAK05B,YACS,MAArB15B,KAAK2kB,MAAMpW,MACb+2C,EAASj0C,KAAO,OAEhBi0C,EAASj0C,KAAO,QAElBrR,KAAK0iB,OACE1iB,KAAK65B,WAAWyrB,EAAU,aAE5BA,CACT,CACA3I,kBAAkBl+B,EAAMqqC,EAAqBjM,GAAW,GAClDiM,EACF9oD,KAAK+oD,iCAAiCtqC,GAAM,IAAMuE,MAAM25B,kBAAkBl+B,GAAM,EAAMo+B,KAGxF75B,MAAM25B,kBAAkBl+B,GAAM,EAAOo+B,EACvC,CACAmM,2BAA2BvqC,EAAMxN,EAAM4rC,GAAW,GAChD,GAAI78C,KAAK2qB,MAAM,IAAK,CAClB,MAAMq3B,EAAWhiD,KAAK05B,aACrBsoB,EAASM,eAAgB7jC,EAAKmjC,WAAa5hD,KAAK2hD,uCACjDljC,EAAK4jC,WAAaL,EAASM,eAAiBtiD,KAAK65B,WAAWmoB,EAAU,kBAAoB,IAC5F,CACA,OAAOh/B,MAAMgmC,2BAA2BvqC,EAAMxN,EAAM4rC,EACtD,CACAoM,mBAAmB1oC,GACjB,GAAIvgB,KAAK2kB,MAAM+B,QAAU1mB,KAAK41B,aAAa,MAEzC,GAAIhqB,EADc5L,KAAKqtB,YACkBpc,MAAO,CAC9C,MAAMwN,EAAOze,KAAK05B,YAElB,OADA15B,KAAK0iB,OACE1iB,KAAK4kD,mBAAmBnmC,EACjC,OACK,GAAIze,KAAKkhD,oBAAsBlhD,KAAK41B,aAAa,KAAM,CAC5D,MAAMnX,EAAOze,KAAK05B,YAElB,OADA15B,KAAK0iB,OACE1iB,KAAKkpD,yBAAyBzqC,EACvC,CACA,MAAM48B,EAAOr4B,MAAMimC,mBAAmB1oC,GAItC,YAHwB5hB,IAApBqB,KAAKghD,YAA6BhhD,KAAK07C,iBAAiBL,KAC1Dr7C,KAAKghD,WAAa,MAEb3F,CACT,CACA8N,yBAAyB1qC,EAAMwyB,EAAMe,GACnC,GAAkB,eAAdf,EAAKhgC,KACP,GAAkB,YAAdggC,EAAK1vC,MACP,GAAIvB,KAAK2qB,MAAM,KAAOhf,EAAkB3L,KAAK2kB,MAAM1T,OAASjR,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IACzG,OAAO3qB,KAAKwiD,iBAAiB/jC,QAE1B,GAAI9S,EAAkB3L,KAAK2kB,MAAM1T,MAAO,CAC7C,GAAkB,cAAdggC,EAAK1vC,KACP,OAAOvB,KAAK4kD,mBAAmBnmC,GAC1B,GAAkB,SAAdwyB,EAAK1vC,KACd,OAAOvB,KAAK4jD,mBAAmBnlC,GAC1B,GAAkB,WAAdwyB,EAAK1vC,KACd,OAAOvB,KAAK6jD,oBAAoBplC,GAAM,EAE1C,CAEF,OAAOuE,MAAMmmC,yBAAyB1qC,EAAMwyB,EAAMe,EACpD,CACAoX,+BACE,MAAM,KACJn4C,GACEjR,KAAK2kB,MACT,OAAI5Y,EAAmCkF,IAASjR,KAAKkhD,oBAA+B,MAATjwC,GACjEjR,KAAK2kB,MAAMyD,YAEdpF,MAAMomC,8BACf,CACAC,2BACE,MAAM,KACJp4C,GACEjR,KAAK2kB,MACT,OAAI5Y,EAAmCkF,IAASjR,KAAKkhD,oBAA+B,MAATjwC,EAClEjR,KAAK2kB,MAAMyD,YAEbpF,MAAMqmC,0BACf,CACAC,+BACE,GAAItpD,KAAKkhD,oBAAsBlhD,KAAK41B,aAAa,KAAM,CACrD,MAAMnX,EAAOze,KAAK05B,YAElB,OADA15B,KAAK0iB,OACE1iB,KAAKkpD,yBAAyBzqC,EACvC,CACA,OAAOuE,MAAMsmC,8BACf,CACAC,iBAAiBtY,EAAMpqB,EAAUsQ,GAC/B,IAAKn3B,KAAK2qB,MAAM,IAAK,OAAOsmB,EAC5B,GAAIjxC,KAAK2kB,MAAMwC,uBAAwB,CACrC,MAAM6O,EAASh2B,KAAK2tB,oBACpB,GAAe,KAAXqI,GAA4B,KAAXA,GAA4B,KAAXA,GAA4B,KAAXA,EAErD,OADAh2B,KAAKwpD,2BAA2BryB,GACzB8Z,CAEX,CACAjxC,KAAK02B,OAAO,IACZ,MAAM/R,EAAQ3kB,KAAK2kB,MAAM3H,QACnBysC,EAAoBzpD,KAAK2kB,MAAMsC,UAC/BxI,EAAOze,KAAK25B,YAAY9S,GAC9B,IAAI,WACF6iC,EAAU,OACVC,GACE3pD,KAAK4pD,iCACJC,EAAOt+B,GAAWvrB,KAAK8pD,wBAAwBJ,GACpD,GAAIC,GAAUp+B,EAAQze,OAAS,EAAG,CAChC,MAAMma,EAAY,IAAIwiC,GACtB,GAAIl+B,EAAQze,OAAS,EAAG,CACtB9M,KAAK2kB,MAAQA,EACb3kB,KAAK2kB,MAAMsC,UAAYA,EACvB,IAAK,IAAIxa,EAAI,EAAGA,EAAI8e,EAAQze,OAAQL,IAClCwa,EAAU1kB,KAAKgpB,EAAQ9e,GAAGe,SAG1Bk8C,aACAC,UACE3pD,KAAK4pD,kCACRC,EAAOt+B,GAAWvrB,KAAK8pD,wBAAwBJ,EAClD,CACIC,GAAUE,EAAM/8C,OAAS,GAC3B9M,KAAKwiB,MAAM4X,GAAWC,0BAA2B,CAC/C91B,GAAIogB,EAAMkC,WAGV8iC,GAA2B,IAAjBE,EAAM/8C,SAClB9M,KAAK2kB,MAAQA,EACbsC,EAAU1kB,KAAKsnD,EAAM,GAAGr8C,OACxBxN,KAAK2kB,MAAMsC,UAAYA,IAErByiC,aACAC,UACE3pD,KAAK4pD,iCAEb,CAOA,OANA5pD,KAAK8pD,wBAAwBJ,GAAY,GACzC1pD,KAAK2kB,MAAMsC,UAAYwiC,EACvBzpD,KAAK02B,OAAO,IACZjY,EAAKU,KAAO8xB,EACZxyB,EAAKirC,WAAaA,EAClBjrC,EAAKsrC,UAAY/pD,KAAK+oD,iCAAiCtqC,GAAM,IAAMze,KAAKgqD,sBAAiBrrD,OAAWA,KAC7FqB,KAAK65B,WAAWpb,EAAM,wBAC/B,CACAmrC,gCACE5pD,KAAK2kB,MAAMuC,0BAA0B3kB,KAAKvC,KAAK2kB,MAAMnX,OACrD,MAAMk8C,EAAa1pD,KAAKmxC,0BAClBwY,GAAU3pD,KAAK2qB,MAAM,IAE3B,OADA3qB,KAAK2kB,MAAMuC,0BAA0Bja,MAC9B,CACLy8C,aACAC,SAEJ,CACAG,wBAAwBrrC,EAAMwrC,GAC5B,MAAMh3B,EAAQ,CAACxU,GACTyrC,EAAS,GACf,KAAwB,IAAjBj3B,EAAMnmB,QAAc,CACzB,MAAM2R,EAAOwU,EAAMhmB,MACD,4BAAdwR,EAAKxN,MACHwN,EAAKg+B,iBAAmBh+B,EAAK4jC,WAC/BriD,KAAKmqD,sBAAsB1rC,GAE3ByrC,EAAO3nD,KAAKkc,GAEdwU,EAAM1wB,KAAKkc,EAAK09B,OACO,0BAAd19B,EAAKxN,OACdgiB,EAAM1wB,KAAKkc,EAAKirC,YAChBz2B,EAAM1wB,KAAKkc,EAAKsrC,WAEpB,CACA,OAAIE,GACFC,EAAO/7B,SAAQ1P,GAAQze,KAAKmqD,sBAAsB1rC,KAC3C,CAACyrC,EAAQ,KAlvCtB,SAAmBE,EAAMjrC,GACvB,MAAMkrC,EAAQ,GACRC,EAAQ,GACd,IAAK,IAAI79C,EAAI,EAAGA,EAAI29C,EAAKt9C,OAAQL,KAC9B0S,EAAKirC,EAAK39C,IAAe49C,EAAQC,GAAO/nD,KAAK6nD,EAAK39C,IAErD,MAAO,CAAC49C,EAAOC,EACjB,CA6uCWC,CAAUL,GAAQzrC,GAAQA,EAAKoH,OAAO+qB,OAAM8B,GAAS1yC,KAAK0wC,aAAagC,GAAO,MACvF,CACAyX,sBAAsB1rC,GACpB,IAAImxB,EACJ5vC,KAAKmwC,iBAAiB1xB,EAAKoH,OAAsC,OAA7B+pB,EAAcnxB,EAAKkX,YAAiB,EAASia,EAAYM,kBAAkB,GAC/GlwC,KAAK+hB,MAAMF,MAAM2oC,GACjBxnC,MAAMynC,YAAYhsC,GAAM,GAAO,GAC/Bze,KAAK+hB,MAAMD,MACb,CACAinC,iCAAiCtqC,EAAMy7B,GACrC,IAAIwQ,EAQJ,OAPkE,IAA9D1qD,KAAK2kB,MAAMuC,0BAA0Bna,QAAQ0R,EAAKjR,QACpDxN,KAAK2kB,MAAMuC,0BAA0B3kB,KAAKvC,KAAK2kB,MAAMnX,OACrDk9C,EAASxQ,IACTl6C,KAAK2kB,MAAMuC,0BAA0Bja,OAErCy9C,EAASxQ,IAEJwQ,CACT,CACAC,eAAelsC,EAAMoI,GAMnB,GALApI,EAAOuE,MAAM2nC,eAAelsC,EAAMoI,GAC9B7mB,KAAKktB,IAAI,MACXzO,EAAKi/B,UAAW,EAChB19C,KAAKg6B,iBAAiBvb,IAEpBze,KAAK2qB,MAAM,IAAK,CAClB,MAAMigC,EAAe5qD,KAAK25B,YAAY9S,GAGtC,OAFA+jC,EAAapb,WAAa/wB,EAC1BmsC,EAAatI,eAAiBtiD,KAAK0jD,0BAC5B1jD,KAAK65B,WAAW+wB,EAAc,qBACvC,CACA,OAAOnsC,CACT,CACAosC,wBAAwBpsC,GACJ,sBAAdA,EAAKxN,OAAqD,SAApBwN,EAAKof,YAA6C,WAApBpf,EAAKof,aAA0C,2BAAdpf,EAAKxN,MAAyD,SAApBwN,EAAKglC,YAAuC,yBAAdhlC,EAAKxN,MAAuD,SAApBwN,EAAKglC,YAG9NzgC,MAAM6nC,wBAAwBpsC,EAChC,CACAs/B,YAAYt/B,EAAMuzB,GAChB,MAAM8Y,EAAO9nC,MAAM+6B,YAAYt/B,EAAMuzB,GAIrC,MAHkB,2BAAd8Y,EAAK75C,MAAmD,yBAAd65C,EAAK75C,OACjD65C,EAAKrH,WAAaqH,EAAKrH,YAAc,SAEhCqH,CACT,CACAC,uBAAuBtsC,GACrB,GAAIze,KAAK41B,aAAa,KAAM,CAC1BnX,EAAKglC,WAAa,OAClB,MAAMuH,EAAkBhrD,KAAK05B,YAE7B,OADA15B,KAAK0iB,OACD1iB,KAAK2qB,MAAM,IACblM,EAAKqH,WAAa9lB,KAAKirD,uBAAsB,GAC7CjoC,MAAMkoC,gBAAgBzsC,GACf,MAEAze,KAAK4jD,mBAAmBoH,EAEnC,CAAO,GAAIhrD,KAAK41B,aAAa,KAAM,CACjCnX,EAAKglC,WAAa,OAClB,MAAMuH,EAAkBhrD,KAAK05B,YAE7B,OADA15B,KAAK0iB,OACE1iB,KAAK6jD,oBAAoBmH,GAAiB,EACnD,CAAO,GAAIhrD,KAAK41B,aAAa,KAAM,CACjCnX,EAAKglC,WAAa,OAClB,MAAMuH,EAAkBhrD,KAAK05B,YAE7B,OADA15B,KAAK0iB,OACE1iB,KAAK4kD,mBAAmBoG,EACjC,CAAO,GAAIhrD,KAAKkhD,oBAAsBlhD,KAAK41B,aAAa,KAAM,CAC5DnX,EAAKglC,WAAa,QAClB,MAAMuH,EAAkBhrD,KAAK05B,YAE7B,OADA15B,KAAK0iB,OACE1iB,KAAKkpD,yBAAyB8B,EACvC,CACE,OAAOhoC,MAAM+nC,uBAAuBtsC,EAExC,CACA0sC,cAAc1sC,GACZ,QAAIuE,MAAMmoC,cAAc1sC,OACpBze,KAAK41B,aAAa,MAAkC,KAA1B51B,KAAKqtB,YAAYpc,QAC7CwN,EAAKglC,WAAa,OAClBzjD,KAAK0iB,OACL1iB,KAAK0iB,QACE,EAGX,CACA0oC,mCAAmC3sC,GACjC,MAAM,SACJoI,GACE7mB,KAAK2kB,MACH0mC,EAAeroC,MAAMooC,mCAAmC3sC,GAI9D,OAHI4sC,GAAoC,SAApB5sC,EAAKglC,YACvBzjD,KAAK+V,WAAW8Q,GAEXwkC,CACT,CACAC,aAAa7sC,EAAM8sC,EAAaC,GAC9BxoC,MAAMsoC,aAAa7sC,EAAM8sC,EAAaC,GAClCxrD,KAAK2qB,MAAM,MACblM,EAAKg+B,eAAiBz8C,KAAKkiD,oCAE/B,CACAuJ,iBAAiBpP,EAAWqP,EAAQ/mC,GAClC,MAAM,SACJkC,GACE7mB,KAAK2kB,MACT,GAAI3kB,KAAK41B,aAAa,KAAM,CAC1B,GAAI5S,MAAM2oC,6BAA6BtP,EAAWqP,GAChD,OAEFA,EAAO1G,SAAU,CACnB,CACAhiC,MAAMyoC,iBAAiBpP,EAAWqP,EAAQ/mC,GACtC+mC,EAAO1G,UACW,kBAAhB0G,EAAOz6C,MAA4C,yBAAhBy6C,EAAOz6C,MAAmD,uBAAhBy6C,EAAOz6C,KACtFjR,KAAKwiB,MAAM4X,GAAWK,oBAAqB,CACzCl2B,GAAIsiB,IAEG6kC,EAAOn9C,OAChBvO,KAAKwiB,MAAM4X,GAAWM,6BAA8B,CAClDn2B,GAAImnD,EAAOn9C,QAInB,CACAq9C,WAAWlsC,GACT,MAAgB,aAATA,GAAgC,kBAATA,CAChC,CACAmsC,eACE,MAAMnsC,EAAOsD,MAAMqM,YACby8B,EAAW,KAAOpsC,EACnB1f,KAAK4rD,WAAWlsC,IAAU1f,KAAK2kB,MAAMyC,QACxCpnB,KAAKwiB,MAAM3E,EAAOrI,kBAAmB,CACnCjR,GAAIvE,KAAK2kB,MAAM8D,cACf9a,eAAgBm+C,IAGpB9rD,KAAKuuB,YAAY,IAAKu9B,EACxB,CACAt9B,iBAAiBjf,GACf,MAAMmT,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACvC,MAAT3N,GAAyB,MAATmT,EAClB1iB,KAAKsvB,SAAS,EAAG,IACRtvB,KAAK2kB,MAAMyC,QAAoB,KAAT7X,GAAwB,KAATA,EAErCvP,KAAK2kB,MAAMyC,QAAmB,KAAT7X,EACjB,KAATmT,EACF1iB,KAAKsvB,SAAS,GAAI,GAElBtvB,KAAKsvB,SAAS,GAAI,GAl8H1B,SAAyB4D,EAASxQ,EAAM8N,GACtC,OAAmB,KAAZ0C,GAA2B,KAATxQ,GAAexD,GAAkBsR,EAC5D,CAk8Heu7B,CAAgBx8C,EAAMmT,EAAM1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,KAC5Eld,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAK6rD,gBAEL7oC,MAAMwL,iBAAiBjf,GAXvBvP,KAAKsvB,SAAkB,KAAT/f,EAAc,GAAK,GAAI,EAazC,CACAmhC,aAAajyB,EAAMkyB,GACjB,MAAkB,uBAAdlyB,EAAKxN,KACAjR,KAAK0wC,aAAajyB,EAAK+wB,WAAYmB,GAEnC3tB,MAAM0tB,aAAajyB,EAAMkyB,EAEpC,CACAjB,aAAajxB,EAAMkxB,GAAQ,GACpBA,GAAuB,yBAAdlxB,EAAKxN,MAAsD,uBAAnBwN,EAAK4xB,KAAKp/B,OAC9DwN,EAAK4xB,KAAOrwC,KAAK6oD,oBAAoBpqC,EAAK4xB,OAE5CrtB,MAAM0sB,aAAajxB,EAAMkxB,EAC3B,CACAQ,iBAAiBK,EAAUN,EAAkBP,GAC3C,IAAK,IAAIljC,EAAI,EAAGA,EAAI+jC,EAAS1jC,OAAQL,IAAK,CACxC,MAAMwkC,EAAOT,EAAS/jC,GACsB,wBAA/B,MAARwkC,OAAe,EAASA,EAAKhgC,QAChCu/B,EAAS/jC,GAAKzM,KAAK6oD,oBAAoB5X,GAE3C,CACAjuB,MAAMmtB,iBAAiBK,EAAUN,EAAkBP,EACrD,CACAmB,iBAAiBN,EAAUO,GACzB,IAAK,IAAItkC,EAAI,EAAGA,EAAI+jC,EAAS1jC,OAAQL,IAAK,CACxC,IAAIu/C,EACJ,MAAM/a,EAAOT,EAAS/jC,IAClBwkC,GAAsB,uBAAdA,EAAKhgC,MAAiE,OAA7B+6C,EAAc/a,EAAKtb,QAAkBq2B,EAAYlc,iBAAmBU,EAAS1jC,OAAS,IAAMikC,GAC/I/wC,KAAKwiB,MAAM4X,GAAW2C,kBAAmB,CACvCx4B,GAAI0sC,EAAKqR,gBAGf,CACA,OAAO9R,CACT,CACAyb,eAAexa,EAAOya,EAAcC,EAASh1B,GAC3C,MAAM1Y,EAAOuE,MAAMipC,eAAexa,EAAOya,EAAcC,EAASh1B,GAIhE,OAHI+0B,IAAiBlsD,KAAK2kB,MAAMwC,wBAC9BnnB,KAAK8wC,iBAAiBryB,EAAK4F,UAEtB5F,CACT,CACAo0B,YAAY5hC,EAAMm7C,EAAiBrZ,GACjC,MAAgB,uBAAT9hC,GAAiC+R,MAAM6vB,YAAY5hC,EAAMm7C,EAAiBrZ,EACnF,CACAiK,mBAAmBv+B,GAIjB,OAHIze,KAAK2qB,MAAM,MACblM,EAAK6jC,eAAiBtiD,KAAK0jD,2BAEtB1gC,MAAMg6B,mBAAmBv+B,EAClC,CACAy+B,0BAA0Bz+B,GAIxB,OAHIze,KAAK2qB,MAAM,MACblM,EAAK6jC,eAAiBtiD,KAAK0jD,2BAEtB1gC,MAAMk6B,0BAA0Bz+B,EACzC,CACA4tC,gBACE,OAAOrsD,KAAK2qB,MAAM,KAAO3H,MAAMqpC,eACjC,CACAC,kBACE,OAAOtsD,KAAK2qB,MAAM,KAAO3H,MAAMspC,iBACjC,CACAC,uBAAuBha,GACrB,OAAQvyC,KAAK2qB,MAAM,KAAO3H,MAAMupC,uBAAuBha,EACzD,CACA6J,gBAAgBC,EAAW9J,EAAQ/c,EAAaD,EAAS+mB,EAAeC,GAStE,GARIhK,EAAO+S,UACTtlD,KAAK+V,WAAWw8B,EAAO+S,SAASxoC,IAAItP,cAE/B+kC,EAAO+S,SACVtlD,KAAK2qB,MAAM,MACb4nB,EAAOkK,eAAiBz8C,KAAKkiD,qCAE/Bl/B,MAAMo5B,gBAAgBC,EAAW9J,EAAQ/c,EAAaD,EAAS+mB,EAAeC,GAC1EhK,EAAO1sB,QAAUy2B,EAAe,CAClC,MAAMz2B,EAAS0sB,EAAO1sB,OAClBA,EAAO/Y,OAAS,GAAK9M,KAAKwsD,YAAY3mC,EAAO,KAC/C7lB,KAAKwiB,MAAM4X,GAAWsC,6BAA8B,CAClDn4B,GAAIguC,GAGV,MAAO,GAAoB,qBAAhBA,EAAOthC,MAA+BqrC,GAAiB/J,EAAOhkC,MAAMsX,OAAQ,CACrF,MAAMA,EAAS0sB,EAAOhkC,MAAMsX,OACxBA,EAAO/Y,OAAS,GAAK9M,KAAKwsD,YAAY3mC,EAAO,KAC/C7lB,KAAKwiB,MAAM4X,GAAWsC,6BAA8B,CAClDn4B,GAAIguC,GAGV,CACF,CACAka,uBAAuBpQ,EAAW9J,EAAQ/c,EAAaD,GACjDgd,EAAO+S,UACTtlD,KAAK+V,WAAWw8B,EAAO+S,SAASxoC,IAAItP,cAE/B+kC,EAAO+S,SACVtlD,KAAK2qB,MAAM,MACb4nB,EAAOkK,eAAiBz8C,KAAKkiD,qCAE/Bl/B,MAAMypC,uBAAuBpQ,EAAW9J,EAAQ/c,EAAaD,EAC/D,CACAm3B,gBAAgBjuC,GAKd,GAJAuE,MAAM0pC,gBAAgBjuC,GAClBA,EAAKw7B,YAAcj6C,KAAK2qB,MAAM,MAChClM,EAAKkuC,oBAAsB3sD,KAAK2kD,uCAE9B3kD,KAAK41B,aAAa,KAAM,CAC1B51B,KAAK0iB,OACL,MAAMkqC,EAAcnuC,EAAKwlC,WAAa,GACtC,EAAG,CACD,MAAMxlC,EAAOze,KAAK05B,YAClBjb,EAAKmE,GAAK5iB,KAAK+jD,+BAA8B,GACzC/jD,KAAK2qB,MAAM,IACblM,EAAKg+B,eAAiBz8C,KAAK2kD,sCAE3BlmC,EAAKg+B,eAAiB,KAExBmQ,EAAYrqD,KAAKvC,KAAK65B,WAAWpb,EAAM,mBACzC,OAASze,KAAKktB,IAAI,IACpB,CACF,CACA2/B,wBAAwBta,GACtBvvB,MAAM6pC,wBAAwBta,GAC9B,MAAM1sB,EAAS7lB,KAAKy7C,6BAA6BlJ,GACjD,GAAI1sB,EAAO/Y,OAAS,EAAG,CACrB,MAAM4lC,EAAQ7sB,EAAO,GACjB7lB,KAAKwsD,YAAY9Z,IAA0B,QAAhBH,EAAOlhC,KACpCrR,KAAKwiB,MAAM4X,GAAWwB,0BAA2B,CAC/Cr3B,GAAImuC,IAEG1yC,KAAKwsD,YAAY9Z,IAC1B1yC,KAAKwiB,MAAM4X,GAAWmC,0BAA2B,CAC/Ch4B,GAAImuC,GAGV,CACF,CACAoa,gCAAgCruC,GAC9BA,EAAK6mC,SAAWtlD,KAAKulD,mBACvB,CACA/S,kBAAkB5G,EAAM/kB,EAAU2O,EAAaD,EAAS6nB,EAAWC,EAAYlmB,GAK7E,IAAIslB,EAJA7Q,EAAK0Z,UACPtlD,KAAK+V,WAAW61B,EAAK0Z,SAASxoC,IAAItP,cAE7Bo+B,EAAK0Z,SAERtlD,KAAK2qB,MAAM,MAAQ0yB,IACrBZ,EAAiBz8C,KAAKkiD,oCACjBliD,KAAK2qB,MAAM,KAAK3qB,KAAK+V,cAE5B,MAAM20C,EAAS1nC,MAAMwvB,kBAAkB5G,EAAM/kB,EAAU2O,EAAaD,EAAS6nB,EAAWC,EAAYlmB,GAIpG,OAHIslB,KACDiO,EAAOn8C,OAASm8C,GAAQjO,eAAiBA,GAErCiO,CACT,CACA5Y,6BAA6BY,GA2B3B,OA1BI1yC,KAAKktB,IAAI,MACQ,eAAfwlB,EAAMzhC,MACRjR,KAAKwiB,MAAM4X,GAAWkC,kBAAmB,CACvC/3B,GAAImuC,IAGJ1yC,KAAKwsD,YAAY9Z,IACnB1yC,KAAKwiB,MAAM4X,GAAWuC,0BAA2B,CAC/Cp4B,GAAImuC,IAGRA,EAAMgL,UAAW,GAEf19C,KAAK2qB,MAAM,IACb+nB,EAAM4P,eAAiBtiD,KAAK0jD,0BACnB1jD,KAAKwsD,YAAY9Z,IAC1B1yC,KAAKwiB,MAAM4X,GAAWqC,4BAA6B,CACjDl4B,GAAImuC,IAGJ1yC,KAAK2qB,MAAM,KAAO3qB,KAAKwsD,YAAY9Z,IACrC1yC,KAAKwiB,MAAM4X,GAAWyC,mBAAoB,CACxCt4B,GAAImuC,IAGR1yC,KAAKg6B,iBAAiB0Y,GACfA,CACT,CACAD,kBAAkB5rB,EAAUwpB,GAC1B,MAAM5xB,EAAOuE,MAAMyvB,kBAAkB5rB,EAAUwpB,GAM/C,MALkB,sBAAd5xB,EAAKxN,MAAgCwN,EAAK6jC,gBAAkB7jC,EAAKm0B,MAAMplC,MAAQiR,EAAK6jC,eAAe90C,OACrGxN,KAAKwiB,MAAM4X,GAAW0C,sBAAuB,CAC3Cv4B,GAAIka,EAAK6jC,iBAGN7jC,CACT,CACAsuC,yBAAyBtuC,GACvB,OAAKmf,GAAkBnf,GAGhBqf,GAAqB99B,KAAK2kB,MAAM1T,MAF9B+R,MAAM+pC,yBAAyBtuC,EAG1C,CACAuuC,sBAAsBvuC,GACpBuE,MAAMgqC,sBAAsBvuC,GACxBA,EAAKwuC,QAA8B,UAApBxuC,EAAKof,YACtB79B,KAAKwiB,MAAM4X,GAAWyB,8BAA+B,CACnDt3B,GAAIka,EAAKqH,WAAW,GAAGhJ,IAAItP,OAGjC,CACA0/C,0BAA0BzuC,EAAM0uC,EAAWl8C,GACzCk8C,EAAUC,MAAQxvB,GAAkBnf,GAAQze,KAAK+jD,+BAA8B,GAAM,GAAQ/jD,KAAKwxC,kBAClG/yB,EAAKqH,WAAWvjB,KAAKvC,KAAKqtD,sBAAsBF,EAAWl8C,GAC7D,CACAq8C,iCAAiC7uC,GAC/BA,EAAKof,WAAa,QAClB,IAAIxsB,EAAO,KAMX,GALIrR,KAAK2qB,MAAM,IACbtZ,EAAO,SACErR,KAAK41B,aAAa,OAC3BvkB,EAAO,QAELA,EAAM,CACR,MAAMw2C,EAAK7nD,KAAKqtB,aACV,KACJpc,GACE42C,EACS,SAATx2C,GAA4B,KAATJ,GACrBjR,KAAK+V,WAAW,KAAM8xC,EAAG52C,OAEvB6sB,GAAqB7sB,IAAkB,IAATA,GAAuB,KAATA,KAC9CjR,KAAK0iB,OACLjE,EAAKof,WAAaxsB,EAEtB,CACA,OAAO2R,MAAMsqC,iCAAiC7uC,EAChD,CACA8uC,qBAAqBJ,EAAWK,EAAkBC,EAAoBC,EAAiBzrC,GACrF,MAAM0rC,EAAaR,EAAUS,SAC7B,IAAIC,EAAoB,KACA,eAApBF,EAAW18C,OACW,SAApB08C,EAAWpsD,KACbssD,EAAoB,OACS,WAApBF,EAAWpsD,OACpBssD,EAAoB,WAGxB,IAAIld,GAAY,EAChB,GAAI3wC,KAAK41B,aAAa,MAAQ51B,KAAKi2B,sBAAsB,MAAO,CAC9D,MAAM63B,EAAW9tD,KAAKwxC,iBAAgB,GACZ,OAAtBqc,GAA+BjiD,EAA2B5L,KAAK2kB,MAAM1T,OAKvEk8C,EAAUS,SAAWD,EACrBR,EAAUtvB,WAAa,KACvBsvB,EAAUC,MAAQptD,KAAKwxC,oBANvB2b,EAAUS,SAAWE,EACrBX,EAAUtvB,WAAagwB,EACvBV,EAAUC,MAAQj0B,GAAgB20B,GAMtC,KAAO,CACL,GAA0B,OAAtBD,GAA8BjiD,EAA2B5L,KAAK2kB,MAAM1T,MACtEk8C,EAAUS,SAAW5tD,KAAKwxC,iBAAgB,GAC1C2b,EAAUtvB,WAAagwB,MAClB,CACL,GAAIL,EACF,MAAMxtD,KAAKwiB,MAAM3E,EAAO1J,sBAAuB,CAC7C5P,GAAI4oD,EACJ/4C,WAAYu5C,EAAWp/C,QAG3B4+C,EAAUS,SAAWD,EACrBR,EAAUtvB,WAAa,IACzB,CACI79B,KAAKk2B,cAAc,IACrBi3B,EAAUC,MAAQptD,KAAKwxC,mBAEvBb,GAAY,EACZwc,EAAUC,MAAQj0B,GAAgBg0B,EAAUS,UAEhD,CACA,MAAMG,EAAwBnwB,GAAkBuvB,GAYhD,OAXIM,GAAsBM,GACxB/tD,KAAKwiB,MAAM4X,GAAW0B,oCAAqC,CACzDv3B,GAAI4oD,KAGJM,GAAsBM,IACxB/tD,KAAK8kD,kBAAkBqI,EAAUC,MAAM7rD,KAAM4rD,EAAUC,MAAMtwC,IAAItP,OAAO,IAEtEmjC,GAAc8c,GAAuBM,GACvC/tD,KAAKguD,kBAAkBb,EAAUC,MAAM7rD,KAAM4rD,EAAUrwC,IAAItP,OAAO,GAAM,GAEnExN,KAAKqtD,sBAAsBF,EAAW,kBAC/C,CACA9b,mBACE,OACO,KADCrxC,KAAK2kB,MAAM1T,KAERjR,KAAKwxC,iBAAgB,GAErBxuB,MAAMquB,kBAEnB,CACA4c,oBAAoBxvC,EAAM69B,GACxB,MAAMjrC,EAAOoN,EAAKpN,KACL,QAATA,GAA2B,QAATA,GAAkBrR,KAAK2qB,MAAM,MACjDlM,EAAKg+B,eAAiBz8C,KAAKkiD,qCAE7Bl/B,MAAMirC,oBAAoBxvC,EAAM69B,EAClC,CACA4R,WAAWpD,EAAMz5C,GACf2R,MAAMkrC,WAAWpD,EAAMz5C,GACnBrR,KAAK2qB,MAAM,MACbmgC,EAAKloC,GAAG0/B,eAAiBtiD,KAAK0jD,0BAC9B1jD,KAAKg6B,iBAAiB8wB,EAAKloC,IAE/B,CACAurC,kCAAkC1vC,EAAMy0B,GACtC,GAAIlzC,KAAK2qB,MAAM,IAAK,CAClB,MAAMi7B,EAAwB5lD,KAAK2kB,MAAM0C,mBACzCrnB,KAAK2kB,MAAM0C,oBAAqB,EAChC5I,EAAK4jC,WAAariD,KAAK0jD,0BACvB1jD,KAAK2kB,MAAM0C,mBAAqBu+B,CAClC,CACA,OAAO5iC,MAAMmrC,kCAAkC1vC,EAAMy0B,EACvD,CACAkb,wBACE,OAAOpuD,KAAK2qB,MAAM,KAAO3H,MAAMorC,uBACjC,CACApE,iBAAiB7yB,EAAqBk3B,GACpC,IAAIC,EACJ,IACI3P,EADAh6B,EAAQ,KAEZ,GAAI3kB,KAAKsjB,UAAU,SAAWtjB,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,KAAM,CAGhE,GAFAhG,EAAQ3kB,KAAK2kB,MAAM3H,QACnB2hC,EAAM3+C,KAAK22B,UAAS,IAAM3T,MAAMgnC,iBAAiB7yB,EAAqBk3B,IAAiB1pC,IAClFg6B,EAAIpsB,MAAO,OAAOosB,EAAIlgC,KAC3B,MAAM,QACJzR,GACEhN,KAAK2kB,MACH4pC,EAAiBvhD,EAAQA,EAAQF,OAAS,GAC5CyhD,IAAmBtuD,EAAME,QAAUouD,IAAmBtuD,EAAMI,QAC9D2M,EAAQC,KAEZ,CACA,GAAoB,OAAfqhD,EAAO3P,IAAgB2P,EAAK/7B,OAASvyB,KAAK2qB,MAAM,IAAK,CACxD,IAAI6jC,EAAOC,EAEX,IAAIhS,EADJ93B,EAAQA,GAAS3kB,KAAK2kB,MAAM3H,QAE5B,MAAM/Y,EAAQjE,KAAK22B,UAAS+3B,IAC1B,IAAIC,EACJlS,EAAiBz8C,KAAKkiD,oCACtB,MAAM0M,EAAkB5uD,KAAK+oD,iCAAiCtM,GAAgB,KAC5E,MAAMiO,EAAS1nC,MAAMgnC,iBAAiB7yB,EAAqBk3B,GAE3D,OADAruD,KAAKi6B,2BAA2BywB,EAAQjO,GACjCiO,CAAM,IAEwC,OAAlDiE,EAAwBC,EAAgBj5B,QAAkBg5B,EAAsB7e,eAAe4e,IACpG,MAAMzd,EAAOjxC,KAAK6uD,8BAA8BD,GAIhD,MAHkB,4BAAd3d,EAAKhgC,MAAoCy9C,IAC7Czd,EAAKwL,eAAiBA,EACtBz8C,KAAKi6B,2BAA2BgX,EAAMwL,GAC/BmS,CAAe,GACrBjqC,GACH,IAAIiqC,EAAkB,KACtB,GAAI3qD,EAAMwa,MAAgE,4BAAxDze,KAAK6uD,8BAA8B5qD,EAAMwa,MAAMxN,KAAoC,CACnG,IAAKhN,EAAMsuB,QAAUtuB,EAAMgzB,QAMzB,OALIhzB,EAAMwa,KAAKqwC,OACb9uD,KAAKwiB,MAAM4X,GAAWmD,gDAAiD,CACrEh5B,GAAIk4C,IAGDx4C,EAAMwa,KAEfmwC,EAAkB3qD,EAAMwa,IAC1B,CACA,GAAqB,OAAhB+vC,EAAQ7P,IAAgB6P,EAAM/vC,KAEjC,OADAze,KAAK2kB,MAAQg6B,EAAI5nB,UACV4nB,EAAIlgC,KAEb,GAAImwC,EAEF,OADA5uD,KAAK2kB,MAAQ1gB,EAAM8yB,UACZ63B,EAET,GAAqB,OAAhBH,EAAQ9P,IAAgB8P,EAAMz3B,OAAQ,MAAM2nB,EAAIpsB,MACrD,GAAItuB,EAAM+yB,OAAQ,MAAM/yB,EAAMsuB,MAC9B,MAAMvyB,KAAKwiB,MAAM4X,GAAWkD,kCAAmC,CAC7D/4B,GAAIk4C,GAER,CACA,OAAOz5B,MAAMgnC,iBAAiB7yB,EAAqBk3B,EACrD,CACAU,WAAWtwC,GACT,GAAIze,KAAK2qB,MAAM,IAAK,CAClB,MAAM+/B,EAAS1qD,KAAK22B,UAAS,KAC3B,MAAMivB,EAAwB5lD,KAAK2kB,MAAM0C,mBACzCrnB,KAAK2kB,MAAM0C,oBAAqB,EAChC,MAAM26B,EAAWhiD,KAAK05B,YAKtB,OAJCsoB,EAASM,eAAgB7jC,EAAKmjC,WAAa5hD,KAAK2hD,uCACjD3hD,KAAK2kB,MAAM0C,mBAAqBu+B,EAC5B5lD,KAAKo2B,sBAAsBp2B,KAAK+V,aAC/B/V,KAAK2qB,MAAM,KAAK3qB,KAAK+V,aACnBisC,CAAQ,IAEjB,GAAI0I,EAAO1zB,OAAQ,OAAO,KACtB0zB,EAAOn4B,QAAOvyB,KAAK2kB,MAAQ+lC,EAAO3zB,WACtCtY,EAAK4jC,WAAaqI,EAAOjsC,KAAK6jC,eAAiBtiD,KAAK65B,WAAW6wB,EAAOjsC,KAAM,kBAAoB,IAClG,CACA,OAAOuE,MAAM+rC,WAAWtwC,EAC1B,CACAuwC,iBAAiBnpC,GACf,OAAO7lB,KAAK2qB,MAAM,KAAO3H,MAAMgsC,iBAAiBnpC,EAClD,CACAopC,2BAA2BxwC,EAAMoH,IACmC,IAA9D7lB,KAAK2kB,MAAMuC,0BAA0Bna,QAAQ0R,EAAKjR,OACpDiR,EAAKoH,OAASA,EAEd7C,MAAMisC,2BAA2BxwC,EAAMoH,EAE3C,CACA4kC,YAAYhsC,EAAMywC,EAAiBC,EAAiB7b,GAAoB,GACtE,IAAI6b,IAAiF,IAA9DnvD,KAAK2kB,MAAMuC,0BAA0Bna,QAAQ0R,EAAKjR,OAAzE,CAGA,IAAK,IAAIf,EAAI,EAAGA,EAAIgS,EAAKoH,OAAO/Y,OAAQL,IAClCzM,KAAKwsD,YAAY/tC,EAAKoH,OAAOpZ,KAAOA,EAAI,GAC1CzM,KAAKwiB,MAAM4X,GAAWwC,qBAAsB,CAC1Cr4B,GAAIka,EAAKoH,OAAOpZ,KAItBuW,MAAMynC,YAAYhsC,EAAMywC,EAAiBC,EAAiB7b,EAR1D,CASF,CACA8b,mCAAmCC,GACjC,OAAOrsC,MAAMosC,mCAAmCC,IAAkE,IAApDrvD,KAAK2kB,MAAMsC,UAAUla,QAAQ/M,KAAK2kB,MAAMnX,OACxG,CACA8hD,gBAAgBjR,EAAMx3B,EAAUy3B,GAC9B,GAAkB,eAAdD,EAAKptC,MAAuC,UAAdotC,EAAK98C,OAAsE,IAAlDvB,KAAK2kB,MAAMsC,UAAUla,QAAQ8Z,EAASxZ,OAAe,CAC9GrN,KAAK0iB,OACL,MAAMjE,EAAOze,KAAK25B,YAAY9S,GAC9BpI,EAAKm/B,OAASS,EACd5/B,EAAKmH,UAAY5C,MAAMusC,6BAA6B,IAAI,GACxDlR,EAAOr+C,KAAK65B,WAAWpb,EAAM,iBAC/B,MAAO,GAAkB,eAAd4/B,EAAKptC,MAAuC,UAAdotC,EAAK98C,MAAoBvB,KAAK2qB,MAAM,IAAK,CAChF,MAAMhG,EAAQ3kB,KAAK2kB,MAAM3H,QACnB/Y,EAAQjE,KAAK22B,UAAS+3B,GAAS1uD,KAAKwvD,kCAAkC3oC,IAAa6nC,KAAS/pC,GAClG,IAAK1gB,EAAMsuB,QAAUtuB,EAAMgzB,QAAS,OAAOhzB,EAAMwa,KACjD,MAAMisC,EAAS1qD,KAAK22B,UAAS,IAAM3T,MAAMssC,gBAAgBjR,EAAMx3B,EAAUy3B,IAAU35B,GACnF,GAAI+lC,EAAOjsC,OAASisC,EAAOn4B,MAAO,OAAOm4B,EAAOjsC,KAChD,GAAIxa,EAAMwa,KAER,OADAze,KAAK2kB,MAAQ1gB,EAAM8yB,UACZ9yB,EAAMwa,KAEf,GAAIisC,EAAOjsC,KAET,OADAze,KAAK2kB,MAAQ+lC,EAAO3zB,UACb2zB,EAAOjsC,KAEhB,MAAMxa,EAAMsuB,OAASm4B,EAAOn4B,KAC9B,CACA,OAAOvP,MAAMssC,gBAAgBjR,EAAMx3B,EAAUy3B,EAC/C,CACAF,eAAeC,EAAMx3B,EAAUy3B,EAASmR,GACtC,GAAIzvD,KAAK2qB,MAAM,KAAO3qB,KAAK0vD,sBAAuB,CAEhD,GADAD,EAAelR,qBAAsB,EACjCD,EAEF,OADAmR,EAAehR,MAAO,EACfJ,EAETr+C,KAAK0iB,OACL,MAAMjE,EAAOze,KAAK25B,YAAY9S,GAM9B,OALApI,EAAKm/B,OAASS,EACd5/B,EAAKkxC,cAAgB3vD,KAAK2kD,sCAC1B3kD,KAAK02B,OAAO,IACZjY,EAAKmH,UAAY5lB,KAAKuvD,6BAA6B,IAAI,GACvD9wC,EAAKi/B,UAAW,EACT19C,KAAKw9C,qBAAqB/+B,GAAM,EACzC,CAAO,IAAK6/B,GAAWt+C,KAAKihD,oBAAsBjhD,KAAK2qB,MAAM,IAAK,CAChE,MAAMlM,EAAOze,KAAK25B,YAAY9S,GAC9BpI,EAAKm/B,OAASS,EACd,MAAMqM,EAAS1qD,KAAK22B,UAAS,KAC3BlY,EAAKkxC,cAAgB3vD,KAAK6lD,+CAC1B7lD,KAAK02B,OAAO,IACZjY,EAAKmH,UAAY5C,MAAMusC,6BAA6B,IAAI,GACpDE,EAAelR,sBACjB9/B,EAAKi/B,UAAW,GAEX19C,KAAKw9C,qBAAqB/+B,EAAMgxC,EAAelR,wBAExD,GAAImM,EAAOjsC,KAET,OADIisC,EAAOn4B,QAAOvyB,KAAK2kB,MAAQ+lC,EAAO3zB,WAC/B2zB,EAAOjsC,IAElB,CACA,OAAOuE,MAAMo7B,eAAeC,EAAMx3B,EAAUy3B,EAASmR,EACvD,CACAG,eAAenxC,GACbuE,MAAM4sC,eAAenxC,GACrB,IAAIoxC,EAAQ,KACR7vD,KAAKihD,oBAAsBjhD,KAAK2qB,MAAM,MACxCklC,EAAQ7vD,KAAK22B,UAAS,IAAM32B,KAAK6lD,iDAAgDpnC,MAEnFA,EAAKkxC,cAAgBE,CACvB,CACAL,kCAAkC3oC,GAChC,MAAMpI,EAAOze,KAAK25B,YAAY9S,GAE9B,GADA7mB,KAAKiuD,oBAAoBxvC,GAAM,GAC1Bze,KAAK+uD,WAAWtwC,GACrB,OAAOuE,MAAM8sC,qBAAqBrxC,OAAM9f,GAAW,EACrD,CACA+wB,sBAAsBngB,GACpB,MAAMmT,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACpD,GAAa,KAAT3N,GAAwB,KAATmT,GAAe1iB,KAAK2kB,MAAM2C,eAI3C,OAHAtnB,KAAK2kB,MAAM2C,gBAAiB,EAC5BtnB,KAAK2kB,MAAMzH,KAAO,OAClBld,KAAKitB,YAGPjK,MAAM0M,sBAAsBngB,EAC9B,CACAqgB,mBAAmBrgB,GACjB,MAAMmT,EAAO1iB,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACvC,MAAT3N,GAAyB,MAATmT,EAIpBM,MAAM4M,mBAAmBrgB,GAHvBvP,KAAKsvB,SAAS,EAAG,EAIrB,CACAygC,cAAc5V,EAAM6V,GAClB,MAAMC,EAAWjtC,MAAM+sC,cAAc5V,EAAM6V,GAM3C,OALIhwD,KAAK2kB,MAAM2C,gBACbtnB,KAAKwiB,MAAM4X,GAAWuD,wBAAyB,CAC7Cp5B,GAAIvE,KAAK2kB,MAAM8D,gBAGZwnC,CACT,CACAxhC,mBACE,IAAIzuB,KAAKsjB,UAAU,kBAAmBtjB,KAAKkwD,kBAc3C,OAAOltC,MAAMyL,iBAAiBzuB,KAAK2kB,MAAM2C,eAAiB,MAAQ,MAdlE,CACE,GAAItnB,KAAK2kB,MAAM2C,eACb,MAAMtnB,KAAKwiB,MAAM4X,GAAWiC,kBAAmB,CAC7C93B,GAAIvE,KAAK2kB,MAAMkC,WAGnB7mB,KAAKmwD,2BACL,MAAMC,EAAcpwD,KAAKkwD,kBACrBE,IACFpwD,KAAK2kB,MAAMzH,KAAOkzC,EAClBpwD,KAAK2kB,MAAM2C,gBAAiB,EAGhC,CAEF,CACA4oC,kBACE,MAAM,IACJhzC,GACEld,KAAK2kB,MACT,IAAI0rC,EAA4B,EAChC,KAAO,CAAC,GAAI,GAAGn/B,SAASlxB,KAAK0lB,MAAMC,WAAWzI,EAAMmzC,KAClDA,IAEF,MAAMC,EAAMtwD,KAAK0lB,MAAMC,WAAW0qC,EAA4BnzC,GACxDqzC,EAAMvwD,KAAK0lB,MAAMC,WAAW0qC,EAA4BnzC,EAAM,GACpE,OAAY,KAARozC,GAAsB,KAARC,EACTF,EAA4B,EAE2D,iBAA5FrwD,KAAK0lB,MAAMkD,MAAMynC,EAA4BnzC,EAAKmzC,EAA4BnzC,EAAM,IAC/EmzC,EAA4B,GAEzB,KAARC,GAAsB,KAARC,GACTF,CAGX,CACAF,2BAEE,IAAa,IADDnwD,KAAK0lB,MAAM3Y,QAAQ,KAAM/M,KAAK2kB,MAAMzH,KAE9C,MAAMld,KAAKwiB,MAAM3E,EAAO5C,oBAAqB,CAC3C1W,GAAIvE,KAAK2kB,MAAM8D,eAGrB,CACA+nC,yCAAyC1zC,GAAK,SAC5Cge,EAAQ,WACRD,IAEA76B,KAAKwiB,MAAM4X,GAAWQ,gCAAiC,CACrDr2B,GAAIuY,EACJ+d,aACAC,YAEJ,CACA21B,sCAAsC3zC,EAAK4zC,GACzC,OAAO1wD,KAAKwiB,MAAOkuC,EAAYr1B,aAAiG,WAA7Bq1B,EAAYr1B,aAA4BjB,GAAWkB,uCAAyClB,GAAWgB,wCAA5JhB,GAAWmB,wCAA0L3uB,OAAOjI,OAAO,CAC/PJ,GAAIuY,GACH4zC,GACL,CACAC,wCAAwC7zC,GAAK,SAC3Cge,EAAQ,WACRD,IAEA76B,KAAKwiB,MAAM4X,GAAWsB,+BAAgC,CACpDn3B,GAAIuY,EACJge,WACAD,cAEJ,CACA+1B,mDAAmDnyC,GAAM,SACvDqc,IAEA96B,KAAKwiB,MAAM4X,GAAWuB,0CAA2C,CAC/Dp3B,GAAIka,EACJqc,YAEJ,CACA+1B,qBACE,MAAMhqC,EAAW7mB,KAAK2kB,MAAMkC,SACtBiqC,EAAY,IAAM9wD,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,GACrD,OAAQ3qB,KAAK2kB,MAAM1T,MACjB,KAAK,IACH,CACE,MAAM8/C,EAAU/wD,KAAK86C,oBAAoB96C,KAAK2kB,MAAMpW,OACpD,OAAIuiD,IACK,CACL7/C,KAAM,SACN6L,IAAKi0C,EAAQj0C,IAAItP,MACjBe,MAAOwiD,GAGJ,CACL9/C,KAAM,UACN6L,IAAK+J,EAET,CACF,KAAK,IACH,CACE,MAAMkqC,EAAU/wD,KAAK66C,mBAAmB76C,KAAK2kB,MAAMpW,OACnD,OAAIuiD,IACK,CACL7/C,KAAM,SACN6L,IAAKi0C,EAAQj0C,IAAItP,MACjBe,MAAOwiD,GAGJ,CACL9/C,KAAM,UACN6L,IAAK+J,EAET,CACF,KAAK,GACL,KAAK,GACH,CACE,MAAMkqC,EAAU/wD,KAAKg7C,oBAAoBh7C,KAAK2qB,MAAM,KACpD,OAAImmC,IACK,CACL7/C,KAAM,UACN6L,IAAKi0C,EAAQj0C,IAAItP,MACjBe,MAAOwiD,GAGJ,CACL9/C,KAAM,UACN6L,IAAK+J,EAET,CACF,QACE,MAAO,CACL5V,KAAM,UACN6L,IAAK+J,GAGb,CACAmqC,oBACE,MAAMl0C,EAAM9c,KAAK2kB,MAAMkC,SAMvB,MAAO,CACLjE,GANS5iB,KAAKwxC,iBAAgB,GAO9BhpB,KANWxoB,KAAKktB,IAAI,IAAMltB,KAAK6wD,qBAAuB,CACtD5/C,KAAM,OACN6L,OAMJ,CACAm0C,kCAAkCn0C,EAAK9P,EAASkkD,GAC9C,MAAM,aACJ71B,GACEruB,EACiB,OAAjBquB,GAGAA,IAAiB61B,GACnBlxD,KAAKywD,sCAAsC3zC,EAAK9P,EAEpD,CACAmkD,iBAAgB,SACdr2B,EAAQ,aACRO,IAEA,MAAM+1B,EAAY,IAAIz1C,IAChB01C,EAAU,CACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,IAEpB,IAAIC,GAAoB,EACxB,MAAQ1xD,KAAK2qB,MAAM,IAAI,CACrB,GAAI3qB,KAAKktB,IAAI,IAAK,CAChBwkC,GAAoB,EACpB,KACF,CACA,MAAMC,EAAa3xD,KAAK05B,aAClB,GACJ9W,EAAE,KACF4F,GACExoB,KAAKgxD,oBACHn2B,EAAajY,EAAGrhB,KACtB,GAAmB,KAAfs5B,EACF,SAEE,SAAS1b,KAAK0b,IAChB76B,KAAKwiB,MAAM4X,GAAWoB,sBAAuB,CAC3Cj3B,GAAIqe,EACJiY,aACAY,WAAYZ,EAAW,GAAG+2B,cAAgB/2B,EAAWjS,MAAM,GAC3DkS,aAGAs2B,EAAUvxC,IAAIgb,IAChB76B,KAAKwiB,MAAM4X,GAAWW,wBAAyB,CAC7Cx2B,GAAIqe,EACJiY,aACAC,aAGJs2B,EAAUjvC,IAAI0Y,GACd,MAAM7tB,EAAU,CACd8tB,WACAO,eACAR,cAGF,OADA82B,EAAW/uC,GAAKA,EACR4F,EAAKvX,MACX,IAAK,UAEDjR,KAAKixD,kCAAkCzoC,EAAK1L,IAAK9P,EAAS,WAC1D2kD,EAAWnpC,KAAOA,EAAKja,MACvB8iD,EAAQC,eAAe/uD,KAAKvC,KAAK65B,WAAW83B,EAAY,sBACxD,MAEJ,IAAK,SAED3xD,KAAKixD,kCAAkCzoC,EAAK1L,IAAK9P,EAAS,UAC1D2kD,EAAWnpC,KAAOA,EAAKja,MACvB8iD,EAAQE,cAAchvD,KAAKvC,KAAK65B,WAAW83B,EAAY,qBACvD,MAEJ,IAAK,SAED3xD,KAAKixD,kCAAkCzoC,EAAK1L,IAAK9P,EAAS,UAC1D2kD,EAAWnpC,KAAOA,EAAKja,MACvB8iD,EAAQG,cAAcjvD,KAAKvC,KAAK65B,WAAW83B,EAAY,qBACvD,MAEJ,IAAK,UAED,MAAM3xD,KAAKywD,sCAAsCjoC,EAAK1L,IAAK9P,GAE/D,IAAK,OAED,OAAQquB,GACN,IAAK,UACHr7B,KAAKwwD,yCAAyChoC,EAAK1L,IAAK9P,GACxD,MACF,IAAK,SACHhN,KAAK2wD,wCAAwCnoC,EAAK1L,IAAK9P,GACvD,MACF,QACEqkD,EAAQI,iBAAiBlvD,KAAKvC,KAAK65B,WAAW83B,EAAY,yBAI/D3xD,KAAK2qB,MAAM,IACd3qB,KAAK02B,OAAO,GAEhB,CACA,MAAO,CACL26B,UACAK,oBAEJ,CACAG,sBAAsBC,EAAoBL,GAAkB,SAC1D32B,IAEA,GAAkC,IAA9Bg3B,EAAmBhlD,OACrB,OAAO2kD,EACF,GAAgC,IAA5BA,EAAiB3kD,OAC1B,OAAOglD,EACF,GAAIL,EAAiB3kD,OAASglD,EAAmBhlD,OAAQ,CAC9D,IAAK,MAAM4+C,KAAUoG,EACnB9xD,KAAK4wD,mDAAmDlF,EAAQ,CAC9D5wB,aAGJ,OAAO22B,CACT,CACE,IAAK,MAAM/F,KAAU+F,EACnBzxD,KAAK4wD,mDAAmDlF,EAAQ,CAC9D5wB,aAGJ,OAAOg3B,CAEX,CACAC,2BAA0B,SACxBj3B,IAEA,IAAK96B,KAAKk2B,cAAc,KAAM,OAAO,KACrC,IAAKvqB,EAAkB3L,KAAK2kB,MAAM1T,MAChC,MAAMjR,KAAKwiB,MAAM4X,GAAWe,uCAAwC,CAClE52B,GAAIvE,KAAK2kB,MAAMkC,SACfiU,aAGJ,MAAM,MACJvsB,GACEvO,KAAK2kB,MAST,OARA3kB,KAAK0iB,OACS,YAAVnU,GAAiC,WAAVA,GAAgC,WAAVA,GAAgC,WAAVA,GACrEvO,KAAKwiB,MAAM4X,GAAWa,wBAAyB,CAC7C12B,GAAIvE,KAAK2kB,MAAMkC,SACfiU,WACAI,gBAAiB3sB,IAGdA,CACT,CACAyjD,aAAavzC,EAAMmE,GACjB,MAAMkY,EAAWlY,EAAGrhB,KACd0wD,EAAUrvC,EAAG9F,IAAItP,MACjB6tB,EAAer7B,KAAK+xD,0BAA0B,CAClDj3B,aAEF96B,KAAK02B,OAAO,GACZ,MAAM,QACJ26B,EAAO,kBACPK,GACE1xD,KAAKmxD,gBAAgB,CACvBr2B,WACAO,iBAGF,OADA5c,EAAKizC,kBAAoBA,EACjBr2B,GACN,IAAK,UAIH,OAHA5c,EAAK4c,cAAe,EACpB5c,EAAK4yC,QAAUA,EAAQC,eACvBtxD,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,mBAC/B,IAAK,SAIH,OAHAA,EAAK4c,cAAe,EACpB5c,EAAK4yC,QAAUA,EAAQE,cACvBvxD,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,kBAC/B,IAAK,SAMH,OALAA,EAAK4c,cAAe,EACpB5c,EAAK4yC,QAAUrxD,KAAK6xD,sBAAsBR,EAAQG,cAAeH,EAAQI,iBAAkB,CACzF32B,aAEF96B,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,kBAC/B,IAAK,SAGH,OAFAA,EAAK4yC,QAAUA,EAAQI,iBACvBzxD,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,kBAC/B,QACE,CACE,MAAMysB,EAAQ,KACZzsB,EAAK4yC,QAAU,GACfrxD,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,mBAE/BA,EAAK4c,cAAe,EACpB,MAAM62B,EAAWb,EAAQC,eAAexkD,OAClCqlD,EAAUd,EAAQE,cAAczkD,OAChCslD,EAAUf,EAAQG,cAAc1kD,OAChCulD,EAAehB,EAAQI,iBAAiB3kD,OAC9C,GAAKolD,GAAaC,GAAYC,GAAYC,EAEnC,IAAKH,GAAaC,EAMlB,KAAKA,IAAYC,GAAWF,GAAYG,EAAc,CAC3D,IAAK,MAAM3G,KAAU2F,EAAQI,iBAC3BzxD,KAAKwwD,yCAAyC9E,EAAO5uC,IAAItP,MAAO,CAC9DstB,WACAD,WAAY6wB,EAAO9oC,GAAGrhB,OAK1B,OAFAkd,EAAK4yC,QAAUA,EAAQC,eACvBtxD,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,kBAC/B,CAAO,IAAKyzC,IAAaE,GAAWD,GAAWE,EAAc,CAC3D,IAAK,MAAM3G,KAAU2F,EAAQI,iBAC3BzxD,KAAK2wD,wCAAwCjF,EAAO5uC,IAAItP,MAAO,CAC7DstB,WACAD,WAAY6wB,EAAO9oC,GAAGrhB,OAK1B,OAFAkd,EAAK4yC,QAAUA,EAAQE,cACvBvxD,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,iBAC/B,CAKE,OAJAze,KAAKwiB,MAAM4X,GAAWY,6BAA8B,CAClDz2B,GAAI0tD,EACJn3B,aAEKoQ,GACT,CA3BE,OAJAzsB,EAAK4yC,QAAUrxD,KAAK6xD,sBAAsBR,EAAQG,cAAeH,EAAQI,iBAAkB,CACzF32B,aAEF96B,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,iBA2B/B,CAjCE,OAAOysB,GAkCX,EAEN,CACAge,yBAAyBzqC,GACvB,MAAMmE,EAAK5iB,KAAKwxC,kBAGhB,OAFA/yB,EAAKmE,GAAKA,EACVnE,EAAK09B,KAAOn8C,KAAKgyD,aAAahyD,KAAK05B,YAAa9W,GACzC5iB,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAixC,sBACE,MAAMhtC,EAAO1iB,KAAKwtB,iBAClB,GAAoC,KAAhCxtB,KAAK0lB,MAAMC,WAAWjD,GAAc,CACtC,MAAM4vC,EAAYtyD,KAAK0lB,MAAMC,WAAWjD,EAAO,GAC/C,OAAqB,KAAd4vC,GAAkC,KAAdA,CAC7B,CACA,OAAO,CACT,CACAzD,8BAA8BpwC,GAC5B,MAAqB,uBAAdA,EAAKxN,KAAgCwN,EAAK+wB,WAAa/wB,CAChE,GAqiIA8zC,WAnvFetY,GAAc,cAAoCA,EACjEp6C,eAAekjB,GACbC,SAASD,GACT/iB,KAAKwyD,sBAAwBxyD,KAAKyyD,iBAAiBC,KAAK1yD,KAAM,CAC5D2yD,iBAAkB,CAAC,KAAM,OACzBC,oBAAqB,CAAC,QAAS,SAAU,UAAW,YAAa,WAAY,UAAW,WAAY,YACpGC,cAAexe,GAASgC,iCAE1Br2C,KAAK8yD,qBAAuB9yD,KAAKyyD,iBAAiBC,KAAK1yD,KAAM,CAC3D2yD,iBAAkB,CAAC,SACnBC,oBAAqB,CAAC,KAAM,OAC5BC,cAAexe,GAASiC,0CAE1Bt2C,KAAK+yD,2BAA6B/yD,KAAKyyD,iBAAiBC,KAAK1yD,KAAM,CACjE2yD,iBAAkB,CAAC,KAAM,MAAO,SAChCC,oBAAqB,CAAC,SAAU,UAAW,YAAa,WAAY,UAAW,WAAY,YAC3FC,cAAexe,GAASgC,gCAE5B,CACA/d,kBACE,OAAO6W,EACT,CACA6jB,iBACE,OAAOrnD,EAAkB3L,KAAK2kB,MAAM1T,KACtC,CACAgiD,2BACE,OAAQjzD,KAAK2qB,MAAM,IAAM3qB,KAAK2qB,MAAM,IAAM3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,MAAQ3qB,KAAKy3B,2BAA6Bz3B,KAAKq2B,uBAC1I,CACA68B,+BAEE,OADAlzD,KAAK0iB,OACE1iB,KAAKizD,0BACd,CACAE,gBAAgBR,EAAkBS,GAChC,IAAKznD,EAAkB3L,KAAK2kB,MAAM1T,OAA6B,KAApBjR,KAAK2kB,MAAM1T,MAAmC,KAApBjR,KAAK2kB,MAAM1T,KAC9E,OAEF,MAAMokC,EAAWr1C,KAAK2kB,MAAMpW,MAC5B,IAA4C,IAAxCokD,EAAiB5lD,QAAQsoC,GAAkB,CAC7C,GAAI+d,GAAiCpzD,KAAKqzD,0BACxC,OAEF,GAAIrzD,KAAKszD,WAAWtzD,KAAKkzD,6BAA6BR,KAAK1yD,OACzD,OAAOq1C,CAEX,CAEF,CACAod,kBAAiB,iBACfE,EAAgB,oBAChBC,EAAmB,8BACnBQ,EAA6B,cAC7BP,EAAgBxe,GAAS+B,6BACxBmd,GACD,MAAMC,EAAe,CAAC12C,EAAKu4B,EAAUoe,EAAQC,KACvCre,IAAaoe,GAAUF,EAASG,IAClC1zD,KAAKwiB,MAAM6xB,GAASkC,sBAAuB,CACzChyC,GAAIuY,EACJ05B,iBAAkB,CAACid,EAAQC,IAE/B,EAEIC,EAAe,CAAC72C,EAAKu4B,EAAUue,EAAMC,MACrCN,EAASK,IAASve,IAAawe,GAAQN,EAASM,IAASxe,IAAaue,IACxE5zD,KAAKwiB,MAAM6xB,GAASuB,sBAAuB,CACzCrxC,GAAIuY,EACJ+4B,UAAW,CAAC+d,EAAMC,IAEtB,EAEF,OAAS,CACP,MAAM,SACJhtC,GACE7mB,KAAK2kB,MACH0wB,EAAWr1C,KAAKmzD,gBAAgBR,EAAiB5e,OAA8B,MAAvB6e,EAA8BA,EAAsB,IAAKQ,GACvH,IAAK/d,EAAU,MACXmD,GAAmBnD,GACjBke,EAASO,cACX9zD,KAAKwiB,MAAM6xB,GAASe,+BAAgC,CAClD7wC,GAAIsiB,EACJwuB,cAGFme,EAAa3sC,EAAUwuB,EAAUA,EAAU,YAC3Cme,EAAa3sC,EAAUwuB,EAAUA,EAAU,UAC3Cme,EAAa3sC,EAAUwuB,EAAUA,EAAU,YAC3Cke,EAASO,cAAgBze,GAElBoD,GAAwBpD,IAC7Bke,EAASle,IACXr1C,KAAKwiB,MAAM6xB,GAASiB,kBAAmB,CACrC/wC,GAAIsiB,EACJwuB,aAGJke,EAASle,IAAY,EACrBme,EAAa3sC,EAAUwuB,EAAU,KAAM,SAEnCzoC,OAAOqmC,eAAeC,KAAKqgB,EAAUle,GACvCr1C,KAAKwiB,MAAM6xB,GAASiB,kBAAmB,CACrC/wC,GAAIsiB,EACJwuB,cAGFme,EAAa3sC,EAAUwuB,EAAU,SAAU,YAC3Cme,EAAa3sC,EAAUwuB,EAAU,SAAU,YAC3Cme,EAAa3sC,EAAUwuB,EAAU,WAAY,YAC7Cme,EAAa3sC,EAAUwuB,EAAU,WAAY,YAC7Cse,EAAa9sC,EAAUwuB,EAAU,UAAW,YAC5Cse,EAAa9sC,EAAUwuB,EAAU,SAAU,aAE7Cke,EAASle,IAAY,GAEI,MAAvBud,GAA+BA,EAAoB1hC,SAASmkB,IAC9Dr1C,KAAKwiB,MAAMqwC,EAAe,CACxBtuD,GAAIsiB,EACJwuB,YAGN,CACF,CACA0e,mBAAmB1iD,GACjB,OAAQA,GACN,IAAK,cACL,IAAK,cACH,OAAOrR,KAAK2qB,MAAM,GACpB,IAAK,wBACH,OAAO3qB,KAAK2qB,MAAM,GACpB,IAAK,oBACH,OAAO3qB,KAAK2qB,MAAM,GACpB,IAAK,4BACH,OAAO3qB,KAAK2qB,MAAM,IAExB,CACAqpC,YAAY3iD,EAAM4iD,GAChB,MAAMvJ,EAAS,GACf,MAAQ1qD,KAAK+zD,mBAAmB1iD,IAC9Bq5C,EAAOnoD,KAAK0xD,KAEd,OAAOvJ,CACT,CACAwJ,qBAAqB7iD,EAAM4iD,EAAcE,GACvC,OAtRJ,SAAiB/f,GACf,GAAS,MAALA,EACF,MAAM,IAAIvF,MAAM,cAAcuF,YAEhC,OAAOA,CACT,CAiRWggB,CAAQp0D,KAAKq0D,2BAA2BhjD,EAAM4iD,GAAc,EAAME,GAC3E,CACAE,2BAA2BhjD,EAAM4iD,EAAcK,EAAeH,GAC5D,MAAMzJ,EAAS,GACf,IAAI6J,GAAoB,EACxB,MACMv0D,KAAK+zD,mBAAmB1iD,IADrB,CAIPkjD,GAAoB,EACpB,MAAM1jB,EAAUojB,IAChB,GAAe,MAAXpjB,EACF,OAGF,GADA6Z,EAAOnoD,KAAKsuC,IACR7wC,KAAKktB,IAAI,IAAb,CAIA,GAAIltB,KAAK+zD,mBAAmB1iD,GAC1B,MAKF,YAHIijD,GACFt0D,KAAK02B,OAAO,IALd,CAFE69B,EAAmBv0D,KAAK2kB,MAAMuD,YAUlC,CAIA,OAHIisC,IACFA,EAAoB5lD,MAAQgmD,GAEvB7J,CACT,CACA8J,qBAAqBnjD,EAAM4iD,EAAcQ,EAASC,EAAgBP,GAC3DO,IACCD,EACFz0D,KAAK02B,OAAO,GAEZ12B,KAAK02B,OAAO,KAGhB,MAAMg0B,EAAS1qD,KAAKk0D,qBAAqB7iD,EAAM4iD,EAAcE,GAM7D,OALIM,EACFz0D,KAAK02B,OAAO,GAEZ12B,KAAK02B,OAAO,IAEPg0B,CACT,CACAiK,oBACE,MAAMl2C,EAAOze,KAAK05B,YAgBlB,OAfA15B,KAAK02B,OAAO,IACZ12B,KAAK02B,OAAO,IACP12B,KAAK2qB,MAAM,MACd3qB,KAAKwiB,MAAM6xB,GAASgE,8BAA+B,CACjD9zC,GAAIvE,KAAK2kB,MAAMkC,WAGnBpI,EAAKrB,SAAW4F,MAAM48B,gBACtB5/C,KAAK02B,OAAO,IACR12B,KAAKktB,IAAI,MACXzO,EAAKm2C,UAAY50D,KAAK60D,qBAEpB70D,KAAK2qB,MAAM,MACblM,EAAKg+B,eAAiBz8C,KAAK80D,wBAEtB90D,KAAK65B,WAAWpb,EAAM,eAC/B,CACAo2C,kBAAkBE,GAAqB,GACrC,IAAI3V,EAASp/C,KAAKwxC,gBAAgBujB,GAClC,KAAO/0D,KAAKktB,IAAI,KAAK,CACnB,MAAMzO,EAAOze,KAAK45B,gBAAgBwlB,GAClC3gC,EAAK4xB,KAAO+O,EACZ3gC,EAAKm0B,MAAQ5yC,KAAKwxC,gBAAgBujB,GAClC3V,EAASp/C,KAAK65B,WAAWpb,EAAM,kBACjC,CACA,OAAO2gC,CACT,CACA4V,uBACE,MAAMv2C,EAAOze,KAAK05B,YAKlB,OAJAjb,EAAKw2C,SAAWj1D,KAAK60D,qBAChB70D,KAAKq2B,yBAA2Br2B,KAAK2qB,MAAM,MAC9ClM,EAAKg+B,eAAiBz8C,KAAK80D,wBAEtB90D,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAy2C,yBAAyBC,GACvBn1D,KAAK0iB,OACL,MAAMjE,EAAOze,KAAK45B,gBAAgBu7B,GAIlC,OAHA12C,EAAK22C,cAAgBD,EACrB12C,EAAK6jC,eAAiBtiD,KAAKq1D,uBAAsB,GACjD52C,EAAK62C,SAAU,EACRt1D,KAAK65B,WAAWpb,EAAM,kBAC/B,CACA82C,sBACE,MAAM92C,EAAOze,KAAK05B,YAElB,OADA15B,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,aAC/B,CACA+2C,mBACE,MAAM/2C,EAAOze,KAAK05B,YAUlB,OATA15B,KAAK02B,OAAO,IACR12B,KAAK2qB,MAAM,IACblM,EAAKg3C,SAAWz1D,KAAK20D,oBAErBl2C,EAAKg3C,SAAWz1D,KAAK60D,qBAElB70D,KAAKq2B,yBAA2Br2B,KAAK2qB,MAAM,MAC9ClM,EAAKg+B,eAAiBz8C,KAAK80D,wBAEtB90D,KAAK65B,WAAWpb,EAAM,cAC/B,CACAi3C,qBAAqBC,GACnB,MAAMl3C,EAAOze,KAAK05B,YAKlB,OAJAi8B,EAAel3C,GACfA,EAAKld,KAAOvB,KAAK41D,2BACjBn3C,EAAKo3C,WAAa71D,KAAK81D,mBAAmB,IAC1Cr3C,EAAK8kC,QAAUvjD,KAAK81D,mBAAmB,IAChC91D,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAs3C,yBAAyBJ,GACvB,GAAI31D,KAAK2qB,MAAM,IACb,OAAO3qB,KAAKg2D,sBAAsBL,EAEtC,CACAK,sBAAsBL,GACpB,MAAMl3C,EAAOze,KAAK05B,YACd15B,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAC/B3qB,KAAK0iB,OAEL1iB,KAAK+V,aAEP,MAAMo+C,EAAsB,CAC1B5lD,OAAQ,GAWV,OATAkQ,EAAKoH,OAAS7lB,KAAKw0D,qBAAqB,4BAA6Bx0D,KAAK01D,qBAAqBhD,KAAK1yD,KAAM21D,IAAiB,GAAO,EAAMxB,GAC7G,IAAvB11C,EAAKoH,OAAO/Y,QACd9M,KAAKwiB,MAAM6xB,GAASoB,oBAAqB,CACvClxC,GAAIka,KAG2B,IAA/B01C,EAAoB5lD,OACtBvO,KAAK01B,SAASjX,EAAM,gBAAiB01C,EAAoB5lD,OAEpDvO,KAAK65B,WAAWpb,EAAM,6BAC/B,CACAw3C,gBAAgBC,EAAaC,GAC3B,MAAMC,EAAsC,KAAhBF,EAG5BC,EAAU1Z,eAAiBz8C,KAAK+1D,yBAAyB/1D,KAAK8yD,sBAC9D9yD,KAAK02B,OAAO,IACZy/B,EAAmB,WAAIn2D,KAAKq2D,kCACxBD,GAEOp2D,KAAK2qB,MAAMurC,MADpBC,EAAuB,eAAIn2D,KAAKs2D,qCAAqCJ,GAIzE,CACAG,iCACE,OAAOrzC,MAAMsuB,iBAAiB,GAAI,GAAI,GAAG1iC,KAAIuiB,IACtB,eAAjBA,EAAQlgB,MAA0C,gBAAjBkgB,EAAQlgB,MAA2C,kBAAjBkgB,EAAQlgB,MAA6C,iBAAjBkgB,EAAQlgB,MACjHjR,KAAKwiB,MAAM6xB,GAASkE,kCAAmC,CACrDh0C,GAAI4sB,EACJlgB,KAAMkgB,EAAQlgB,OAGXkgB,IAEX,CACAolC,6BACOv2D,KAAKktB,IAAI,KAAQltB,KAAKu2B,oBACzBv2B,KAAK02B,OAAO,GAEhB,CACA8/B,uBAAuBnlD,EAAMoN,GAG3B,OAFAze,KAAKi2D,gBAAgB,GAAIx3C,GACzBze,KAAKu2D,6BACEv2D,KAAK65B,WAAWpb,EAAMpN,EAC/B,CACAolD,kCAEE,OADAz2D,KAAK0iB,SACD/W,EAAkB3L,KAAK2kB,MAAM1T,QAC/BjR,KAAK0iB,OACE1iB,KAAK2qB,MAAM,IAGtB,CACA+rC,yBAAyBj4C,GACvB,IAAMze,KAAK2qB,MAAM,KAAM3qB,KAAK22D,YAAY32D,KAAKy2D,gCAAgC/D,KAAK1yD,OAChF,OAEFA,KAAK02B,OAAO,GACZ,MAAM9T,EAAK5iB,KAAKwxC,kBAChB5uB,EAAG0/B,eAAiBtiD,KAAKq1D,wBACzBr1D,KAAKg6B,iBAAiBpX,GACtB5iB,KAAK02B,OAAO,GACZjY,EAAKm4C,WAAa,CAACh0C,GACnB,MAAM3R,EAAOjR,KAAK62D,2BAGlB,OAFI5lD,IAAMwN,EAAK6jC,eAAiBrxC,GAChCjR,KAAKu2D,6BACEv2D,KAAK65B,WAAWpb,EAAM,mBAC/B,CACAq4C,iCAAiCr4C,EAAMs4C,GACjC/2D,KAAKktB,IAAI,MAAKzO,EAAKi/B,UAAW,GAClC,MAAMsZ,EAAUv4C,EAChB,GAAIze,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAAK,CAChCosC,GACF/2D,KAAKwiB,MAAM6xB,GAAS8C,2BAA4B,CAC9C5yC,GAAIka,IAGR,MAAM8zB,EAASykB,EACXzkB,EAAOlhC,MAAQrR,KAAK2qB,MAAM,KAC5B3qB,KAAKwiB,MAAM6xB,GAASM,gCAAiC,CACnDpwC,GAAIvE,KAAK2kB,MAAM8D,gBAGnBzoB,KAAKi2D,gBAAgB,GAAI1jB,GACzBvyC,KAAKu2D,6BACL,MAAMU,EAAY,aACZC,EAAgB,iBACtB,GAAoB,QAAhB3kB,EAAOlhC,KACLkhC,EAAO0kB,GAAWnqD,OAAS,IAC7B9M,KAAKwiB,MAAM3E,EAAO/L,eAAgB,CAChCvN,GAAIvE,KAAK2kB,MAAM8D,gBAEbzoB,KAAKwsD,YAAYja,EAAO0kB,GAAW,KACrCj3D,KAAKwiB,MAAM6xB,GAASK,kCAAmC,CACrDnwC,GAAIvE,KAAK2kB,MAAM8D,sBAIhB,GAAoB,QAAhB8pB,EAAOlhC,KAAgB,CAChC,GAAiC,IAA7BkhC,EAAO0kB,GAAWnqD,OACpB9M,KAAKwiB,MAAM3E,EAAO9L,eAAgB,CAChCxN,GAAIvE,KAAK2kB,MAAM8D,oBAEZ,CACL,MAAM0uC,EAAiB5kB,EAAO0kB,GAAW,GACrCj3D,KAAKwsD,YAAY2K,IACnBn3D,KAAKwiB,MAAM6xB,GAASK,kCAAmC,CACrDnwC,GAAIvE,KAAK2kB,MAAM8D,gBAGS,eAAxB0uC,EAAelmD,MAAyBkmD,EAAezZ,UACzD19C,KAAKwiB,MAAM6xB,GAASiD,sCAAuC,CACzD/yC,GAAIvE,KAAK2kB,MAAM8D,gBAGS,gBAAxB0uC,EAAelmD,MACjBjR,KAAKwiB,MAAM6xB,GAASkD,kCAAmC,CACrDhzC,GAAIvE,KAAK2kB,MAAM8D,eAGrB,CACI8pB,EAAO2kB,IACTl3D,KAAKwiB,MAAM6xB,GAASmD,+BAAgC,CAClDjzC,GAAIguC,EAAO2kB,IAGjB,MACE3kB,EAAOlhC,KAAO,SAEhB,OAAOrR,KAAK65B,WAAW0Y,EAAQ,oBACjC,CAAO,CACL,MAAM1a,EAAWm/B,EACbD,IAAUl/B,EAASk/B,UAAW,GAClC,MAAM9lD,EAAOjR,KAAK62D,2BAGlB,OAFI5lD,IAAM4mB,EAASyqB,eAAiBrxC,GACpCjR,KAAKu2D,6BACEv2D,KAAK65B,WAAWhC,EAAU,sBACnC,CACF,CACAu/B,oBACE,MAAM34C,EAAOze,KAAK05B,YAClB,GAAI15B,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAC/B,OAAO3qB,KAAKw2D,uBAAuB,6BAA8B/3C,GAEnE,GAAIze,KAAK2qB,MAAM,IAAK,CAClB,MAAM/H,EAAK5iB,KAAK05B,YAEhB,OADA15B,KAAK0iB,OACD1iB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IACxB3qB,KAAKw2D,uBAAuB,kCAAmC/3C,IAEtEA,EAAKjS,IAAMxM,KAAKmoD,iBAAiBvlC,EAAI,OAC9B5iB,KAAK82D,iCAAiCr4C,GAAM,GAEvD,CACAze,KAAKyyD,iBAAiB,CACpBE,iBAAkB,CAAC,YACnBC,oBAAqB,CAAC,UAAW,WAAY,UAAW,YAAa,SAAU,SAAU,aACxFn0C,GAEH,OADYze,KAAK02D,yBAAyBj4C,KAI1CuE,MAAMsvB,kBAAkB7zB,GACnBA,EAAKk6B,UAA8B,eAAlBl6B,EAAKjS,IAAIyE,MAA4C,QAAlBwN,EAAKjS,IAAIjL,MAAoC,QAAlBkd,EAAKjS,IAAIjL,OAAmBvB,KAAKizD,6BACnHx0C,EAAKpN,KAAOoN,EAAKjS,IAAIjL,KACrByhB,MAAMsvB,kBAAkB7zB,IAEnBze,KAAK82D,iCAAiCr4C,IAAQA,EAAKs4C,UAC5D,CACAM,qBACE,MAAM54C,EAAOze,KAAK05B,YAElB,OADAjb,EAAK4yC,QAAUrxD,KAAKs3D,2BACbt3D,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA64C,2BACEt3D,KAAK02B,OAAO,GACZ,MAAM26B,EAAUrxD,KAAKg0D,YAAY,cAAeh0D,KAAKo3D,kBAAkB1E,KAAK1yD,OAE5E,OADAA,KAAK02B,OAAO,GACL26B,CACT,CACAkG,wBAEE,OADAv3D,KAAK0iB,OACD1iB,KAAKktB,IAAI,IACJltB,KAAK41B,aAAa,MAEvB51B,KAAK41B,aAAa,MACpB51B,KAAK0iB,SAEF1iB,KAAK2qB,MAAM,KAGhB3qB,KAAK0iB,SACA1iB,KAAKgzD,mBAGVhzD,KAAK0iB,OACE1iB,KAAK2qB,MAAM,MACpB,CACA6sC,6BACE,MAAM/4C,EAAOze,KAAK05B,YAGlB,OAFAjb,EAAKld,KAAOvB,KAAK41D,2BACjBn3C,EAAKo3C,WAAa71D,KAAKy3D,sBAAsB,IACtCz3D,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAi5C,oBACE,MAAMj5C,EAAOze,KAAK05B,YAuBlB,OAtBA15B,KAAK02B,OAAO,GACR12B,KAAK2qB,MAAM,KACblM,EAAKs4C,SAAW/2D,KAAK2kB,MAAMpW,MAC3BvO,KAAK0iB,OACL1iB,KAAKm2B,iBAAiB,MACbn2B,KAAKk2B,cAAc,OAC5BzX,EAAKs4C,UAAW,GAElB/2D,KAAK02B,OAAO,GACZjY,EAAKknC,cAAgB3lD,KAAKw3D,6BAC1B/4C,EAAKk5C,SAAW33D,KAAKk2B,cAAc,IAAMl2B,KAAK43D,cAAgB,KAC9D53D,KAAK02B,OAAO,GACR12B,KAAK2qB,MAAM,KACblM,EAAKi/B,SAAW19C,KAAK2kB,MAAMpW,MAC3BvO,KAAK0iB,OACL1iB,KAAK02B,OAAO,KACH12B,KAAKktB,IAAI,MAClBzO,EAAKi/B,UAAW,GAElBj/B,EAAK6jC,eAAiBtiD,KAAK63D,iBAC3B73D,KAAKw2B,YACLx2B,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,eAC/B,CACAq5C,mBACE,MAAMr5C,EAAOze,KAAK05B,YAClBjb,EAAKs5C,aAAe/3D,KAAKw0D,qBAAqB,oBAAqBx0D,KAAKg4D,wBAAwBtF,KAAK1yD,OAAO,GAAM,GAClH,IAAIi4D,GAAsB,EACtBC,EAAkB,KAyBtB,OAxBAz5C,EAAKs5C,aAAa5pC,SAAQgqC,IAExB,MAAM,KACJlnD,GACEknD,GACAF,GAAgC,eAAThnD,GAAkC,mBAATA,GAAwC,uBAATA,GAAiCknD,EAAYza,UAC9H19C,KAAKwiB,MAAM6xB,GAAS0C,2BAA4B,CAC9CxyC,GAAI4zD,IAGRF,IAAwBA,EAA+B,uBAAThnD,GAAiCknD,EAAYza,UAAqB,mBAATzsC,GACvG,IAAImnD,EAAYnnD,EACH,eAATA,IAEFmnD,GADAD,EAAcA,EAAY7V,gBACFrxC,MAE1B,MAAMonD,EAA0B,uBAAdD,EACsB,MAApBF,IAA8CA,EAAkBG,GAChFH,IAAoBG,GACtBr4D,KAAKwiB,MAAM6xB,GAASuC,iCAAkC,CACpDryC,GAAI4zD,GAER,IAEKn4D,KAAK65B,WAAWpb,EAAM,cAC/B,CACAu5C,0BACE,MAAM,SACJnxC,GACE7mB,KAAK2kB,MACH/G,EAAO5d,KAAKktB,IAAI,IACtB,IAAIorC,EACAz3D,EACA68C,EACAzsC,EACJ,MACMsnD,EADS3sD,EAA2B5L,KAAK2kB,MAAM1T,MACxBjR,KAAK2tB,oBAAsB,KACxD,GAAoB,KAAhB4qC,EACFD,GAAU,EACV5a,GAAW,EACX78C,EAAQb,KAAKwxC,iBAAgB,GAC7BxxC,KAAK02B,OAAO,IACZzlB,EAAOjR,KAAK43D,mBACP,GAAoB,KAAhBW,EAAoB,CAC7B7a,GAAW,EACX,MAAM72B,EAAW7mB,KAAK2kB,MAAMkC,SACtB2xC,EAAWx4D,KAAK2kB,MAAMpW,MACtBkqD,EAAcz4D,KAAK04D,sBACQ,KAA7B14D,KAAK2tB,qBACP2qC,GAAU,EACVz3D,EAAQb,KAAKmoD,iBAAiBnoD,KAAK25B,YAAY9S,GAAW2xC,GAC1Dx4D,KAAK02B,OAAO,IACZ12B,KAAK02B,OAAO,IACZzlB,EAAOjR,KAAK43D,gBAEZU,GAAU,EACVrnD,EAAOwnD,EACPz4D,KAAK02B,OAAO,IAEhB,MACEzlB,EAAOjR,KAAK43D,cACZla,EAAW19C,KAAKktB,IAAI,IACpBorC,EAAUt4D,KAAKktB,IAAI,IAErB,GAAIorC,EAAS,CACX,IAAIK,EACA93D,GACF83D,EAAc34D,KAAK45B,gBAAgB/4B,GACnC83D,EAAYjb,SAAWA,EACvBib,EAAY93D,MAAQA,EACpB83D,EAAYrlC,YAAcriB,EACtBjR,KAAKktB,IAAI,MACXyrC,EAAYjb,UAAW,EACvB19C,KAAKwiB,MAAM6xB,GAASuD,uBAAwB,CAC1CrzC,GAAIvE,KAAK2kB,MAAMsD,qBAInB0wC,EAAc34D,KAAK45B,gBAAgB3oB,GACnC0nD,EAAYjb,SAAWA,EACvB19C,KAAKwiB,MAAM6xB,GAASqC,wBAAyB,CAC3CnyC,GAAI0M,IAEN0nD,EAAY93D,MAAQoQ,EACpB0nD,EAAYrlC,YAActzB,KAAK43D,eAEjC3mD,EAAOjR,KAAK65B,WAAW8+B,EAAa,qBACtC,MAAO,GAAIjb,EAAU,CACnB,MAAMkb,EAAmB54D,KAAK45B,gBAAgB3oB,GAC9C2nD,EAAiBtW,eAAiBrxC,EAClCA,EAAOjR,KAAK65B,WAAW++B,EAAkB,iBAC3C,CACA,GAAIh7C,EAAM,CACR,MAAMi7C,EAAW74D,KAAK25B,YAAY9S,GAClCgyC,EAASvW,eAAiBrxC,EAC1BA,EAAOjR,KAAK65B,WAAWg/B,EAAU,aACnC,CACA,OAAO5nD,CACT,CACA6nD,2BACE,MAAMr6C,EAAOze,KAAK05B,YAIlB,OAHA15B,KAAK02B,OAAO,IACZjY,EAAK6jC,eAAiBtiD,KAAK43D,cAC3B53D,KAAK02B,OAAO,IACL12B,KAAK65B,WAAWpb,EAAM,sBAC/B,CACAs6C,iCAAiC9nD,EAAM+nD,GACrC,MAAMv6C,EAAOze,KAAK05B,YAOlB,MANa,sBAATzoB,IACFwN,EAAKu6C,WAAaA,EACdA,GAAUh5D,KAAK0iB,OACnB1iB,KAAK0iB,QAEP1iB,KAAKi5D,kCAAiC,IAAMj5D,KAAKi2D,gBAAgB,GAAIx3C,KAC9Dze,KAAK65B,WAAWpb,EAAMxN,EAC/B,CACAioD,yBACE,MAAMz6C,EAAOze,KAAK05B,YAalB,OAZAjb,EAAKsyC,QAAU,MACb,OAAQ/wD,KAAK2kB,MAAM1T,MACjB,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,GACH,OAAO+R,MAAM48B,gBACf,QACE5/C,KAAK+V,aAEV,EAXc,GAYR/V,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA06C,6BACE,MAAM16C,EAAOze,KAAK05B,YAElB,OADAjb,EAAKsyC,QAAU/tC,MAAMo2C,eAAc,GAC5Bp5D,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA46C,4BACE,OAAIr5D,KAAK2kB,MAAMyC,OAAepnB,KAAK43D,cAC5B50C,MAAMq2C,2BACf,CACAC,qCACE,MAAMC,EAAcv5D,KAAKu1D,sBACzB,OAAIv1D,KAAK41B,aAAa,OAAS51B,KAAKq2B,wBAC3Br2B,KAAKk1D,yBAAyBqE,GAE9BA,CAEX,CACAb,sBACE,OAAQ14D,KAAK2kB,MAAM1T,MACjB,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,GACH,OAAOjR,KAAKk5D,yBACd,KAAK,GACH,GAAyB,MAArBl5D,KAAK2kB,MAAMpW,MAAe,CAC5B,MAAMkQ,EAAOze,KAAK05B,YACZzM,EAAYjtB,KAAKqtB,YAKvB,OAJuB,MAAnBJ,EAAUhc,MAAmC,MAAnBgc,EAAUhc,MACtCjR,KAAK+V,aAEP0I,EAAKsyC,QAAU/wD,KAAKw5D,kBACbx5D,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA,MACF,KAAK,GACH,OAAOze,KAAKs5D,qCACd,KAAK,GACH,OAAOt5D,KAAKw1D,mBACd,KAAK,GACH,OAAOx1D,KAAK20D,oBACd,KAAK,EACH,OAAO30D,KAAK22D,YAAY32D,KAAKu3D,sBAAsB7E,KAAK1yD,OAASA,KAAK03D,oBAAsB13D,KAAKq3D,qBACnG,KAAK,EACH,OAAOr3D,KAAK83D,mBACd,KAAK,GACH,OAAO93D,KAAK84D,2BACd,KAAK,GACL,KAAK,GACH,OAAO94D,KAAKm5D,6BACd,QACE,CACE,MAAM,KACJloD,GACEjR,KAAK2kB,MACT,GAAIhZ,EAAkBsF,IAAkB,KAATA,GAAwB,KAATA,EAAa,CACzD,MAAMwoD,EAAoB,KAATxoD,EAAc,gBAA2B,KAATA,EAAc,gBA3tB3E,SAA6B1C,GAC3B,OAAQA,GACN,IAAK,MACH,MAAO,eACT,IAAK,UACH,MAAO,mBACT,IAAK,SACH,MAAO,kBACT,IAAK,QACH,MAAO,iBACT,IAAK,SACH,MAAO,kBACT,IAAK,SACH,MAAO,kBACT,IAAK,SACH,MAAO,kBACT,IAAK,SACH,MAAO,kBACT,IAAK,YACH,MAAO,qBACT,IAAK,UACH,MAAO,mBACT,QACE,OAEN,CAksB6FmrD,CAAoB15D,KAAK2kB,MAAMpW,OAChH,QAAiB5P,IAAb86D,GAAuD,KAA7Bz5D,KAAK2tB,oBAA4B,CAC7D,MAAMlP,EAAOze,KAAK05B,YAElB,OADA15B,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAMg7C,EAC/B,CACA,OAAOz5D,KAAKg1D,sBACd,CACF,EAEJh1D,KAAK+V,YACP,CACA4jD,2BACE,IAAI1oD,EAAOjR,KAAK04D,sBAChB,MAAQ14D,KAAKq2B,yBAA2Br2B,KAAKktB,IAAI,IAC/C,GAAIltB,KAAK2qB,MAAM,GAAI,CACjB,MAAMlM,EAAOze,KAAK45B,gBAAgB3oB,GAClCwN,EAAK6U,YAAcriB,EACnBjR,KAAK02B,OAAO,GACZzlB,EAAOjR,KAAK65B,WAAWpb,EAAM,cAC/B,KAAO,CACL,MAAMA,EAAOze,KAAK45B,gBAAgB3oB,GAClCwN,EAAK6pC,WAAar3C,EAClBwN,EAAK8pC,UAAYvoD,KAAK43D,cACtB53D,KAAK02B,OAAO,GACZzlB,EAAOjR,KAAK65B,WAAWpb,EAAM,sBAC/B,CAEF,OAAOxN,CACT,CACA2oD,sBACE,MAAMn7C,EAAOze,KAAK05B,YACZ0W,EAAWpwC,KAAK2kB,MAAMpW,MAO5B,OANAvO,KAAK0iB,OACLjE,EAAK2xB,SAAWA,EAChB3xB,EAAK6jC,eAAiBtiD,KAAK65D,8BACV,aAAbzpB,GACFpwC,KAAK85D,iCAAiCr7C,GAEjCze,KAAK65B,WAAWpb,EAAM,iBAC/B,CACAq7C,iCAAiCr7C,GAC/B,OAAQA,EAAK6jC,eAAerxC,MAC1B,IAAK,cACL,IAAK,cACH,OACF,QACEjR,KAAKwiB,MAAM6xB,GAAS6D,mBAAoB,CACtC3zC,GAAIka,IAGZ,CACAs7C,mBACE,MAAMt7C,EAAOze,KAAK05B,YAClB15B,KAAKm2B,iBAAiB,KACtB,MAAMwvB,EAAgB3lD,KAAK05B,YAI3B,OAHAisB,EAAcpkD,KAAOvB,KAAK41D,2BAC1BjQ,EAAckQ,WAAa71D,KAAKszD,YAAW,IAAMtzD,KAAKg6D,kCACtDv7C,EAAKknC,cAAgB3lD,KAAK65B,WAAW8rB,EAAe,mBAC7C3lD,KAAK65B,WAAWpb,EAAM,cAC/B,CACAu7C,gCACE,GAAIh6D,KAAKktB,IAAI,IAAK,CAChB,MAAM2oC,EAAa71D,KAAKi6D,qCAAoC,IAAMj6D,KAAK43D,gBACvE,GAAI53D,KAAK2kB,MAAM8C,oCAAsCznB,KAAK2qB,MAAM,IAC9D,OAAOkrC,CAEX,CACF,CACAgE,8BAnvPF,IAA+B/5D,EAqvP3B,OArvP2BA,EAovPkBE,KAAK2kB,MAAM1T,OAnvP1C,KAAOnR,GAAS,MAmvPoCE,KAAK2kB,MAAMyD,YACrDpoB,KAAK45D,sBAAwB55D,KAAK41B,aAAa,KAAO51B,KAAK+5D,mBAAqB/5D,KAAKi5D,kCAAiC,IAAMj5D,KAAK25D,4BAC3J,CACAO,+BAA+B7oD,EAAM8oD,EAAsB/pB,GACzD,MAAM3xB,EAAOze,KAAK05B,YACZ0gC,EAAqBp6D,KAAKktB,IAAIkjB,GAC9BnwC,EAAQ,GACd,GACEA,EAAMsC,KAAK43D,WACJn6D,KAAKktB,IAAIkjB,IAClB,OAAqB,IAAjBnwC,EAAM6M,QAAiBstD,GAG3B37C,EAAKxe,MAAQA,EACND,KAAK65B,WAAWpb,EAAMpN,IAHpBpR,EAAM,EAIjB,CACAo6D,kCACE,OAAOr6D,KAAKk6D,+BAA+B,qBAAsBl6D,KAAK65D,4BAA4BnH,KAAK1yD,MAAO,GAChH,CACAs6D,2BACE,OAAOt6D,KAAKk6D,+BAA+B,cAAel6D,KAAKq6D,gCAAgC3H,KAAK1yD,MAAO,GAC7G,CACAu6D,0BACE,QAAIv6D,KAAK2qB,MAAM,KAGR3qB,KAAK2qB,MAAM,KAAO3qB,KAAK22D,YAAY32D,KAAKw6D,qCAAqC9H,KAAK1yD,MAC3F,CACAy6D,uBACE,GAAI9uD,EAAkB3L,KAAK2kB,MAAM1T,OAASjR,KAAK2qB,MAAM,IAEnD,OADA3qB,KAAK0iB,QACE,EAET,GAAI1iB,KAAK2qB,MAAM,GAAI,CACjB,MAAM,OACJ5D,GACE/mB,KAAK2kB,MACH+1C,EAAqB3zC,EAAOja,OAClC,IAEE,OADA9M,KAAKuxC,gBAAgB,GAAG,GACjBxqB,EAAOja,SAAW4tD,CAC3B,CAAE,MAAOhgB,GACP,OAAO,CACT,CACF,CACA,GAAI16C,KAAK2qB,MAAM,GAAI,CACjB3qB,KAAK0iB,OACL,MAAM,OACJqE,GACE/mB,KAAK2kB,MACH+1C,EAAqB3zC,EAAOja,OAClC,IAEE,OADAkW,MAAMsuB,iBAAiB,EAAG,GAAI,GACvBvqB,EAAOja,SAAW4tD,CAC3B,CAAE,MAAOC,GACP,OAAO,CACT,CACF,CACA,OAAO,CACT,CACAH,uCAEE,GADAx6D,KAAK0iB,OACD1iB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAC/B,OAAO,EAET,GAAI3qB,KAAKy6D,uBAAwB,CAC/B,GAAIz6D,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IACnE,OAAO,EAET,GAAI3qB,KAAK2qB,MAAM,MACb3qB,KAAK0iB,OACD1iB,KAAK2qB,MAAM,KACb,OAAO,CAGb,CACA,OAAO,CACT,CACA2rC,qCAAqCJ,GACnC,OAAOl2D,KAAK46D,UAAS,KACnB,MAAMC,EAAI76D,KAAK05B,YACf15B,KAAK02B,OAAOw/B,GACZ,MAAMz3C,EAAOze,KAAK05B,YACZ47B,IAAYt1D,KAAKszD,WAAWtzD,KAAK86D,4BAA4BpI,KAAK1yD,OACxE,GAAIs1D,GAAWt1D,KAAK2qB,MAAM,IAAK,CAC7B,IAAIowC,EAAoB/6D,KAAKs5D,qCAW7B,MAV+B,eAA3ByB,EAAkB9pD,MACpBwN,EAAK22C,cAAgB2F,EACrBt8C,EAAK62C,SAAU,EACf72C,EAAK6jC,eAAiB,KACtByY,EAAoB/6D,KAAK65B,WAAWpb,EAAM,qBAE1Cze,KAAKi6B,2BAA2B8gC,EAAmBt8C,GACnDs8C,EAAkBzF,SAAU,GAE9BuF,EAAEvY,eAAiByY,EACZ/6D,KAAK65B,WAAWghC,EAAG,mBAC5B,CACA,MAAMG,EAAwBh7D,KAAKgzD,kBAAoBhzD,KAAKszD,WAAWtzD,KAAKi7D,2BAA2BvI,KAAK1yD,OAC5G,IAAKg7D,EACH,OAAK1F,GAGL72C,EAAK22C,cAAgBp1D,KAAKwxC,kBAC1B/yB,EAAK62C,QAAUA,EACf72C,EAAK6jC,eAAiB,KACtBuY,EAAEvY,eAAiBtiD,KAAK65B,WAAWpb,EAAM,mBAClCze,KAAK65B,WAAWghC,EAAG,qBANjB76D,KAAKq1D,uBAAsB,EAAOwF,GAQ7C,MAAM5pD,EAAOjR,KAAKq1D,uBAAsB,GAKxC,OAJA52C,EAAK22C,cAAgB4F,EACrBv8C,EAAK6jC,eAAiBrxC,EACtBwN,EAAK62C,QAAUA,EACfuF,EAAEvY,eAAiBtiD,KAAK65B,WAAWpb,EAAM,mBAClCze,KAAK65B,WAAWghC,EAAG,mBAAmB,GAEjD,CACAK,0CACE,OAAOl7D,KAAK2qB,MAAM,IAAM3qB,KAAKs2D,qCAAqC,SAAM33D,CAC1E,CACAk4D,2BACE,OAAO72D,KAAK2qB,MAAM,IAAM3qB,KAAKq1D,6BAA0B12D,CACzD,CACAk5D,iBACE,OAAO73D,KAAK81D,mBAAmB,GACjC,CACAmF,6BACE,MAAMr4C,EAAK5iB,KAAKwxC,kBAChB,GAAIxxC,KAAK41B,aAAa,OAAS51B,KAAKq2B,wBAElC,OADAr2B,KAAK0iB,OACEE,CAEX,CACAk4C,8BACE,GAAwB,MAApB96D,KAAK2kB,MAAM1T,KACb,OAAO,EAET,MAAMmX,EAAcpoB,KAAK2kB,MAAMyD,YAE/B,OADApoB,KAAK0iB,UACA/W,EAAkB3L,KAAK2kB,MAAM1T,QAAUjR,KAAK2qB,MAAM,MAGnDvC,GACFpoB,KAAKwiB,MAAM3E,EAAOvI,2BAA4B,CAC5C/Q,GAAIvE,KAAK2kB,MAAMsD,gBACf1S,aAAc,YAGX,GACT,CACA8/C,sBAAsB8F,GAAW,EAAMN,EAAI76D,KAAK05B,aAK9C,OAJA15B,KAAK46D,UAAS,KACRO,GAAUn7D,KAAK02B,OAAO,IAC1BmkC,EAAEvY,eAAiBtiD,KAAK43D,aAAa,IAEhC53D,KAAK65B,WAAWghC,EAAG,mBAC5B,CACAjD,cACEzjB,GAAOn0C,KAAK2kB,MAAMyC,QAClB,MAAMnW,EAAOjR,KAAKo7D,4BAClB,GAAIp7D,KAAK2kB,MAAM8C,mCAAqCznB,KAAKq2B,0BAA4Br2B,KAAKktB,IAAI,IAC5F,OAAOjc,EAET,MAAMwN,EAAOze,KAAK45B,gBAAgB3oB,GAOlC,OANAwN,EAAK25C,UAAYnnD,EACjBwN,EAAK48C,YAAcr7D,KAAKi6D,qCAAoC,IAAMj6D,KAAKo7D,8BACvEp7D,KAAK02B,OAAO,IACZjY,EAAK68C,SAAWt7D,KAAKi5D,kCAAiC,IAAMj5D,KAAK43D,gBACjE53D,KAAK02B,OAAO,IACZjY,EAAK88C,UAAYv7D,KAAKi5D,kCAAiC,IAAMj5D,KAAK43D,gBAC3D53D,KAAK65B,WAAWpb,EAAM,oBAC/B,CACA+8C,iCACE,OAAOx7D,KAAK41B,aAAa,MAAkC,KAA1B51B,KAAKqtB,YAAYpc,IACpD,CACAmqD,4BACE,OAAIp7D,KAAKu6D,0BACAv6D,KAAK+4D,iCAAiC,kBAE3C/4D,KAAK2qB,MAAM,IACN3qB,KAAK+4D,iCAAiC,qBACpC/4D,KAAKw7D,iCACPx7D,KAAK+4D,iCAAiC,qBAAqB,GAE7D/4D,KAAKs6D,0BACd,CACAmB,uBACMz7D,KAAK2jB,gBAAgB,aAAc,6BACrC3jB,KAAKwiB,MAAM6xB,GAASgD,sBAAuB,CACzC9yC,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MAAMpI,EAAOze,KAAK05B,YAOlB,OANAjb,EAAK6jC,eAAiBtiD,KAAK46D,UAAS,KAClC56D,KAAK0iB,OACE1iB,KAAK2qB,MAAM,IAAM3qB,KAAKg1D,uBAAyBh1D,KAAK43D,iBAE7D53D,KAAK02B,OAAO,IACZjY,EAAK+wB,WAAaxvC,KAAKw5D,kBAChBx5D,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAi9C,sBAAsB57D,GACpB,MAAM67D,EAAmB37D,KAAK2kB,MAAMkC,SAC9B+0C,EAAgB57D,KAAKk0D,qBAAqB,yBAAyB,KACvE,MAAMz1C,EAAOze,KAAK05B,YAKlB,OAJAjb,EAAK+wB,WAAaxvC,KAAK60D,oBACnB70D,KAAK2qB,MAAM,MACblM,EAAKg+B,eAAiBz8C,KAAK80D,wBAEtB90D,KAAK65B,WAAWpb,EAAM,gCAAgC,IAQ/D,OANKm9C,EAAc9uD,QACjB9M,KAAKwiB,MAAM6xB,GAASkB,wBAAyB,CAC3ChxC,GAAIo3D,EACJ77D,UAGG87D,CACT,CACAC,4BAA4Bp9C,EAAM/P,EAAa,CAAC,GAC9C,GAAI1O,KAAKs2B,wBAAyB,OAAO,KACzCt2B,KAAKm2B,iBAAiB,KAClBznB,EAAWs2C,UAASvmC,EAAKumC,SAAU,GACnCr5C,EAAkB3L,KAAK2kB,MAAM1T,OAC/BwN,EAAKmE,GAAK5iB,KAAKwxC,kBACfxxC,KAAKyzC,gBAAgBh1B,EAAKmE,GApmOV,OAsmOhBnE,EAAKmE,GAAK,KACV5iB,KAAKwiB,MAAM6xB,GAASsC,qBAAsB,CACxCpyC,GAAIvE,KAAK2kB,MAAMkC,YAGnBpI,EAAKg+B,eAAiBz8C,KAAK+1D,yBAAyB/1D,KAAK+yD,4BACrD/yD,KAAKktB,IAAI,MACXzO,EAAKulC,QAAUhkD,KAAK07D,sBAAsB,YAE5C,MAAMvf,EAAOn8C,KAAK05B,YAGlB,OAFAyiB,EAAKA,KAAOn8C,KAAK46D,SAAS56D,KAAKs3D,yBAAyB5E,KAAK1yD,OAC7Dye,EAAK09B,KAAOn8C,KAAK65B,WAAWsiB,EAAM,mBAC3Bn8C,KAAK65B,WAAWpb,EAAM,yBAC/B,CACAq9C,4BAA4Br9C,GAc1B,OAbAA,EAAKmE,GAAK5iB,KAAKwxC,kBACfxxC,KAAKyzC,gBAAgBh1B,EAAKmE,GArnOb,GAsnObnE,EAAK6jC,eAAiBtiD,KAAK46D,UAAS,KAGlC,GAFAn8C,EAAKg+B,eAAiBz8C,KAAK+1D,yBAAyB/1D,KAAKwyD,uBACzDxyD,KAAK02B,OAAO,IACR12B,KAAK41B,aAAa,MAAkC,KAA1B51B,KAAKqtB,YAAYpc,KAAa,CAC1D,MAAMwN,EAAOze,KAAK05B,YAElB,OADA15B,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,qBAC/B,CACA,OAAOze,KAAK43D,aAAa,IAE3B53D,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,yBAC/B,CACAs9C,cAAcC,GACZ,MAAMC,EAAaj8D,KAAK2kB,MAAM3X,QAC9BhN,KAAK2kB,MAAM3X,QAAU,CAACivD,EAAW,IACjC,IACE,OAAOD,GACT,CAAE,QACAh8D,KAAK2kB,MAAM3X,QAAUivD,CACvB,CACF,CACArB,SAASoB,GACP,MAAMza,EAAYvhD,KAAK2kB,MAAMyC,OAC7BpnB,KAAK2kB,MAAMyC,QAAS,EACpB,IACE,OAAO40C,GACT,CAAE,QACAh8D,KAAK2kB,MAAMyC,OAASm6B,CACtB,CACF,CACA0Y,oCAAoC+B,GAClC,MAAME,EAAuCl8D,KAAK2kB,MAAM8C,kCACxDznB,KAAK2kB,MAAM8C,mCAAoC,EAC/C,IACE,OAAOu0C,GACT,CAAE,QACAh8D,KAAK2kB,MAAM8C,kCAAoCy0C,CACjD,CACF,CACAjD,iCAAiC+C,GAC/B,MAAME,EAAuCl8D,KAAK2kB,MAAM8C,kCACxDznB,KAAK2kB,MAAM8C,mCAAoC,EAC/C,IACE,OAAOu0C,GACT,CAAE,QACAh8D,KAAK2kB,MAAM8C,kCAAoCy0C,CACjD,CACF,CACApG,mBAAmBh2D,GACjB,OAAQE,KAAK2qB,MAAM7qB,GAAqBE,KAAKm8D,2BAAjBx9D,CAC9B,CACA84D,sBAAsB33D,GACpB,OAAOE,KAAKo8D,mBAAkB,IAAMp8D,KAAK02B,OAAO52B,IAClD,CACAq8D,sBACE,OAAOn8D,KAAKo8D,mBAAkB,IAAMp8D,KAAK0iB,QAC3C,CACA05C,kBAAkBJ,GAChB,OAAOh8D,KAAK46D,UAAS,KACnBoB,IACOh8D,KAAK43D,gBAEhB,CACAyE,oBACE,MAAM59C,EAAOze,KAAK05B,YAKlB,OAJAjb,EAAKmE,GAAK5iB,KAAK2qB,MAAM,KAAO3H,MAAM63B,mBAAmB76C,KAAK2kB,MAAMpW,OAASvO,KAAKwxC,iBAAgB,GAC1FxxC,KAAKktB,IAAI,MACXzO,EAAK69C,YAAct5C,MAAMmuB,2BAEpBnxC,KAAK65B,WAAWpb,EAAM,eAC/B,CACA89C,uBAAuB99C,EAAM/P,EAAa,CAAC,GASzC,OARIA,EAAWsvB,QAAOvf,EAAKuf,OAAQ,GAC/BtvB,EAAWs2C,UAASvmC,EAAKumC,SAAU,GACvChlD,KAAKm2B,iBAAiB,KACtB1X,EAAKmE,GAAK5iB,KAAKwxC,kBACfxxC,KAAKyzC,gBAAgBh1B,EAAKmE,GAAInE,EAAKuf,MA9rOhBw+B,KAJNp8C,MAmsObpgB,KAAK02B,OAAO,GACZjY,EAAK4yC,QAAUrxD,KAAKk0D,qBAAqB,cAAel0D,KAAKq8D,kBAAkB3J,KAAK1yD,OACpFA,KAAK02B,OAAO,GACL12B,KAAK65B,WAAWpb,EAAM,oBAC/B,CACAg+C,qBACE,MAAMh+C,EAAOze,KAAK05B,YAKlB,OAJA15B,KAAK+hB,MAAMF,MAzuOK,GA0uOhB7hB,KAAK02B,OAAO,GACZ1T,MAAM05C,4BAA4Bj+C,EAAK09B,KAAO,QAAIx9C,GAAW,EAAM,GACnEqB,KAAK+hB,MAAMD,OACJ9hB,KAAK65B,WAAWpb,EAAM,gBAC/B,CACAk+C,oCAAoCl+C,EAAMm+C,GAAS,GAKjD,GAJAn+C,EAAKmE,GAAK5iB,KAAKwxC,kBACVorB,GACH58D,KAAKyzC,gBAAgBh1B,EAAKmE,GA9sOV,MAgtOd5iB,KAAKktB,IAAI,IAAK,CAChB,MAAM2vC,EAAQ78D,KAAK05B,YACnB15B,KAAK28D,oCAAoCE,GAAO,GAChDp+C,EAAK09B,KAAO0gB,CACd,MACE78D,KAAK+hB,MAAMF,MAAM5B,IACjBjgB,KAAKw4B,UAAU3W,MAnqKP,GAoqKRpD,EAAK09B,KAAOn8C,KAAKy8D,qBACjBz8D,KAAKw4B,UAAU1W,OACf9hB,KAAK+hB,MAAMD,OAEb,OAAO9hB,KAAK65B,WAAWpb,EAAM,sBAC/B,CACAq+C,wCAAwCr+C,GAkBtC,OAjBIze,KAAK41B,aAAa,MACpBnX,EAAKs+C,QAAS,EACdt+C,EAAKmE,GAAK5iB,KAAKwxC,mBACNxxC,KAAK2qB,MAAM,KACpBlM,EAAKmE,GAAKI,MAAM63B,mBAAmB76C,KAAK2kB,MAAMpW,OAE9CvO,KAAK+V,aAEH/V,KAAK2qB,MAAM,IACb3qB,KAAK+hB,MAAMF,MAAM5B,IACjBjgB,KAAKw4B,UAAU3W,MArrKP,GAsrKRpD,EAAK09B,KAAOn8C,KAAKy8D,qBACjBz8D,KAAKw4B,UAAU1W,OACf9hB,KAAK+hB,MAAMD,QAEX9hB,KAAKw2B,YAEAx2B,KAAK65B,WAAWpb,EAAM,sBAC/B,CACAu+C,+BAA+Bv+C,EAAMw+C,GACnCx+C,EAAKw+C,SAAWA,IAAY,EAC5Bx+C,EAAKmE,GAAK5iB,KAAKwxC,kBACfxxC,KAAKyzC,gBAAgBh1B,EAAKmE,GAAI1C,IAC9BlgB,KAAK02B,OAAO,IACZ,MAAMwmC,EAAkBl9D,KAAKm9D,yBAQ7B,MAPwB,SAApB1+C,EAAKof,YAAkD,8BAAzBq/B,EAAgBjsD,MAChDjR,KAAKwiB,MAAM6xB,GAASsB,yBAA0B,CAC5CpxC,GAAI24D,IAGRz+C,EAAKy+C,gBAAkBA,EACvBl9D,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,4BAC/B,CACA2+C,8BACE,OAAOp9D,KAAK41B,aAAa,MAAqC,KAA7B51B,KAAK2tB,mBACxC,CACAwvC,yBACE,OAAOn9D,KAAKo9D,8BAAgCp9D,KAAKq9D,iCAAmCr9D,KAAK60D,mBAAkB,EAC7G,CACAwI,iCACE,MAAM5+C,EAAOze,KAAK05B,YAQlB,OAPA15B,KAAKm2B,iBAAiB,KACtBn2B,KAAK02B,OAAO,IACP12B,KAAK2qB,MAAM,MACd3qB,KAAK+V,aAEP0I,EAAK+wB,WAAaxsB,MAAM48B,gBACxB5/C,KAAK02B,OAAO,IACL12B,KAAK65B,WAAWpb,EAAM,4BAC/B,CACAk4C,YAAY2G,GACV,MAAM34C,EAAQ3kB,KAAK2kB,MAAM3H,QACnB+M,EAAMuzC,IAEZ,OADAt9D,KAAK2kB,MAAQA,EACNoF,CACT,CACAwzC,mBAAmBD,GACjB,MAAM5S,EAAS1qD,KAAK22B,UAAS+3B,GAAS4O,KAAO5O,MAC7C,IAAIhE,EAAOzzB,SAAYyzB,EAAOjsC,KAE9B,OADIisC,EAAOn4B,QAAOvyB,KAAK2kB,MAAQ+lC,EAAO3zB,WAC/B2zB,EAAOjsC,IAChB,CACA60C,WAAWgK,GACT,MAAM34C,EAAQ3kB,KAAK2kB,MAAM3H,QACnB0tC,EAAS4S,IACf,YAAe3+D,IAAX+rD,IAAmC,IAAXA,EACnBA,OAEP1qD,KAAK2kB,MAAQA,EAGjB,CACA64C,kBAAkBC,GAChB,GAAIz9D,KAAKu2B,mBACP,OAEF,IACIllB,EADAqsD,EAAY19D,KAAK2kB,MAAM1T,KAM3B,OAJIjR,KAAK41B,aAAa,MACpB8nC,EAAY,GACZrsD,EAAO,OAEFrR,KAAK29D,oBAAmB,KAC7B,GAAkB,KAAdD,EAEF,OADAD,EAAKzY,SAAU,EACRhiC,MAAM46C,uBAAuBH,GAAM,GAAO,GAEnD,GAAkB,KAAdC,EAEF,OADAD,EAAKzY,SAAU,EACRhlD,KAAK69D,WAAWJ,GAAM,GAAM,GAErC,GAAkB,MAAdC,EACF,OAAO19D,KAAKu8D,uBAAuBkB,EAAM,CACvCzY,SAAS,IAGb,GAAkB,MAAd0Y,EACF,OAAO19D,KAAK88D,wCAAwCW,GAEtD,GAAkB,KAAdC,GAAkC,KAAdA,EACtB,OAAK19D,KAAK2qB,MAAM,KAAQ3qB,KAAKi2B,sBAAsB,SAInDj2B,KAAK02B,OAAO,IACL12B,KAAKu8D,uBAAuBkB,EAAM,CACvCz/B,OAAO,EACPgnB,SAAS,MANTyY,EAAKzY,SAAU,EACRhlD,KAAK89D,kBAAkBL,EAAMpsD,GAAQrR,KAAK2kB,MAAMpW,OAAO,IAQlE,GAAkB,MAAdmvD,EAAmB,CACrB,MAAMhT,EAAS1qD,KAAK67D,4BAA4B4B,EAAM,CACpDzY,SAAS,IAEX,GAAI0F,EAAQ,OAAOA,CACrB,CACA,OAAI/+C,EAAkB+xD,GACb19D,KAAK+9D,mBAAmBN,EAAMz9D,KAAK2kB,MAAMpW,OAAO,EAAM,WAD/D,CAEA,GAEJ,CACAyvD,8BACE,OAAOh+D,KAAK+9D,mBAAmB/9D,KAAK05B,YAAa15B,KAAK2kB,MAAMpW,OAAO,EAAM,KAC3E,CACA0vD,2BAA2Bx/C,EAAMwyB,EAAMe,GACrC,OAAQf,EAAK1vC,MACX,IAAK,UACH,CACE,MAAM48C,EAAcn+C,KAAKw9D,kBAAkB/+C,GAC3C,GAAI0/B,EAEF,OADAA,EAAY6G,SAAU,EACf7G,EAET,KACF,CACF,IAAK,SACH,GAAIn+C,KAAK2qB,MAAM,GAAI,CACjB3qB,KAAK+hB,MAAMF,MAAM5B,IACjBjgB,KAAKw4B,UAAU3W,MAtzKX,GAuzKJ,MAAMq8C,EAAMz/C,EAMZ,OALAy/C,EAAInB,QAAS,EACbmB,EAAIt7C,GAAKquB,EACTitB,EAAI/hB,KAAOn8C,KAAKy8D,qBAChBz8D,KAAK+hB,MAAMD,OACX9hB,KAAKw4B,UAAU1W,OACR9hB,KAAK65B,WAAWqkC,EAAK,sBAC9B,CACA,MACF,QACE,OAAOl+D,KAAK+9D,mBAAmBt/C,EAAMwyB,EAAK1vC,MAAM,EAAOywC,GAE7D,CACA+rB,mBAAmBt/C,EAAMlQ,EAAOmU,EAAMsvB,GACpC,OAAQzjC,GACN,IAAK,WACH,GAAIvO,KAAKm+D,sBAAsBz7C,KAAU1iB,KAAK2qB,MAAM,KAAOhf,EAAkB3L,KAAK2kB,MAAM1T,OACtF,OAAOjR,KAAKo+D,2BAA2B3/C,EAAMuzB,GAE/C,MACF,IAAK,SACH,GAAIhyC,KAAKm+D,sBAAsBz7C,GAAO,CACpC,GAAI1iB,KAAK2qB,MAAM,KACb,OAAO3qB,KAAK88D,wCAAwCr+C,GAC/C,GAAI9S,EAAkB3L,KAAK2kB,MAAM1T,MACtC,OAAOjR,KAAK28D,oCAAoCl+C,EAEpD,CACA,MACF,IAAK,YACH,GAAIze,KAAKm+D,sBAAsBz7C,IAAS/W,EAAkB3L,KAAK2kB,MAAM1T,MACnE,OAAOjR,KAAK28D,oCAAoCl+C,GAElD,MACF,IAAK,OACH,GAAIze,KAAKm+D,sBAAsBz7C,IAAS/W,EAAkB3L,KAAK2kB,MAAM1T,MACnE,OAAOjR,KAAK87D,4BAA4Br9C,GAIhD,CACA0/C,sBAAsBz7C,GACpB,OAAIA,GACE1iB,KAAKs2B,0BACTt2B,KAAK0iB,QACE,IAED1iB,KAAKu2B,kBACf,CACA8nC,oCAAoCx3C,GAClC,IAAK7mB,KAAK2qB,MAAM,IACd,OAEF,MAAM2zC,EAA4Bt+D,KAAK2kB,MAAMwC,uBAC7CnnB,KAAK2kB,MAAMwC,wBAAyB,EACpC,MAAM4C,EAAM/pB,KAAKu9D,oBAAmB,KAClC,MAAM9+C,EAAOze,KAAK25B,YAAY9S,GAK9B,OAJApI,EAAKg+B,eAAiBz8C,KAAKg2D,sBAAsBh2D,KAAK8yD,sBACtD9vC,MAAMirC,oBAAoBxvC,GAC1BA,EAAK4jC,WAAariD,KAAKk7D,0CACvBl7D,KAAK02B,OAAO,IACLjY,CAAI,IAGb,OADAze,KAAK2kB,MAAMwC,uBAAyBm3C,EAC/Bv0C,EAGE/G,MAAM8sC,qBAAqB/lC,EAAK,MAAM,QAH7C,CAIF,CACAw0C,mCACE,GAAyB,KAArBv+D,KAAKw+D,YAGT,OAAOx+D,KAAK80D,sBACd,CACAA,uBACE,MAAMr2C,EAAOze,KAAK05B,YAWlB,OAVAjb,EAAKoH,OAAS7lB,KAAK46D,UAAS,IAAM56D,KAAK+7D,eAAc,KACnD/7D,KAAK02B,OAAO,IACL12B,KAAKk0D,qBAAqB,4BAA6Bl0D,KAAK43D,YAAYlF,KAAK1yD,YAE3D,IAAvBye,EAAKoH,OAAO/Y,QACd9M,KAAKwiB,MAAM6xB,GAASmB,mBAAoB,CACtCjxC,GAAIka,IAGRze,KAAK02B,OAAO,IACL12B,KAAK65B,WAAWpb,EAAM,+BAC/B,CACAggD,uBACE,OAzzQ+B3+D,EAyzQEE,KAAK2kB,MAAM1T,OAxzQ9B,KAAOnR,GAAS,IADlC,IAAmCA,CA0zQjC,CACAupD,2BACE,OAAIrpD,KAAKy+D,wBACFz7C,MAAMqmC,0BACf,CACAnX,wBAAwB3xB,EAAOyxB,GAC7B,MAAMnrB,EAAW7mB,KAAK2kB,MAAMkC,SACtB0sC,EAAW,CAAC,EAClBvzD,KAAKyyD,iBAAiB,CACpBE,iBAAkB,CAAC,SAAU,UAAW,YAAa,WAAY,aAChEY,GACH,MAAMO,EAAgBP,EAASO,cACzB4K,EAAWnL,EAASmL,SACpB3H,EAAWxD,EAASwD,SACZ,EAARx2C,KAAeuzC,GAAiBiD,GAAY2H,IAChD1+D,KAAKwiB,MAAM6xB,GAAS4D,4BAA6B,CAC/C1zC,GAAIsiB,IAGR,MAAMwpB,EAAOrwC,KAAKyyC,oBAClBzyC,KAAK8xC,6BAA6BzB,EAAM9vB,GACxC,MAAMkwB,EAAMzwC,KAAKyyC,kBAAkBpC,EAAKvzB,IAAItP,MAAO6iC,GACnD,GAAIyjB,GAAiBiD,GAAY2H,EAAU,CACzC,MAAMC,EAAK3+D,KAAK25B,YAAY9S,GAa5B,OAZImrB,EAAWllC,SACb6xD,EAAG3sB,WAAaA,GAEd8hB,IAAe6K,EAAG7K,cAAgBA,GAClCiD,IAAU4H,EAAG5H,SAAWA,GACxB2H,IAAUC,EAAGD,SAAWA,GACX,eAAbjuB,EAAIx/B,MAAsC,sBAAbw/B,EAAIx/B,MACnCjR,KAAKwiB,MAAM6xB,GAASiE,iCAAkC,CACpD/zC,GAAIo6D,IAGRA,EAAGC,UAAYnuB,EACRzwC,KAAK65B,WAAW8kC,EAAI,sBAC7B,CAIA,OAHI3sB,EAAWllC,SACbujC,EAAK2B,WAAaA,GAEbvB,CACT,CACAouB,kBAAkBpgD,GAChB,MAAqB,wBAAdA,EAAKxN,MAAkC+R,MAAM67C,kBAAkBpgD,EAAKmgD,YAAc57C,MAAM67C,kBAAkBpgD,EACnH,CACAqgD,0BAA0BrgD,GACxB,IAAK,MAAMi0B,KAASj0B,EAAKoH,OACJ,eAAf6sB,EAAMzhC,MAAyByhC,EAAMgL,WAAa19C,KAAK2kB,MAAM4C,kBAC/DvnB,KAAKwiB,MAAM6xB,GAAS/X,kBAAmB,CACrC/3B,GAAImuC,GAIZ,CACAuc,2BAA2BxwC,EAAMoH,EAAQqqB,GACvCltB,MAAMisC,2BAA2BxwC,EAAMoH,EAAQqqB,GAC/ClwC,KAAK8+D,0BAA0BrgD,EACjC,CACAuqC,2BAA2BvqC,EAAMxN,EAAM4rC,GAAW,GAC5C78C,KAAK2qB,MAAM,MACblM,EAAK4jC,WAAariD,KAAKs2D,qCAAqC,KAE9D,MAAMyI,EAAwB,wBAAT9tD,EAAiC,oBAA+B,gBAATA,GAAmC,uBAATA,EAAgC,uBAAoBtS,EAC1J,OAAIogE,IAAiB/+D,KAAK2qB,MAAM,IAAM3qB,KAAKu2B,mBAClCv2B,KAAK65B,WAAWpb,EAAMsgD,GAEV,sBAAjBA,GAAwC/+D,KAAK2kB,MAAM4C,mBACrDvnB,KAAKwiB,MAAM6xB,GAASc,iCAAkC,CACpD5wC,GAAIka,IAEFA,EAAKumC,SACAhiC,MAAMgmC,2BAA2BvqC,EAAMsgD,EAAcliB,IAGhE78C,KAAK8+D,0BAA0BrgD,GACxBuE,MAAMgmC,2BAA2BvqC,EAAMxN,EAAM4rC,GACtD,CACAmiB,4BAA4BvgD,IACrBA,EAAK09B,MAAQ19B,EAAKmE,GACrB5iB,KAAKyzC,gBAAgBh1B,EAAKmE,GAzhPZ,MA2hPdI,MAAMg8C,4BAA4BvgD,EAEtC,CACAwgD,2BAA2BC,GACzBA,EAAM/wC,SAAQ1P,IACgC,0BAA/B,MAARA,OAAe,EAASA,EAAKxN,OAChCjR,KAAKwiB,MAAM6xB,GAAS8D,yBAA0B,CAC5C5zC,GAAIka,EAAK6jC,gBAEb,GAEJ,CACAxR,iBAAiBN,EAAU2uB,GAEzB,OADAn/D,KAAKi/D,2BAA2BzuB,GACzBA,CACT,CACAyb,eAAexa,EAAOya,EAAcC,EAASh1B,GAC3C,MAAM1Y,EAAOuE,MAAMipC,eAAexa,EAAOya,EAAcC,EAASh1B,GAIhE,MAHkB,oBAAd1Y,EAAKxN,MACPjR,KAAKi/D,2BAA2BxgD,EAAK4F,UAEhC5F,CACT,CACA2/B,eAAeC,EAAMx3B,EAAUy3B,EAAS35B,GACtC,IAAK3kB,KAAKq2B,yBAA2Br2B,KAAK2qB,MAAM,IAAK,CACnD3qB,KAAK2kB,MAAMwD,oBAAqB,EAChCnoB,KAAK0iB,OACL,MAAM08C,EAAoBp/D,KAAK25B,YAAY9S,GAE3C,OADAu4C,EAAkB5vB,WAAa6O,EACxBr+C,KAAK65B,WAAWulC,EAAmB,sBAC5C,CACA,IAAIC,GAAiB,EACrB,GAAIr/D,KAAK2qB,MAAM,KAAoC,KAA7B3qB,KAAK2tB,oBAA4B,CACrD,GAAI2wB,EAEF,OADA35B,EAAM85B,MAAO,EACNJ,EAET15B,EAAM45B,oBAAsB8gB,GAAiB,EAC7Cr/D,KAAK0iB,MACP,CACA,GAAI1iB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAAK,CACpC,IAAI20C,EACJ,MAAM5U,EAAS1qD,KAAKu9D,oBAAmB,KACrC,IAAKjf,GAAWt+C,KAAKu/D,qBAAqBlhB,GAAO,CAC/C,MAAMmhB,EAAex/D,KAAKq+D,oCAAoCx3C,GAC9D,GAAI24C,EACF,OAAOA,CAEX,CACA,MAAM7P,EAAgB3vD,KAAKu+D,mCAC3B,IAAK5O,EAAe,OACpB,GAAI0P,IAAmBr/D,KAAK2qB,MAAM,IAEhC,YADA20C,EAAuBt/D,KAAK2kB,MAAM8D,eAGpC,GAAItc,EAAgBnM,KAAK2kB,MAAM1T,MAAO,CACpC,MAAMy5C,EAAS1nC,MAAMy8C,8BAA8BphB,EAAMx3B,EAAUlC,GAEnE,OADA+lC,EAAOjO,eAAiBkT,EACjBjF,CACT,CACA,IAAKpM,GAAWt+C,KAAKktB,IAAI,IAAK,CAC5B,MAAMzO,EAAOze,KAAK25B,YAAY9S,GAQ9B,OAPApI,EAAKm/B,OAASS,EACd5/B,EAAKmH,UAAY5lB,KAAKuvD,6BAA6B,IAAI,GACvDvvD,KAAKi/D,2BAA2BxgD,EAAKmH,WACrCnH,EAAKg+B,eAAiBkT,EAClBhrC,EAAM45B,sBACR9/B,EAAKi/B,SAAW2hB,GAEXr/D,KAAKw9C,qBAAqB/+B,EAAMkG,EAAM45B,oBAC/C,CACA,MAAMmhB,EAAY1/D,KAAK2kB,MAAM1T,KAC7B,GAAkB,KAAdyuD,GAAkC,KAAdA,GAAkC,KAAdA,GAAoB5zD,EAAwB4zD,KAAe1/D,KAAKq2B,wBAC1G,OAEF,MAAM5X,EAAOze,KAAK25B,YAAY9S,GAG9B,OAFApI,EAAK+wB,WAAa6O,EAClB5/B,EAAKg+B,eAAiBkT,EACf3vD,KAAK65B,WAAWpb,EAAM,4BAA4B,IAK3D,GAHI6gD,GACFt/D,KAAK+V,WAAWupD,EAAsB,IAEpC5U,EAMF,MALoB,8BAAhBA,EAAOz5C,OAAyCjR,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAoC,KAA7B3qB,KAAK2tB,sBAC3F3tB,KAAKwiB,MAAM6xB,GAASoC,kDAAmD,CACrElyC,GAAIvE,KAAK2kB,MAAMkC,WAGZ6jC,CAEX,CACA,OAAO1nC,MAAMo7B,eAAeC,EAAMx3B,EAAUy3B,EAAS35B,EACvD,CACAirC,eAAenxC,GACb,IAAIkhD,EACJ38C,MAAM4sC,eAAenxC,GACrB,MAAM,OACJm/B,GACEn/B,EACgB,8BAAhBm/B,EAAO3sC,MAA4E,OAAjC0uD,EAAgB/hB,EAAOjoB,QAAkBgqC,EAAc7vB,gBAC3GrxB,EAAKg+B,eAAiBmB,EAAOnB,eAC7Bh+B,EAAKm/B,OAASA,EAAOpO,WAEzB,CACAowB,YAAYvvB,EAAMwvB,EAAcC,GAC9B,IAAIC,EACJ,GAAI7zD,EAAwB,IAAM4zD,IAAY9/D,KAAKq2B,0BAA4Br2B,KAAK41B,aAAa,MAAQmqC,EAAc//D,KAAK41B,aAAa,OAAQ,CAC/I,MAAMnX,EAAOze,KAAK25B,YAAYkmC,GAiB9B,OAhBAphD,EAAK+wB,WAAaa,EAClB5xB,EAAK6jC,eAAiBtiD,KAAK46D,UAAS,KAClC56D,KAAK0iB,OACD1iB,KAAK2qB,MAAM,KACTo1C,GACF//D,KAAKwiB,MAAM3E,EAAOjE,kBAAmB,CACnCrV,GAAIvE,KAAK2kB,MAAMkC,SACf9lB,QAAS,UAGNf,KAAKg1D,wBAEPh1D,KAAK43D,iBAEd53D,KAAK65B,WAAWpb,EAAMshD,EAAc,wBAA0B,kBAC9D//D,KAAKggE,eACEhgE,KAAK4/D,YAAYnhD,EAAMohD,EAAcC,EAC9C,CACA,OAAO98C,MAAM48C,YAAYvvB,EAAMwvB,EAAcC,EAC/C,CACA9R,kBAAkBtuC,EAAMmH,EAAUo5C,EAAetvB,GAC1C3wC,KAAK2kB,MAAM4C,kBACdvE,MAAMgrC,kBAAkBtuC,EAAMmH,EAAUo5C,EAAetvB,EAE3D,CACAqc,sBAAsBvuC,GACpBuE,MAAMgqC,sBAAsBvuC,GACxBA,EAAKwuC,QAA8B,UAApBxuC,EAAKof,YACtB79B,KAAKwiB,MAAM6xB,GAASxY,8BAA+B,CACjDt3B,GAAIka,EAAKqH,WAAW,GAAGhJ,IAAItP,OAGjC,CACA0yD,wBAAyB,CACzB/c,YAAY1kC,GAEV,GADAA,EAAKof,WAAa,QACdlyB,EAAkB3L,KAAK2kB,MAAM1T,OAASjR,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,GAAI,CACzE,IAAIw1C,EAAQngE,KAAKqtB,YAMjB,GALIrtB,KAAK41B,aAAa,MAAuB,KAAfuqC,EAAMlvD,MAA8B,KAAfkvD,EAAMlvD,MAA8B,KAAfkvD,EAAMlvD,OAC5EwN,EAAKof,WAAa,OAClB79B,KAAK0iB,OACLy9C,EAAQngE,KAAKqtB,aAEX1hB,EAAkB3L,KAAK2kB,MAAM1T,OAAwB,KAAfkvD,EAAMlvD,KAC9C,OAAOjR,KAAKg9D,+BAA+Bv+C,EAE/C,CACA,MAAM2hD,EAAap9C,MAAMmgC,YAAY1kC,GAMrC,MAL8B,SAA1B2hD,EAAWviC,YAAyBuiC,EAAWt6C,WAAWhZ,OAAS,GAAuC,2BAAlCszD,EAAWt6C,WAAW,GAAG7U,MACnGjR,KAAKwiB,MAAM6xB,GAASyD,uCAAwC,CAC1DvzC,GAAI67D,IAGDA,CACT,CACAriB,YAAYt/B,EAAMuzB,GAChB,GAAIhyC,KAAK2qB,MAAM,IAQb,OAPA3qB,KAAK0iB,OACD1iB,KAAK41B,aAAa,MAAqC,KAA7B51B,KAAK2tB,qBACjClP,EAAKof,WAAa,OAClB79B,KAAK0iB,QAELjE,EAAKof,WAAa,QAEb79B,KAAKg9D,+BAA+Bv+C,GAAM,GAC5C,GAAIze,KAAKktB,IAAI,IAAK,CACvB,MAAMvoB,EAAS8Z,EAGf,OAFA9Z,EAAO6qC,WAAaxsB,MAAM+8B,kBAC1B//C,KAAKw2B,YACEx2B,KAAK65B,WAAWl1B,EAAQ,qBACjC,CAAO,GAAI3E,KAAKk2B,cAAc,IAAK,CACjC,MAAM40B,EAAOrsC,EAIb,OAHAze,KAAKm2B,iBAAiB,KACtB20B,EAAKloC,GAAK5iB,KAAKwxC,kBACfxxC,KAAKw2B,YACEx2B,KAAK65B,WAAWixB,EAAM,+BAC/B,CAEE,GADArsC,EAAKglC,WAAa,QACdzjD,KAAK41B,aAAa,KAAM,CAC1B,MAAMzM,EAAKnpB,KAAK2tB,oBACL,MAAPxE,GAAqB,KAAPA,IAChBnpB,KAAK0iB,OACLjE,EAAKglC,WAAa,OAEtB,CACA,OAAOzgC,MAAM+6B,YAAYt/B,EAAMuzB,EAEnC,CACAquB,kBACE,OAAOrgE,KAAK41B,aAAa,MAAkC,KAA1B51B,KAAKqtB,YAAYpc,IACpD,CACAq4C,+BACE,GAAItpD,KAAKqgE,kBAAmB,CAC1B,MAAMC,EAAMtgE,KAAK05B,YAGjB,OAFA15B,KAAK0iB,OACL49C,EAAItH,UAAW,EACRh5D,KAAK69D,WAAWyC,GAAK,GAAM,EACpC,CACA,GAAItgE,KAAK2qB,MAAM,KAAM,CACnB,MAAM+/B,EAAS1qD,KAAK67D,4BAA4B77D,KAAK05B,aACrD,GAAIgxB,EAAQ,OAAOA,CACrB,CACA,OAAO1nC,MAAMsmC,8BACf,CACAwU,kBAAkBr/C,EAAMpN,EAAMkvD,GAA0B,GACtD,MAAM,iBACJh5C,GACEvnB,KAAK2kB,MACHw5B,EAAcn7B,MAAM86C,kBAAkBr/C,EAAMpN,EAAMkvD,GAA2Bh5C,GACnF,IAAKA,EAAkB,OAAO42B,EAC9B,IAAK,MAAM,GACTv7B,EAAE,KACF4F,KACG21B,EAAYqiB,aACVh4C,IACQ,UAATnX,GAAsBuR,EAAG0/B,eAC3BtiD,KAAKwiB,MAAM6xB,GAAS8B,sCAAuC,CACzD5xC,GAAIikB,IAEIswB,GAA+BtwB,EAAMxoB,KAAKsjB,UAAU,YAC9DtjB,KAAKwiB,MAAM6xB,GAASU,oEAAqE,CACvFxwC,GAAIikB,KAIV,OAAO21B,CACT,CACAsiB,sBAAsBlgD,EAAOyxB,GAC3B,GAAIhyC,KAAK2qB,MAAM,KAAO3qB,KAAKi2B,sBAAsB,QAAS,CACxD,MAAMxX,EAAOze,KAAK05B,YAElB,OADA15B,KAAK02B,OAAO,IACL12B,KAAKu8D,uBAAuB99C,EAAM,CACvCuf,OAAO,GAEX,CACA,GAAIh+B,KAAK41B,aAAa,KACpB,OAAO51B,KAAKu8D,uBAAuBv8D,KAAK05B,aAE1C,GAAI15B,KAAK41B,aAAa,KAAM,CAC1B,MAAM80B,EAAS1qD,KAAK67D,4BAA4B77D,KAAK05B,aACrD,GAAIgxB,EAAQ,OAAOA,CACrB,CACA,OAAO1nC,MAAMy9C,sBAAsBlgD,EAAOyxB,EAC5C,CACA0uB,sBACE,OAAO1gE,KAAKmzD,gBAAgB,CAAC,SAAU,YAAa,WACtD,CACAwN,mBAAmBjV,EAAQ7V,GACzB,OAAOA,EAAUljB,MAAK0iB,GAChBmD,GAAmBnD,GACdqW,EAAOoI,gBAAkBze,IAEzBqW,EAAOrW,IAEpB,CACAge,0BACE,OAAOrzD,KAAK41B,aAAa,MAAqC,MAA7B51B,KAAK2tB,mBACxC,CACA89B,iBAAiBpP,EAAWqP,EAAQ/mC,GAClC,MAAMkxB,EAAY,CAAC,UAAW,UAAW,SAAU,YAAa,WAAY,WAAY,WAAY,UACpG71C,KAAKyyD,iBAAiB,CACpBE,iBAAkB9c,EAClB+c,oBAAqB,CAAC,KAAM,OAC5BQ,+BAA+B,EAC/BP,cAAexe,GAASiC,yCACvBoV,GACH,MAAMkV,EAAmC,KACnC5gE,KAAKqzD,2BACPrzD,KAAK0iB,OACL1iB,KAAK0iB,OACD1iB,KAAK2gE,mBAAmBjV,EAAQ7V,IAClC71C,KAAKwiB,MAAM6xB,GAASsD,8BAA+B,CACjDpzC,GAAIvE,KAAK2kB,MAAM8D,gBAGnBzF,MAAM69C,sBAAsBxkB,EAAWqP,IAEvC1rD,KAAK8gE,6BAA6BzkB,EAAWqP,EAAQ/mC,IAAS+mC,EAAOvF,OACvE,EAEEuF,EAAO1G,QACThlD,KAAK29D,mBAAmBiD,GAExBA,GAEJ,CACAE,6BAA6BzkB,EAAWqP,EAAQ/mC,EAAOuhC,GACrD,MAAM6a,EAAM/gE,KAAK02D,yBAAyBhL,GAC1C,GAAIqV,EAuBF,OAtBA1kB,EAAUF,KAAK55C,KAAKw+D,GAChBrV,EAAOsN,UACTh5D,KAAKwiB,MAAM6xB,GAASyB,0BAA2B,CAC7CvxC,GAAImnD,IAGJA,EAAOoI,eACT9zD,KAAKwiB,MAAM6xB,GAAS0B,+BAAgC,CAClDxxC,GAAImnD,EACJrW,SAAUqW,EAAOoI,gBAGjBpI,EAAO1G,SACThlD,KAAKwiB,MAAM6xB,GAAS2B,yBAA0B,CAC5CzxC,GAAImnD,SAGJA,EAAOgT,UACT1+D,KAAKwiB,MAAM6xB,GAAS4B,0BAA2B,CAC7C1xC,GAAImnD,MAKL1rD,KAAK2kB,MAAM6C,iBAAmBkkC,EAAOsN,UACxCh5D,KAAKwiB,MAAM6xB,GAASwC,kCAAmC,CACrDtyC,GAAImnD,IAGJA,EAAOgT,WACJ/5C,EAAMq8C,eACThhE,KAAKwiB,MAAM6xB,GAAS2C,sBAAuB,CACzCzyC,GAAImnD,KAIV1oC,MAAM89C,6BAA6BzkB,EAAWqP,EAAQ/mC,EAAOuhC,EAC/D,CACA+a,6BAA6BC,GACVlhE,KAAKktB,IAAI,MACZg0C,EAAaxjB,UAAW,GAClCwjB,EAAanK,UAAY/2D,KAAK2qB,MAAM,KACtC3qB,KAAKwiB,MAAM6xB,GAASS,uBAAwB,CAC1CvwC,GAAI28D,IAGJA,EAAalc,SAAWhlD,KAAK2qB,MAAM,KACrC3qB,KAAKwiB,MAAM6xB,GAASQ,sBAAuB,CACzCtwC,GAAI28D,GAGV,CACA/X,yBAAyB1qC,EAAMwyB,EAAMe,GAEnC,OAD2B,eAAdf,EAAKhgC,KAAwBjR,KAAKi+D,2BAA2Bx/C,EAAMwyB,EAAMe,QAAcrzC,IACrFqkB,MAAMmmC,yBAAyB1qC,EAAMwyB,EAAMe,EAC5D,CACAoX,+BACE,QAAIppD,KAAKy+D,wBACFz7C,MAAMomC,8BACf,CACAG,iBAAiBtY,EAAMpqB,EAAUsQ,GAC/B,IAAKn3B,KAAK2kB,MAAMwC,yBAA2BnnB,KAAK2qB,MAAM,IACpD,OAAO3H,MAAMumC,iBAAiBtY,EAAMpqB,EAAUsQ,GAEhD,MAAMuzB,EAAS1qD,KAAK22B,UAAS,IAAM3T,MAAMumC,iBAAiBtY,EAAMpqB,KAChE,OAAK6jC,EAAOjsC,MAMRisC,EAAOn4B,QAAOvyB,KAAK2kB,MAAQ+lC,EAAO3zB,WAC/B2zB,EAAOjsC,OANRisC,EAAOn4B,OACTvP,MAAMwmC,2BAA2BryB,EAAqBuzB,EAAOn4B,OAExD0e,EAIX,CACA0Z,eAAelsC,EAAMoI,GAMnB,GALApI,EAAOuE,MAAM2nC,eAAelsC,EAAMoI,GAC9B7mB,KAAKktB,IAAI,MACXzO,EAAKi/B,UAAW,EAChB19C,KAAKg6B,iBAAiBvb,IAEpBze,KAAK2qB,MAAM,IAAK,CAClB,MAAMigC,EAAe5qD,KAAK25B,YAAY9S,GAGtC,OAFA+jC,EAAapb,WAAa/wB,EAC1BmsC,EAAatI,eAAiBtiD,KAAKq1D,wBAC5Br1D,KAAK65B,WAAW+wB,EAAc,uBACvC,CACA,OAAOnsC,CACT,CACAssC,uBAAuBtsC,GACrB,IAAKze,KAAK2kB,MAAM4C,kBAAoBvnB,KAAK41B,aAAa,KACpD,OAAO51B,KAAK29D,oBAAmB,IAAM39D,KAAK+qD,uBAAuBtsC,KAEnE,MAAMoI,EAAW7mB,KAAK2kB,MAAMkC,SACtBs6C,EAAYnhE,KAAKk2B,cAAc,KACrC,GAAIirC,IAAcnhE,KAAK41B,aAAa,OAAS51B,KAAKopD,gCAChD,MAAMppD,KAAKwiB,MAAM6xB,GAASqB,kCAAmC,CAC3DnxC,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MACMs3B,EADexyC,EAAkB3L,KAAK2kB,MAAM1T,OACdjR,KAAKg+D,+BAAiCh7C,MAAM+nC,uBAAuBtsC,GACvG,OAAK0/B,IACoB,2BAArBA,EAAYltC,MAA0D,2BAArBktC,EAAYltC,MAAqCkwD,KACpG1iD,EAAKglC,WAAa,QAEhB0d,IACFnhE,KAAK+5B,mBAAmBokB,EAAat3B,GACrCs3B,EAAY6G,SAAU,GAEjB7G,GARkB,IAS3B,CACAmN,aAAa7sC,EAAM8sC,EAAaC,EAAYvpC,GAC1C,KAAMspC,GAAeC,IAAexrD,KAAK41B,aAAa,KACpD,OAEF5S,MAAMsoC,aAAa7sC,EAAM8sC,EAAaC,EAAY/sC,EAAKumC,QAx7PvC,KARD5kC,MAi8Pf,MAAMq8B,EAAiBz8C,KAAK+1D,yBAAyB/1D,KAAK+yD,4BACtDtW,IAAgBh+B,EAAKg+B,eAAiBA,EAC5C,CACA2kB,6BAA6B3iD,GACtBA,EAAKi/B,WACJ19C,KAAKktB,IAAI,IACXzO,EAAK4iD,UAAW,EACPrhE,KAAKktB,IAAI,MAClBzO,EAAKi/B,UAAW,IAGpB,MAAMzsC,EAAOjR,KAAK62D,2BACd5lD,IAAMwN,EAAK6jC,eAAiBrxC,EAClC,CACA+rC,mBAAmBv+B,GAOjB,GANAze,KAAKohE,6BAA6B3iD,GAC9Bze,KAAK2kB,MAAM4C,oBAAsB9I,EAAKs4C,UAAat4C,EAAK6jC,iBAAmBtiD,KAAK2qB,MAAM,KACxF3qB,KAAKwiB,MAAM6xB,GAASa,gCAAiC,CACnD3wC,GAAIvE,KAAK2kB,MAAMkC,WAGfpI,EAAKu6C,UAAYh5D,KAAK2qB,MAAM,IAAK,CACnC,MAAM,IACJne,GACEiS,EACJze,KAAKwiB,MAAM6xB,GAASG,+BAAgC,CAClDjwC,GAAIvE,KAAK2kB,MAAMkC,SACf4tB,aAA2B,eAAbjoC,EAAIyE,MAA0BwN,EAAKk6B,SAAsB,IAAI34C,KAAK0lB,MAAMkD,MAAMpc,EAAIgB,MAAOhB,EAAIiB,QAA/CjB,EAAIjL,MAEpE,CACA,OAAOyhB,MAAMg6B,mBAAmBv+B,EAClC,CACAy+B,0BAA0Bz+B,GAaxB,OAZIA,EAAKu6C,UACPh5D,KAAKwiB,MAAM6xB,GAAS4C,0BAA2B,CAC7C1yC,GAAIka,IAGJA,EAAKq1C,eACP9zD,KAAKwiB,MAAM6xB,GAAS6C,+BAAgC,CAClD3yC,GAAIka,EACJ42B,SAAU52B,EAAKq1C,gBAGnB9zD,KAAKohE,6BAA6B3iD,GAC3BuE,MAAMk6B,0BAA0Bz+B,EACzC,CACA6iD,2BAA2B7iD,GAOzB,OANAze,KAAKohE,6BAA6B3iD,GAC9BA,EAAKi/B,UACP19C,KAAKwiB,MAAM6xB,GAASO,yBAA0B,CAC5CrwC,GAAIka,IAGDuE,MAAMs+C,2BAA2B7iD,EAC1C,CACA29B,gBAAgBC,EAAW9J,EAAQ/c,EAAaD,EAAS+mB,EAAeC,GACtE,MAAME,EAAiBz8C,KAAK+1D,yBAAyB/1D,KAAK8yD,sBACtDrW,GAAkBH,GACpBt8C,KAAKwiB,MAAM6xB,GAASW,6BAA8B,CAChDzwC,GAAIk4C,IAGR,MAAM,QACJuI,GAAU,EAAK,KACf3zC,GACEkhC,GACAyS,GAAqB,QAAT3zC,GAA2B,QAATA,GAChCrR,KAAKwiB,MAAM6xB,GAASY,gBAAiB,CACnC1wC,GAAIguC,EACJlhC,SAGAorC,IAAgBlK,EAAOkK,eAAiBA,GAC5Cz5B,MAAMo5B,gBAAgBC,EAAW9J,EAAQ/c,EAAaD,EAAS+mB,EAAeC,EAChF,CACAkQ,uBAAuBpQ,EAAW9J,EAAQ/c,EAAaD,GACrD,MAAMknB,EAAiBz8C,KAAK+1D,yBAAyB/1D,KAAK8yD,sBACtDrW,IAAgBlK,EAAOkK,eAAiBA,GAC5Cz5B,MAAMypC,uBAAuBpQ,EAAW9J,EAAQ/c,EAAaD,EAC/D,CACAgsC,iCAAiC9iD,EAAMpN,GACnB,oBAAdoN,EAAKxN,OACS,qBAAdwN,EAAKxN,MAAgCwN,EAAKlQ,MAAM4tC,OACpDn5B,MAAMu+C,iCAAiC9iD,EAAMpN,EAC/C,CACAq7C,gBAAgBjuC,GACduE,MAAM0pC,gBAAgBjuC,GAClBA,EAAKw7B,aAAej6C,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,OACnDlM,EAAKkuC,oBAAsB3sD,KAAKu+D,oCAE9Bv+D,KAAKk2B,cAAc,OACrBzX,EAAKwlC,WAAajkD,KAAK07D,sBAAsB,cAEjD,CACAlpB,kBAAkB5G,EAAM/kB,EAAU2O,EAAaD,EAAS6nB,EAAWC,EAAYlmB,GAC7E,MAAMslB,EAAiBz8C,KAAK+1D,yBAAyB/1D,KAAK8yD,sBAE1D,OADIrW,IAAgB7Q,EAAK6Q,eAAiBA,GACnCz5B,MAAMwvB,kBAAkB5G,EAAM/kB,EAAU2O,EAAaD,EAAS6nB,EAAWC,EAAYlmB,EAC9F,CACA82B,oBAAoBxvC,EAAM69B,GACxB,MAAMG,EAAiBz8C,KAAK+1D,yBAAyB/1D,KAAK8yD,sBACtDrW,IAAgBh+B,EAAKg+B,eAAiBA,GAC1Cz5B,MAAMirC,oBAAoBxvC,EAAM69B,EAClC,CACA4R,WAAWpD,EAAMz5C,GACf2R,MAAMkrC,WAAWpD,EAAMz5C,GACF,eAAjBy5C,EAAKloC,GAAG3R,OAA0BjR,KAAKq2B,yBAA2Br2B,KAAKktB,IAAI,MAC7E49B,EAAKuW,UAAW,GAElB,MAAMpwD,EAAOjR,KAAK62D,2BACd5lD,IACF65C,EAAKloC,GAAG0/B,eAAiBrxC,EACzBjR,KAAKg6B,iBAAiB8wB,EAAKloC,IAE/B,CACAurC,kCAAkC1vC,EAAMy0B,GAItC,OAHIlzC,KAAK2qB,MAAM,MACblM,EAAK4jC,WAAariD,KAAKq1D,yBAElBryC,MAAMmrC,kCAAkC1vC,EAAMy0B,EACvD,CACA8W,iBAAiB7yB,EAAqBk3B,GACpC,IAAIC,EAAME,EAAOgT,EAAW/S,EAAOgT,EAAYC,EAAOC,EACtD,IAAIh9C,EACAg6B,EACAijB,EAiBAnlB,EAhBJ,GAAIz8C,KAAKsjB,UAAU,SAAWtjB,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,KAAM,CAGhE,GAFAhG,EAAQ3kB,KAAK2kB,MAAM3H,QACnB2hC,EAAM3+C,KAAK22B,UAAS,IAAM3T,MAAMgnC,iBAAiB7yB,EAAqBk3B,IAAiB1pC,IAClFg6B,EAAIpsB,MAAO,OAAOosB,EAAIlgC,KAC3B,MAAM,QACJzR,GACEhN,KAAK2kB,MACH4pC,EAAiBvhD,EAAQA,EAAQF,OAAS,GAC5CyhD,IAAmBtuD,EAAME,QAAUouD,IAAmBtuD,EAAMI,QAC9D2M,EAAQC,KAEZ,CACA,KAAsB,OAAfqhD,EAAO3P,IAAgB2P,EAAK/7B,OAAWvyB,KAAK2qB,MAAM,KACvD,OAAO3H,MAAMgnC,iBAAiB7yB,EAAqBk3B,GAEhD1pC,GAASA,IAAU3kB,KAAK2kB,QAAOA,EAAQ3kB,KAAK2kB,MAAM3H,SAEvD,MAAM/Y,EAAQjE,KAAK22B,UAAS+3B,IAC1B,IAAI1C,EAAa6V,EACjBplB,EAAiBz8C,KAAKg2D,sBAAsBh2D,KAAK8yD,sBACjD,MAAM7hB,EAAOjuB,MAAMgnC,iBAAiB7yB,EAAqBk3B,GAQzD,OAPkB,4BAAdpd,EAAKhgC,MAAoE,OAA7B+6C,EAAc/a,EAAKtb,QAAkBq2B,EAAYlc,gBAC/F4e,IAE4F,KAAnD,OAArCmT,EAAkBplB,QAA0B,EAASolB,EAAgBh8C,OAAO/Y,SAChF9M,KAAKi6B,2BAA2BgX,EAAMwL,GAExCxL,EAAKwL,eAAiBA,EACfxL,CAAI,GACVtsB,GACH,IAAK1gB,EAAMsuB,QAAUtuB,EAAMgzB,QAEzB,OADIwlB,GAAgBz8C,KAAK8hE,6BAA6BrlB,GAC/Cx4C,EAAMwa,KAEf,IAAKkgC,IACHxK,IAAQn0C,KAAKsjB,UAAU,QACvBs+C,EAAW5hE,KAAK22B,UAAS,IAAM3T,MAAMgnC,iBAAiB7yB,EAAqBk3B,IAAiB1pC,IACvFi9C,EAASrvC,OAAO,OAAOqvC,EAASnjD,KAEvC,GAAqB,OAAhB+vC,EAAQ7P,IAAgB6P,EAAM/vC,KAEjC,OADAze,KAAK2kB,MAAQg6B,EAAI5nB,UACV4nB,EAAIlgC,KAEb,GAAIxa,EAAMwa,KAGR,OAFAze,KAAK2kB,MAAQ1gB,EAAM8yB,UACf0lB,GAAgBz8C,KAAK8hE,6BAA6BrlB,GAC/Cx4C,EAAMwa,KAEf,GAA8B,OAAzB+iD,EAAYI,IAAqBJ,EAAU/iD,KAE9C,OADAze,KAAK2kB,MAAQi9C,EAAS7qC,UACf6qC,EAASnjD,KAElB,GAAqB,OAAhBgwC,EAAQ9P,IAAgB8P,EAAMz3B,OAAQ,MAAM2nB,EAAIpsB,MACrD,GAAItuB,EAAM+yB,OAAQ,MAAM/yB,EAAMsuB,MAC9B,GAA+B,OAA1BkvC,EAAaG,IAAqBH,EAAWzqC,OAAQ,MAAM4qC,EAASrvC,MACzE,MAAwB,OAAhBmvC,EAAQ/iB,QAAe,EAAS+iB,EAAMnvC,QAAUtuB,EAAMsuB,QAAqC,OAA1BovC,EAAaC,QAAoB,EAASD,EAAWpvC,MAChI,CACAuvC,6BAA6BrjD,GAC3B,IAAImxB,EACuB,IAAvBnxB,EAAKoH,OAAO/Y,QAAiB2R,EAAKoH,OAAO,GAAGgwC,YAA8C,OAA7BjmB,EAAcnxB,EAAKkX,QAAkBia,EAAYmyB,gBAAkB/hE,KAAK2jB,gBAAgB,aAAc,6BACrK3jB,KAAKwiB,MAAM6xB,GAAS+C,uBAAwB,CAC1C7yC,GAAIka,GAGV,CACA+6C,gBAAgBriC,EAAqB6qC,GACnC,OAAKhiE,KAAKsjB,UAAU,QAAUtjB,KAAK2qB,MAAM,IAChC3qB,KAAKy7D,uBAELz4C,MAAMw2C,gBAAgBriC,EAAqB6qC,EAEtD,CACAjT,WAAWtwC,GACT,GAAIze,KAAK2qB,MAAM,IAAK,CAClB,MAAM+/B,EAAS1qD,KAAK22B,UAAS+3B,IAC3B,MAAMrM,EAAariD,KAAKs2D,qCAAqC,IAE7D,OADIt2D,KAAKo2B,sBAAyBp2B,KAAK2qB,MAAM,KAAK+jC,IAC3CrM,CAAU,IAEnB,GAAIqI,EAAOzzB,QAAS,OACfyzB,EAAO1zB,SACN0zB,EAAOn4B,QAAOvyB,KAAK2kB,MAAQ+lC,EAAO3zB,WACtCtY,EAAK4jC,WAAaqI,EAAOjsC,KAE7B,CACA,OAAOuE,MAAM+rC,WAAWtwC,EAC1B,CACAqzB,6BAA6BY,EAAOnyB,GAClC,KAAc,EAARA,GAAY,OAAOmyB,EACrB1yC,KAAKktB,IAAI,MACXwlB,EAAMgL,UAAW,GAEnB,MAAMzsC,EAAOjR,KAAK62D,2BAGlB,OAFI5lD,IAAMyhC,EAAM4P,eAAiBrxC,GACjCjR,KAAKg6B,iBAAiB0Y,GACfA,CACT,CACAhC,aAAajyB,EAAMkyB,GACjB,OAAQlyB,EAAKxN,MACX,IAAK,uBACH,OAAOjR,KAAK0wC,aAAajyB,EAAK+wB,WAAYmB,GAC5C,IAAK,sBACH,OAAO,EACT,QACE,OAAO3tB,MAAM0tB,aAAajyB,EAAMkyB,GAEtC,CACAjB,aAAajxB,EAAMkxB,GAAQ,GACzB,OAAQlxB,EAAKxN,MACX,IAAK,0BACHjR,KAAKiiE,oCAAoCxjD,EAAMkxB,GAC/C,MACF,IAAK,iBACL,IAAK,wBACL,IAAK,sBACL,IAAK,kBACCA,EACF3vC,KAAK04B,gBAAgBjE,iCAAiC4f,GAAS+D,8BAA+B,CAC5F7zC,GAAIka,IAGNze,KAAKwiB,MAAM6xB,GAAS+D,8BAA+B,CACjD7zC,GAAIka,IAGRze,KAAK0vC,aAAajxB,EAAK+wB,WAAYG,GACnC,MACF,IAAK,uBACEA,GAA4B,yBAAnBlxB,EAAK4xB,KAAKp/B,OACtBwN,EAAK4xB,KAAOrwC,KAAK6oD,oBAAoBpqC,EAAK4xB,OAE9C,QACErtB,MAAM0sB,aAAajxB,EAAMkxB,GAE/B,CACAsyB,oCAAoCxjD,EAAMkxB,GACxC,OAAQlxB,EAAK+wB,WAAWv+B,MACtB,IAAK,iBACL,IAAK,wBACL,IAAK,sBACL,IAAK,kBACL,IAAK,0BACHjR,KAAK0vC,aAAajxB,EAAK+wB,WAAYG,GACnC,MACF,QACE3sB,MAAM0sB,aAAajxB,EAAMkxB,GAE/B,CACAY,sBAAsB9xB,EAAMy1B,GAC1B,OAAQz1B,EAAKxN,MACX,IAAK,iBACL,IAAK,wBACL,IAAK,kBACL,IAAK,sBACHjR,KAAKuwC,sBAAsB9xB,EAAK+wB,YAAY,GAC5C,MACF,QACExsB,MAAMutB,sBAAsB9xB,EAAMy1B,GAExC,CACArB,YAAY5hC,EAAM6hC,EAA2BC,GAC3C,OApuEYzkC,EAouEE,CACZ4zD,sBAAsB,EACtBC,oBAAqB,YACrBC,oBAAqB,aACrBC,gBAAiBtvB,IAAY1yB,KAAcyyB,IAA8B,CAAC,cAAc,GACxFwvB,uBAAwBvvB,IAAY1yB,KAAcyyB,IAA8B,CAAC,cAAc,GAC/FyvB,iBAAkBxvB,IAAY1yB,KAAcyyB,IAA8B,CAAC,cAAc,IA1uEvEtmC,EA2uEjByE,EA3uEyBrE,OAAOqmC,eAAeC,KAAK5kC,EAAQ9B,IAAQ8B,EAAO9B,IA2uElEwW,MAAM6vB,YAAY5hC,EAAM6hC,EAA2BC,GA3uEpD,IAACzkC,EAAQ9B,CA4uEtB,CACA6kC,mBACE,OACO,KADCrxC,KAAK2kB,MAAM1T,KAERjR,KAAKwxC,iBAAgB,GAErBxuB,MAAMquB,kBAEnB,CACAmxB,6BAA6BvxB,GAC3B,GAAIjxC,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAAK,CACpC,MAAMglC,EAAgB3vD,KAAKu+D,mCAC3B,GAAIv+D,KAAK2qB,MAAM,IAAK,CAClB,MAAMuoB,EAAOlwB,MAAMw/C,6BAA6BvxB,GAEhD,OADAiC,EAAKuJ,eAAiBkT,EACfzc,CACT,CACAlzC,KAAK+V,WAAW,KAAM,GACxB,CACA,OAAOiN,MAAMw/C,6BAA6BvxB,EAC5C,CACAc,oBAAoBN,GAClB,OAAIzxC,KAAK2kB,MAAM4C,kBAAoBvnB,KAAK2qB,MAAM,KAAO3qB,KAAK2tB,sBAAwB8jB,GAChFzxC,KAAK0iB,QACE,GAEAM,MAAM+uB,oBAAoBN,EAErC,CACA4a,gBACE,OAAOrsD,KAAK2qB,MAAM,KAAO3H,MAAMqpC,eACjC,CACAC,kBACE,OAAOtsD,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3H,MAAMspC,iBACnD,CACA7Z,kBAAkB5rB,EAAUwpB,GAC1B,MAAM5xB,EAAOuE,MAAMyvB,kBAAkB5rB,EAAUwpB,GAM/C,MALkB,sBAAd5xB,EAAKxN,MAAgCwN,EAAK6jC,gBAAkB7jC,EAAKm0B,MAAMplC,MAAQiR,EAAK6jC,eAAe90C,OACrGxN,KAAKwiB,MAAM6xB,GAASwD,0BAA2B,CAC7CtzC,GAAIka,EAAK6jC,iBAGN7jC,CACT,CACA+P,iBAAiBjf,GACf,GAAIvP,KAAK2kB,MAAMyC,OAAQ,CACrB,GAAa,KAAT7X,EAEF,YADAvP,KAAKsvB,SAAS,GAAI,GAGpB,GAAa,KAAT/f,EAEF,YADAvP,KAAKsvB,SAAS,GAAI,EAGtB,CACAtM,MAAMwL,iBAAiBjf,EACzB,CACAywD,eACE,MAAM,KACJ/uD,GACEjR,KAAK2kB,MACI,KAAT1T,GACFjR,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAKmwB,gBACa,KAATlf,IACTjR,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAKowB,eAET,CACAouC,YACE,MAAM,KACJvtD,GACEjR,KAAK2kB,MACT,OAAa,KAAT1T,GACFjR,KAAK2kB,MAAMzH,KAAO,EAClBld,KAAKsvB,SAAS,GAAI,GACX,IAEFre,CACT,CACAk/B,iBAAiBK,EAAUN,EAAkBP,GAC3C,IAAK,IAAIljC,EAAI,EAAGA,EAAI+jC,EAAS1jC,OAAQL,IAAK,CACxC,MAAMwkC,EAAOT,EAAS/jC,GACsB,0BAA/B,MAARwkC,OAAe,EAASA,EAAKhgC,QAChCu/B,EAAS/jC,GAAKzM,KAAK6oD,oBAAoB5X,GAE3C,CACAjuB,MAAMmtB,iBAAiBK,EAAUN,EAAkBP,EACrD,CACAkZ,oBAAoBpqC,GAGlB,OAFAA,EAAK+wB,WAAW8S,eAAiB7jC,EAAK6jC,eACtCtiD,KAAKg6B,iBAAiBvb,EAAK+wB,WAAY/wB,EAAK6jC,eAAexlC,IAAIrP,KACxDgR,EAAK+wB,UACd,CACAwf,iBAAiBnpC,GACf,OAAI7lB,KAAK2qB,MAAM,IACN9E,EAAO+qB,OAAMK,GAAQjxC,KAAK0wC,aAAaO,GAAM,KAE/CjuB,MAAMgsC,iBAAiBnpC,EAChC,CACAuoC,wBACE,OAAOpuD,KAAK2qB,MAAM,KAAO3H,MAAMorC,uBACjC,CACAqU,0BACE,OAAOz/C,MAAMy/C,2BAA6BziE,KAAKqgE,iBACjD,CACAlgB,gCAAgC1hC,GAC9B,GAAIze,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAAK,CACpC,MAAMglC,EAAgB3vD,KAAKu9D,oBAAmB,IAAMv9D,KAAKu+D,qCACrD5O,IAAelxC,EAAKg+B,eAAiBkT,EAC3C,CACA,OAAO3sC,MAAMm9B,gCAAgC1hC,EAC/C,CACAikD,kCAAkCnwB,GAChC,MAAMowB,EAAY3/C,MAAM0/C,kCAAkCnwB,GAEpDqwB,EADS5iE,KAAKy7C,6BAA6BlJ,GACvB,GAE1B,OADwBqwB,GAAc5iE,KAAKwsD,YAAYoW,GAC9BD,EAAY,EAAIA,CAC3C,CACAE,wBACE,MAAMnwB,EAAQ1vB,MAAM6/C,wBACd5xD,EAAOjR,KAAK62D,2BAKlB,OAJI5lD,IACFyhC,EAAM4P,eAAiBrxC,EACvBjR,KAAKg6B,iBAAiB0Y,IAEjBA,CACT,CACAirB,mBAAmB3B,GACjB,MAAM8G,EAAsB9iE,KAAK2kB,MAAM4C,iBACvCvnB,KAAK2kB,MAAM4C,kBAAmB,EAC9B,IACE,OAAOy0C,GACT,CAAE,QACAh8D,KAAK2kB,MAAM4C,iBAAmBu7C,CAChC,CACF,CACAjF,WAAWp/C,EAAM8sC,EAAaC,GAC5B,MAAMuX,EAAqB/iE,KAAK2kB,MAAM6C,gBACtCxnB,KAAK2kB,MAAM6C,kBAAoB/I,EAAKu6C,SACpC,IACE,OAAOh2C,MAAM66C,WAAWp/C,EAAM8sC,EAAaC,EAC7C,CAAE,QACAxrD,KAAK2kB,MAAM6C,gBAAkBu7C,CAC/B,CACF,CACA3E,2BAA2B3/C,EAAMuzB,GAC/B,GAAIhyC,KAAK2qB,MAAM,IAEb,OADAlM,EAAKu6C,UAAW,EACTh5D,KAAKgjE,oBAAoBhxB,EAAYhyC,KAAK69D,WAAWp/C,GAAM,GAAM,IACnE,GAAIze,KAAK41B,aAAa,MAC3B,IAAK51B,KAAKs2B,wBAKR,OAJA7X,EAAKu6C,UAAW,EAChBh5D,KAAKwiB,MAAM6xB,GAASyC,yCAA0C,CAC5DvyC,GAAIka,IAECze,KAAK67D,4BAA4Bp9C,QAG1Cze,KAAK+V,WAAW,KAAM,GAE1B,CACAymC,YAAY/9B,EAAM+W,EAAaD,EAAS+mB,EAAej7B,EAAkBpQ,EAAM6rC,GAC7E,MAAMvK,EAASvvB,MAAMw5B,YAAY/9B,EAAM+W,EAAaD,EAAS+mB,EAAej7B,EAAkBpQ,EAAM6rC,GACpG,GAAIvK,EAAOymB,WACOh5D,KAAKsjB,UAAU,UAAcivB,EAAOhkC,MAAM4tC,KAAS5J,EAAO4J,MAC7D,CACX,MAAM,IACJ3vC,GACE+lC,EACJvyC,KAAKwiB,MAAM6xB,GAASC,gCAAiC,CACnD/vC,GAAIguC,EACJgC,WAAyB,eAAb/nC,EAAIyE,MAA0BshC,EAAOoG,SAAsB,IAAI34C,KAAK0lB,MAAMkD,MAAMpc,EAAIgB,MAAOhB,EAAIiB,QAA/CjB,EAAIjL,MAEpE,CAEF,OAAOgxC,CACT,CACAqjB,2BAEE,OADiB51D,KAAKwxC,kBACNjwC,IAClB,CACA0hE,8BACE,QAASjjE,KAAK2jB,gBAAgB,aAAc,MAC9C,CACAu2B,QAIE,OAHIl6C,KAAKijE,gCACPjjE,KAAK2kB,MAAM4C,kBAAmB,GAEzBvE,MAAMk3B,OACf,CACAgpB,gBAIE,OAHIljE,KAAKijE,gCACPjjE,KAAK2kB,MAAM4C,kBAAmB,GAEzBvE,MAAMkgD,eACf,CACAC,qBAAqB1kD,EAAM2kD,EAAUC,EAAgB3V,GACnD,OAAK0V,GAAY1V,GACf1tD,KAAKsjE,mCAAmC7kD,GAAM,EAAO4kD,GAC9CrjE,KAAK65B,WAAWpb,EAAM,qBAE/BA,EAAKglC,WAAa,QACXzgC,MAAMmgD,qBAAqB1kD,EAAM2kD,EAAUC,EAAgB3V,GACpE,CACAH,qBAAqBJ,EAAWK,EAAkBC,EAAoBC,EAAiBzrC,GACrF,OAAKurC,GAAoBE,GACvB1tD,KAAKsjE,mCAAmCnW,GAAW,EAAMM,GAClDztD,KAAK65B,WAAWszB,EAAW,qBAEpCA,EAAUtvB,WAAa,QAChB7a,MAAMuqC,qBAAqBJ,EAAWK,EAAkBC,EAAoBC,EAAiBD,EAh7QhF,KAg7Q2HvtC,IACjJ,CACAojD,mCAAmC7kD,EAAM8kD,EAAUC,GACjD,MAAMC,EAAcF,EAAW,WAAa,QACtCG,EAAeH,EAAW,QAAU,WAC1C,IACII,EADAC,EAAWnlD,EAAKglD,GAEhBI,GAAmB,EACnBC,GAAoB,EACxB,MAAMhnD,EAAM8mD,EAAS9mD,IAAItP,MACzB,GAAIxN,KAAK41B,aAAa,IAAK,CACzB,MAAMmuC,EAAU/jE,KAAKwxC,kBACrB,GAAIxxC,KAAK41B,aAAa,IAAK,CACzB,MAAMouC,EAAWhkE,KAAKwxC,kBAClB5lC,EAA2B5L,KAAK2kB,MAAM1T,OACxC4yD,GAAmB,EACnBD,EAAWG,EACXJ,EAAYJ,EAAWvjE,KAAKwxC,kBAAoBxxC,KAAKikE,wBACrDH,GAAoB,IAEpBH,EAAYK,EACZF,GAAoB,EAExB,MAAWl4D,EAA2B5L,KAAK2kB,MAAM1T,OAC/C6yD,GAAoB,EACpBH,EAAYJ,EAAWvjE,KAAKwxC,kBAAoBxxC,KAAKikE,0BAErDJ,GAAmB,EACnBD,EAAWG,EAEf,MAAWn4D,EAA2B5L,KAAK2kB,MAAM1T,QAC/C4yD,GAAmB,EACfN,GACFK,EAAW5jE,KAAKwxC,iBAAgB,GAC3BxxC,KAAK41B,aAAa,KACrB51B,KAAKguD,kBAAkB4V,EAASriE,KAAMqiE,EAAS9mD,IAAItP,OAAO,GAAM,IAGlEo2D,EAAW5jE,KAAKikE,yBAGhBJ,GAAoBL,GACtBxjE,KAAKwiB,MAAM+gD,EAAWlvB,GAAS2D,gCAAkC3D,GAAS0D,gCAAiC,CACzGxzC,GAAIuY,IAGR2B,EAAKglD,GAAeG,EACpBnlD,EAAKilD,GAAgBC,EAErBllD,EADgB8kD,EAAW,aAAe,cAC1BM,EAAmB,OAAS,QACxCC,GAAqB9jE,KAAKk2B,cAAc,MAC1CzX,EAAKilD,GAAgBH,EAAWvjE,KAAKwxC,kBAAoBxxC,KAAKikE,yBAE3DxlD,EAAKilD,KACRjlD,EAAKilD,GAAgBvqC,GAAgB1a,EAAKglD,KAExCF,GACFvjE,KAAKyzC,gBAAgBh1B,EAAKilD,GAAeG,EAz+QvB,KAy+QgE3jD,GAEtF,GAmYAgkD,YAnIgBjqB,GAAc,cAA+BA,EAC7DkqB,mBACE,GAAInkE,KAAK2qB,MAAM,IAAK,CAClB,MAAMy5C,EAAsBpkE,KAAK2kB,MAAMkC,SACjCpI,EAAOze,KAAK05B,YAElB,GADA15B,KAAK0iB,OACD/W,EAAkB3L,KAAK2kB,MAAM1T,MAAO,CACtC,MAAM1P,EAAOvB,KAAKqkE,sBACZpwB,EAAaj0C,KAAKmoD,iBAAiB1pC,EAAMld,GAE/C,GADA0yC,EAAWhjC,KAAO,wBACdjR,KAAK2qB,MAAM,IACb,OAAOspB,CAEX,CACAj0C,KAAK+V,WAAWquD,EAClB,CACF,CACAxkB,cAAczoB,GACZ,OAAOn3B,KAAKmkE,oBAAsBnhD,MAAM48B,cAAczoB,EACxD,GAiHAmtC,aAzTiBrqB,GAAc,cAAsCA,EACrEsqB,iBAAiBjrC,GACf,GAAIt5B,KAAK2qB,MAAM,KAAM,CACnB,MAAMlM,EAAOze,KAAK05B,YAMlB,OALA15B,KAAK0iB,OACL1iB,KAAKwkE,gBACL/lD,EAAKld,KAAOyhB,MAAMwuB,iBAAgB,GAClCxxC,KAAKwkE,gBACLxkE,KAAK02B,OAAO,KACL12B,KAAKykE,kBAAkBhmD,EAAM6a,EACtC,CACF,CACAmrC,kBAAkBhmD,EAAM6a,GACtB,MAAMorC,KAAgBjmD,EAAK6a,cAA8B,gBAAd7a,EAAKxN,MAEhD,OADAwN,EAAK6a,aAAeA,EACborC,EAAajmD,EAAOze,KAAK65B,WAAWpb,EAAM,cACnD,CACA+P,iBAAiBjf,GACF,KAATA,GAA6D,KAA9CvP,KAAK0lB,MAAMC,WAAW3lB,KAAK2kB,MAAMzH,IAAM,GACxDld,KAAKsvB,SAAS,IAAK,GAEnBtM,MAAMwL,iBAAiBjf,EAE3B,CACAqwC,cAAczoB,GACZ,OAAOn3B,KAAKukE,iBAAiB,eAAiBvhD,MAAM48B,cAAczoB,EACpE,CACAqa,gBAAgBuT,GACd,OAAO/kD,KAAKukE,iBAAiB,eAAiBvhD,MAAMwuB,gBAAgBuT,EACtE,CACAiJ,kBAAkBtuC,EAAMmH,EAAUo5C,EAAetvB,QAClChyC,IAAT+gB,GACFsD,MAAMgrC,kBAAkBtuC,EAAMmH,EAAUo5C,EAAetvB,EAE3D,CACAU,mBACE,OAAOrxC,KAAKukE,iBAAiB,YAAcvhD,MAAMquB,kBACnD,CACAwB,YAAY5hC,EAAMm7C,EAAiBrZ,GACjC,MAAgB,gBAAT9hC,GAA0B+R,MAAM6vB,YAAY5hC,EAAMm7C,EAAiBrZ,EAC5E,CACArD,aAAajxB,EAAMkxB,GACblxB,GAAsB,gBAAdA,EAAKxN,MAAgD,eAAtBwN,EAAK6a,aAC9C7a,EAAK6a,aAAe,UAEpBtW,MAAM0sB,aAAajxB,EAAMkxB,EAE7B,CACAg1B,0BAA0Bx7C,EAAIjM,GAC5B,QAAI8F,MAAM2hD,0BAA0Bx7C,EAAIjM,IAIjB,MADLld,KAAKqtB,YACTpc,IAIhB,CACA2zD,oBAAoBnmD,EAAMomD,GACpBpmD,EAAK5d,OAA6B,gBAApB4d,EAAK5d,MAAMoQ,MAC7B+R,MAAM4hD,oBAAoBnmD,EAAMomD,EAClC,CACA1b,yBAAyB1qC,EAAMwyB,GAC7B,GAAkB,gBAAdA,EAAKhgC,MAA0BggC,EAAKtb,OAASsb,EAAKtb,MAAMma,cAC1D,OAAO9sB,MAAMmmC,yBAAyB1qC,EAAMwyB,GAE9C,GAAIjxC,KAAK2qB,MAAM,IAAK,CAClB,MAAM0wB,EAAO58B,EAIb,OAHA48B,EAAKx6C,MAAQb,KAAKykE,kBAAkBxzB,EAAM,cAC1CjxC,KAAK0iB,OACL24B,EAAKc,KAAOn5B,MAAM8hD,kDACX9kE,KAAK65B,WAAWwhB,EAAM,mBAC/B,CAGA,OAFAr7C,KAAKw2B,YACL/X,EAAKld,KAAO0vC,EAAK1vC,KACVvB,KAAKykE,kBAAkBhmD,EAAM,YACtC,CACAsmD,WAAWlpB,EAAiBmpB,EAAuBjpB,GACjD,OAAO/7C,KAAKukE,iBAAiB,mBAAqBvhD,MAAM+hD,WAAWlpB,EAAiBmpB,EAAuBjpB,EAC7G,CACAkpB,gBAAgBC,GACd,OAAOllE,KAAKukE,iBAAiB,eAAiBvhD,MAAMiiD,gBAAgBC,EACtE,CACArH,WAAWp/C,EAAM8sC,EAAaC,GAC5B,MAAMv6C,EAAOs6C,EAAc,mBAAqB,kBAChDvrD,KAAK0iB,OACL,MAAMyiD,EAAYnlE,KAAK2kB,MAAM+B,OACvBhb,EAAc1L,KAAKukE,iBAAiB,cAC1C,GAAI74D,EAAa,CACf,KAAI1L,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,MAAQ3qB,KAAK2qB,MAAM,IAE7C,IAAI6gC,IAAeD,EAGxB,OAFA9sC,EAAKmE,GAAK,KACVnE,EAAK09B,KAAOn8C,KAAKykE,kBAAkB/4D,EAAa,aACzC1L,KAAK65B,WAAWpb,EAAMxN,GAE7B,MAAMjR,KAAKwiB,MAAM02B,GAAkBC,oBAAqB,CACtD50C,GAAIvE,KAAK2kB,MAAMkC,UAEnB,CATEpI,EAAKmE,GAAKlX,CAUd,MACE1L,KAAKsrD,aAAa7sC,EAAM8sC,EAAaC,GAIvC,OAFAxoC,MAAM0pC,gBAAgBjuC,GACtBA,EAAK09B,KAAOn8C,KAAKukE,iBAAiB,cAAgBvhD,MAAMoiD,iBAAiB3mD,EAAKw7B,WAAYkrB,GACnFnlE,KAAK65B,WAAWpb,EAAMxN,EAC/B,CACA8sC,YAAYt/B,EAAMuzB,GAChB,MAAMtmC,EAAc1L,KAAKukE,iBAAiB,cAC1C,IAAK74D,EAAa,OAAOsX,MAAM+6B,YAAYt/B,EAAMuzB,GACjD,IAAKhyC,KAAK41B,aAAa,MAAQ51B,KAAK2qB,MAAM,IAIxC,OAHAlM,EAAKqH,WAAa,GAClBrH,EAAKnS,OAAS,KACdmS,EAAK0/B,YAAcn+C,KAAKykE,kBAAkB/4D,EAAa,eAChD1L,KAAK65B,WAAWpb,EAAM,0BAE/Bze,KAAKovB,aAAa,qBAClB,MAAM+9B,EAAYntD,KAAK05B,YAGvB,OAFAyzB,EAAUlP,SAAWvyC,EACrB+S,EAAKqH,WAAa,CAAC9lB,KAAK65B,WAAWszB,EAAW,2BACvCnqC,MAAM+6B,YAAYt/B,EAAMuzB,EACjC,CACAqX,2BACE,GAAIrpD,KAAK2qB,MAAM,IAAK,CAClB,MAAMjI,EAAO1iB,KAAKwtB,iBAClB,GAAIxtB,KAAK61B,qBAAqBnT,EAAM,SAC9B1iB,KAAK0lB,MAAM2/C,WAAWp5D,EAAe,KAAMjM,KAAKytB,oBAAoB/K,EAAO,IAC7E,OAAO,CAGb,CACA,OAAOM,MAAMqmC,0BACf,CACAic,iCAAiC7mD,GAC/B,SAAIA,EAAKqH,YAAcrH,EAAKqH,WAAWhZ,OAAS,IAGzCkW,MAAMsiD,iCAAiC7mD,EAChD,CACA8mD,YAAY9mD,GACV,MAAM,WACJqH,GACErH,EACc,MAAdqH,GAAsBA,EAAWhZ,SACnC2R,EAAKqH,WAAaA,EAAWjX,QAAO4P,GAA+B,gBAAvBA,EAAKw/B,SAAShtC,QAE5D+R,MAAMuiD,YAAY9mD,GAClBA,EAAKqH,WAAaA,CACpB,CACAq9B,YAAY1kC,GACV,MAAM/S,EAAc1L,KAAKukE,iBAAiB,cAC1C,IAAK74D,EAAa,OAAOsX,MAAMmgC,YAAY1kC,GAE3C,GADAA,EAAKqH,WAAa,IACb9lB,KAAK41B,aAAa,MAAQ51B,KAAK2qB,MAAM,IAGxC,OAFAlM,EAAKnS,OAAStM,KAAKykE,kBAAkB/4D,EAAa,iBAClD1L,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,qBAE/B,MAAM0uC,EAAYntD,KAAK45B,gBAAgBluB,GAUvC,OATAyhD,EAAUC,MAAQ1hD,EAClB+S,EAAKqH,WAAWvjB,KAAKvC,KAAK65B,WAAWszB,EAAW,2BAC5CntD,KAAKktB,IAAI,MACWltB,KAAKwlE,8BAA8B/mD,IACrCze,KAAKylE,2BAA2BhnD,IAEtDze,KAAKm2B,iBAAiB,IACtB1X,EAAKnS,OAAStM,KAAK0lE,oBACnB1lE,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,oBAC/B,CACAinD,oBACE,OAAO1lE,KAAKukE,iBAAiB,kBAAoBvhD,MAAM0iD,mBACzD,CACAlB,gBACMxkE,KAAK2kB,MAAMnX,MAAQxN,KAAK2kB,MAAMqD,cAAc3a,OAC9CrN,KAAKwiB,MAAM02B,GAAkBE,gBAAiB,CAC5C70C,GAAIvE,KAAK2kB,MAAMqD,eAGrB,IAwII29C,GAAmB/4D,OAAOC,KAAKmtC,IACrC,MAAM4rB,WAAyBn2B,GAC7Bo2B,WAAWj6B,EAAMk6B,EAAUC,EAAU5uC,GACnC,GAAkB,kBAAdyU,EAAK36B,MAA4BjR,KAAK+3B,eAAe6T,IAASA,EAAK+M,UAAY/M,EAAK0R,UACtF,OAEF,MAAM9wC,EAAMo/B,EAAKp/B,IAEjB,GAAa,eADa,eAAbA,EAAIyE,KAAwBzE,EAAIjL,KAAOiL,EAAI+B,OAC9B,CACxB,GAAIu3D,EAIF,YAHA9lE,KAAKwiB,MAAM3E,EAAOhF,cAAe,CAC/BtU,GAAIiI,IAIJu5D,EAASC,OACP7uC,EACyC,OAAvCA,EAAoBG,iBACtBH,EAAoBG,eAAiB9qB,EAAIsQ,IAAItP,OAG/CxN,KAAKwiB,MAAM3E,EAAOzK,eAAgB,CAChC7O,GAAIiI,KAIVu5D,EAASC,MAAO,CAClB,CACF,CACAC,qBAAqBh1B,EAAMjqB,GACzB,MAAqB,4BAAdiqB,EAAKhgC,MAAsCggC,EAAKzjC,QAAUwZ,CACnE,CACAk8C,gBACEljE,KAAK24B,qBACL34B,KAAKitB,YACL,MAAMgkB,EAAOjxC,KAAK+/C,kBAUlB,OATK//C,KAAK2qB,MAAM,MACd3qB,KAAK+V,aAEP/V,KAAK+lB,4BACLkrB,EAAKltB,SAAW/jB,KAAK2kB,MAAMZ,SAC3BktB,EAAKlqB,OAAS/mB,KAAK2kB,MAAMoC,OACrB/mB,KAAKwB,QAAQjC,SACf0xC,EAAK1xC,OAASS,KAAKT,QAEd0xC,CACT,CACA8O,gBAAgBmmB,EAAY/uC,GAC1B,OAAI+uC,EACKlmE,KAAKmmE,eAAc,IAAMnmE,KAAKomE,oBAAoBjvC,KAEpDn3B,KAAKqmE,YAAW,IAAMrmE,KAAKomE,oBAAoBjvC,IACxD,CACAivC,oBAAoBjvC,GAClB,MAAMtQ,EAAW7mB,KAAK2kB,MAAMkC,SACtBoqB,EAAOjxC,KAAKgqD,iBAAiB7yB,GACnC,GAAIn3B,KAAK2qB,MAAM,IAAK,CAClB,MAAMlM,EAAOze,KAAK25B,YAAY9S,GAE9B,IADApI,EAAKm6B,YAAc,CAAC3H,GACbjxC,KAAKktB,IAAI,KACdzO,EAAKm6B,YAAYr2C,KAAKvC,KAAKgqD,iBAAiB7yB,IAG9C,OADAn3B,KAAK8wC,iBAAiBryB,EAAKm6B,aACpB54C,KAAK65B,WAAWpb,EAAM,qBAC/B,CACA,OAAOwyB,CACT,CACAq1B,2BAA2BnvC,EAAqBk3B,GAC9C,OAAOruD,KAAKmmE,eAAc,IAAMnmE,KAAKgqD,iBAAiB7yB,EAAqBk3B,IAC7E,CACAld,wBAAwBha,EAAqBk3B,GAC3C,OAAOruD,KAAKqmE,YAAW,IAAMrmE,KAAKgqD,iBAAiB7yB,EAAqBk3B,IAC1E,CACA7E,2BAA2BryB,EAAqBovC,GAC9C,IAAIC,EACJrvC,EAAoBK,sBAA+F,OAAtEgvC,EAAkC,MAAfD,OAAsB,EAASA,EAAYzpD,KAAe0pD,EAAmBxmE,KAAK2kB,MAAMkC,QAC1J,CACAmjC,iBAAiB7yB,EAAqBk3B,GACpC,MAAMxnC,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,GAAI7mB,KAAK41B,aAAa,MAChB51B,KAAKw4B,UAAUrD,SAAU,CAC3B,IAAIkb,EAAOrwC,KAAKymE,aAIhB,OAHIpY,IACFhe,EAAOge,EAAenb,KAAKlzC,KAAMqwC,EAAMxpB,IAElCwpB,CACT,CAEF,IAAIq2B,EACAvvC,EACFuvC,GAAsB,GAEtBvvC,EAAsB,IAAI2B,GAC1B4tC,GAAsB,GAExB,MAAM,KACJz1D,GACEjR,KAAK2kB,OACI,KAAT1T,GAAetF,EAAkBsF,MACnCjR,KAAK2kB,MAAMqC,iBAAmBhnB,KAAK2kB,MAAMnX,OAE3C,IAAI6iC,EAAOrwC,KAAK2mE,sBAAsBxvC,GAItC,GAHIk3B,IACFhe,EAAOge,EAAenb,KAAKlzC,KAAMqwC,EAAMxpB,KAt2TlB/mB,EAw2TDE,KAAK2kB,MAAM1T,OAv2TnB,IAAMnR,GAAS,GAu2TW,CACtC,MAAM2e,EAAOze,KAAK25B,YAAY9S,GACxBupB,EAAWpwC,KAAK2kB,MAAMpW,MAE5B,GADAkQ,EAAK2xB,SAAWA,EACZpwC,KAAK2qB,MAAM,IAAK,CAClB3qB,KAAK0vC,aAAaW,GAAM,GACxB5xB,EAAK4xB,KAAOA,EACZ,MAAMu2B,EAAa//C,EAASxZ,MACc,MAAtC8pB,EAAoBG,gBAA0BH,EAAoBG,eAAejqB,OAASu5D,IAC5FzvC,EAAoBG,eAAiB,MAEO,MAA1CH,EAAoBE,oBAA8BF,EAAoBE,mBAAmBhqB,OAASu5D,IACpGzvC,EAAoBE,mBAAqB,MAEF,MAArCF,EAAoBI,eAAyBJ,EAAoBI,cAAclqB,OAASu5D,IAC1F5mE,KAAK64B,0BAA0B1B,GAC/BA,EAAoBI,cAAgB,KAExC,MACE9Y,EAAK4xB,KAAOA,EAOd,OALArwC,KAAK0iB,OACLjE,EAAKm0B,MAAQ5yC,KAAKgqD,mBAClBhqD,KAAKmzC,UAAU9C,EAAM,CACnB+C,GAAIpzC,KAAK65B,WAAWpb,EAAM,0BAErBA,CACT,CAn4TJ,IAA2B3e,EAs4TvB,OAHW4mE,GACT1mE,KAAKk3B,sBAAsBC,GAAqB,GAE3CkZ,CACT,CACAs2B,sBAAsBxvC,GACpB,MAAMtQ,EAAW7mB,KAAK2kB,MAAMkC,SACtBG,EAAmBhnB,KAAK2kB,MAAMqC,iBAC9BiqB,EAAOjxC,KAAK6mE,aAAa1vC,GAC/B,OAAIn3B,KAAKimE,qBAAqBh1B,EAAMjqB,GAC3BiqB,EAEFjxC,KAAKupD,iBAAiBtY,EAAMpqB,EAAUsQ,EAC/C,CACAoyB,iBAAiBtY,EAAMpqB,EAAUsQ,GAC/B,GAAIn3B,KAAKktB,IAAI,IAAK,CAChB,MAAMzO,EAAOze,KAAK25B,YAAY9S,GAK9B,OAJApI,EAAKU,KAAO8xB,EACZxyB,EAAKirC,WAAa1pD,KAAKmxC,0BACvBnxC,KAAK02B,OAAO,IACZjY,EAAKsrC,UAAY/pD,KAAKgqD,mBACfhqD,KAAK65B,WAAWpb,EAAM,wBAC/B,CACA,OAAOwyB,CACT,CACA61B,yBAAyB3vC,GACvB,OAAOn3B,KAAK2qB,MAAM,KAAO3qB,KAAKqyC,mBAAqBryC,KAAKw5D,gBAAgBriC,EAC1E,CACA0vC,aAAa1vC,GACX,MAAMtQ,EAAW7mB,KAAK2kB,MAAMkC,SACtBG,EAAmBhnB,KAAK2kB,MAAMqC,iBAC9BiqB,EAAOjxC,KAAK8mE,yBAAyB3vC,GAC3C,OAAIn3B,KAAKimE,qBAAqBh1B,EAAMjqB,GAC3BiqB,EAEFjxC,KAAK4/D,YAAY3uB,EAAMpqB,GAAW,EAC3C,CACA+4C,YAAYvvB,EAAMwvB,EAAcC,GAC9B,GAAI9/D,KAAK03B,cAAc2Y,GAAO,CAC5B,MAAM9hC,EAAQvO,KAAK23B,iBAAiB0Y,IAChCyvB,GAAW5zD,EAAwB,MAAQlM,KAAKw4B,UAAUnD,QAAUr1B,KAAK2qB,MAAM,MACjF3qB,KAAKwiB,MAAM3E,EAAOrF,oBAAqB,CACrCjU,GAAI8rC,EACJ1iC,eAAgBY,IAGpBvO,KAAK2zB,WAAWD,eAAenlB,EAAO8hC,EAAKvzB,IAAItP,MACjD,CACA,MAAMu5D,EAAK/mE,KAAK2kB,MAAM1T,KACtB,IAx6TqBnR,EAw6TDinE,IAv6TN,IAAMjnE,GAAS,KAu6TDE,KAAKw4B,UAAUnD,QAAUr1B,KAAK2qB,MAAM,KAAM,CACpE,IAAIq8C,EAAO96D,EAAwB66D,GACnC,GAAIC,EAAOlH,EAAS,CAClB,GAAW,KAAPiH,EAAW,CAEb,GADA/mE,KAAKovB,aAAa,oBACdpvB,KAAK2kB,MAAMmD,2BACb,OAAOuoB,EAETrwC,KAAKinE,6BAA6B52B,EAAMwvB,EAC1C,CACA,MAAMphD,EAAOze,KAAK25B,YAAYkmC,GAC9BphD,EAAK4xB,KAAOA,EACZ5xB,EAAK2xB,SAAWpwC,KAAK2kB,MAAMpW,MAC3B,MAAM24D,EAAiB,KAAPH,GAAoB,KAAPA,EACvBI,EAAkB,KAAPJ,EAKjB,GAJII,IACFH,EAAO96D,EAAwB,KAEjClM,KAAK0iB,OACM,KAAPqkD,GAAa/mE,KAAKsjB,UAAU,CAAC,mBAAoB,CACnDwM,SAAU,cAEc,KAApB9vB,KAAK2kB,MAAM1T,MAAejR,KAAKw4B,UAAUtD,SAC3C,MAAMl1B,KAAKwiB,MAAM3E,EAAOpE,iCAAkC,CACxDlV,GAAIvE,KAAK2kB,MAAMkC,WAIrBpI,EAAKm0B,MAAQ5yC,KAAKonE,qBAAqBL,EAAIC,GAC3C,MAAMK,EAAernE,KAAK65B,WAAWpb,EAAMyoD,GAAWC,EAAW,oBAAsB,oBACjFG,EAAStnE,KAAK2kB,MAAM1T,KAC1B,GAAIk2D,IAAwB,KAAXG,GAA4B,KAAXA,IAAkBJ,GAAsB,KAAXI,EAC7D,MAAMtnE,KAAKwiB,MAAM3E,EAAOzG,0BAA2B,CACjD7S,GAAIvE,KAAK2kB,MAAMkC,WAGnB,OAAO7mB,KAAK4/D,YAAYyH,EAAcxH,EAAcC,EACtD,CACF,CA98TJ,IAAyBhgE,EA+8TrB,OAAOuwC,CACT,CACA+2B,qBAAqBL,EAAIC,GACvB,MAAMngD,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,GACO,KADCkgD,EAEJ,OAAQ/mE,KAAK2jB,gBAAgB,mBAAoB,aAC/C,IAAK,OACH,OAAO3jB,KAAKunE,yBAAwB,IAC3BvnE,KAAKwnE,sBAEhB,IAAK,QACH,OAAOxnE,KAAKunE,yBAAwB,KAClC,GAAIvnE,KAAKw4B,UAAUrD,UAAYn1B,KAAK41B,aAAa,KAC/C,MAAM51B,KAAKwiB,MAAM3E,EAAOhC,kBAAmB,CACzCtX,GAAIvE,KAAK2kB,MAAMkC,WAGnB,OAAO7mB,KAAKynE,8BAA8BznE,KAAK0nE,yBAAyBX,EAAIC,GAAOngD,EAAS,IAEhG,IAAK,SACH,OAAO7mB,KAAK2nE,gCAA+B,IAClC3nE,KAAK4nE,wBAAwBZ,KAI1C,OAAOhnE,KAAK0nE,yBAAyBX,EAAIC,EAE/C,CACAU,yBAAyBX,EAAIC,GAC3B,MAAMngD,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,OAAO7mB,KAAK4/D,YAAY5/D,KAAK8mE,2BAA4BjgD,EAx9T1C,KAw9T4EkgD,EAAMC,EAAO,EAAIA,EAC9G,CACAQ,oBACE,IAAIK,EACJ,MAAM,SACJhhD,GACE7mB,KAAK2kB,MACHw3B,EAAOn8C,KAAKgqD,mBAalB,OAZ4BtuC,EAAoCmE,IAAIs8B,EAAKlrC,OACd,OAA7B42D,EAAc1rB,EAAKxmB,QAAkBkyC,EAAY/3B,eAC7E9vC,KAAKwiB,MAAM3E,EAAO3B,wBAAyB,CACzC3X,GAAIsiB,EACJ5V,KAAMkrC,EAAKlrC,OAGVjR,KAAK8nE,yCACR9nE,KAAKwiB,MAAM3E,EAAO5B,gBAAiB,CACjC1X,GAAIsiB,IAGDs1B,CACT,CACA4rB,2BAA2BtpD,GACrBze,KAAK2qB,MAAM,KACb3qB,KAAKwiB,MAAM3E,EAAOvD,mCAAoC,CACpD/V,GAAIka,EAAKrB,UAGf,CACAo8C,gBAAgBriC,EAAqB6qC,GACnC,MAAMn7C,EAAW7mB,KAAK2kB,MAAMkC,SACtBmhD,EAAUhoE,KAAK41B,aAAa,IAClC,GAAIoyC,GAAWhoE,KAAKioE,iBAAkB,CACpCjoE,KAAK0iB,OACL,MAAMuuB,EAAOjxC,KAAKkoE,WAAWrhD,GAE7B,OADKm7C,GAAUhiE,KAAK+nE,2BAA2B92B,GACxCA,CACT,CACA,MAAMk3B,EAASnoE,KAAK2qB,MAAM,IACpBlM,EAAOze,KAAK05B,YAClB,GAhhUmB55B,EAghUDE,KAAK2kB,MAAM1T,KA/gUxB/O,EAAcpC,GA+gUiB,CAClC2e,EAAK2xB,SAAWpwC,KAAK2kB,MAAMpW,MAC3BkQ,EAAK9d,QAAS,EACVX,KAAK2qB,MAAM,KACb3qB,KAAKovB,aAAa,oBAEpB,MAAMg5C,EAAWpoE,KAAK2qB,MAAM,IAI5B,GAHA3qB,KAAK0iB,OACLjE,EAAKrB,SAAWpd,KAAKw5D,gBAAgB,MAAM,GAC3Cx5D,KAAKk3B,sBAAsBC,GAAqB,GAC5Cn3B,KAAK2kB,MAAM+B,QAAU0hD,EAAU,CACjC,MAAM93B,EAAM7xB,EAAKrB,SACA,eAAbkzB,EAAIr/B,KACNjR,KAAKwiB,MAAM3E,EAAOC,aAAc,CAC9BvZ,GAAIka,IAEGze,KAAK43B,yBAAyB0Y,IACvCtwC,KAAKwiB,MAAM3E,EAAO/K,mBAAoB,CACpCvO,GAAIka,GAGV,CACA,IAAK0pD,EAIH,OAHKnG,GACHhiE,KAAK+nE,2BAA2BtpD,GAE3Bze,KAAK65B,WAAWpb,EAAM,kBAEjC,CA5iUJ,IAAuB3e,EA6iUnB,MAAMmxC,EAAOjxC,KAAKqoE,YAAY5pD,EAAM0pD,EAAQhxC,GAC5C,GAAI6wC,EAAS,CACX,MAAM,KACJ/2D,GACEjR,KAAK2kB,MAET,IADmB3kB,KAAKsjB,UAAU,eAAiBxX,EAAwBmF,GAAQnF,EAAwBmF,KAAUjR,KAAK2qB,MAAM,OAC7G3qB,KAAKsoE,mBAItB,OAHAtoE,KAAKwyB,eAAe3U,EAAOjM,uBAAwB,CACjDrN,GAAIsiB,IAEC7mB,KAAKkoE,WAAWrhD,EAE3B,CACA,OAAOoqB,CACT,CACAo3B,YAAY5pD,EAAM0pD,EAAQhxC,GACxB,GAAIgxC,EAAQ,CACV,MAAMI,EAAuB9pD,EAI7B,OAHAze,KAAKmzC,UAAUo1B,EAAqBnrD,SAAU,CAC5Cg2B,GAAIpzC,KAAK65B,WAAW0uC,EAAsB,sBAErC9pD,CACT,CACA,MAAMoI,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,IAAIoqB,EAAOjxC,KAAKwoE,oBAAoBrxC,GACpC,GAAIn3B,KAAKk3B,sBAAsBC,GAAqB,GAAQ,OAAO8Z,EACnE,KAzkUe,KAykUOjxC,KAAK2kB,MAAM1T,OAAUjR,KAAKo2B,sBAAsB,CACpE,MAAM3X,EAAOze,KAAK25B,YAAY9S,GAC9BpI,EAAK2xB,SAAWpwC,KAAK2kB,MAAMpW,MAC3BkQ,EAAK9d,QAAS,EACd8d,EAAKrB,SAAW6zB,EAChBjxC,KAAK0iB,OACL1iB,KAAKmzC,UAAUlC,EAAM,CACnBmC,GAAInC,EAAOjxC,KAAK65B,WAAWpb,EAAM,qBAErC,CACA,OAAOwyB,CACT,CACAu3B,oBAAoBrxC,GAClB,MAAMtQ,EAAW7mB,KAAK2kB,MAAMkC,SACtBG,EAAmBhnB,KAAK2kB,MAAMqC,iBAC9BiqB,EAAOjxC,KAAK4/C,cAAczoB,GAChC,OAAIn3B,KAAKimE,qBAAqBh1B,EAAMjqB,GAC3BiqB,EAEFjxC,KAAKsvD,gBAAgBre,EAAMpqB,EACpC,CACAyoC,gBAAgBjR,EAAMx3B,EAAUy3B,GAC9B,MAAM35B,EAAQ,CACZ45B,qBAAqB,EACrBkqB,gBAAiBzoE,KAAKu/D,qBAAqBlhB,GAC3CI,MAAM,GAER,GACEJ,EAAOr+C,KAAKo+C,eAAeC,EAAMx3B,EAAUy3B,EAAS35B,GACpDA,EAAM8jD,iBAAkB,SAChB9jD,EAAM85B,MAChB,OAAOJ,CACT,CACAD,eAAeC,EAAMx3B,EAAUy3B,EAAS35B,GACtC,MAAM,KACJ1T,GACEjR,KAAK2kB,MACT,IAAK25B,GAAoB,KAATrtC,EACd,OAAOjR,KAAK0oE,UAAUrqB,EAAMx3B,EAAUy3B,EAAS35B,GAC1C,GAAIxY,EAAgB8E,GACzB,OAAOjR,KAAKy/D,8BAA8BphB,EAAMx3B,EAAUlC,GAE5D,IAAI+4B,GAAW,EACf,GAAa,KAATzsC,EAAa,CACf,GAAIqtC,IACFt+C,KAAKwiB,MAAM3E,EAAO3F,sBAAuB,CACvC3T,GAAIvE,KAAK2kB,MAAMkC,WAEgB,KAA7B7mB,KAAK2tB,qBAEP,OADAhJ,EAAM85B,MAAO,EACNJ,EAGX15B,EAAM45B,oBAAsBb,GAAW,EACvC19C,KAAK0iB,MACP,CACA,IAAK47B,GAAWt+C,KAAK2qB,MAAM,IACzB,OAAO3qB,KAAK2oE,gCAAgCtqB,EAAMx3B,EAAUlC,EAAO+4B,GAC9D,CACL,MAAM/E,EAAW34C,KAAKktB,IAAI,GAC1B,OAAIyrB,GAAY+E,GAAY19C,KAAKktB,IAAI,IAC5BltB,KAAK4oE,YAAYvqB,EAAMx3B,EAAUlC,EAAOg0B,EAAU+E,IAEzD/4B,EAAM85B,MAAO,EACNJ,EAEX,CACF,CACAuqB,YAAYvqB,EAAMx3B,EAAUlC,EAAOg0B,EAAU+E,GAC3C,MAAMj/B,EAAOze,KAAK25B,YAAY9S,GAiB9B,OAhBApI,EAAKnQ,OAAS+vC,EACd5/B,EAAKk6B,SAAWA,EACZA,GACFl6B,EAAKoZ,SAAW73B,KAAK+/C,kBACrB//C,KAAK02B,OAAO,IACH12B,KAAK2qB,MAAM,MACF,UAAd0zB,EAAKptC,MACPjR,KAAKwiB,MAAM3E,EAAO1E,kBAAmB,CACnC5U,GAAIsiB,IAGR7mB,KAAK2zB,WAAWD,eAAe1zB,KAAK2kB,MAAMpW,MAAOvO,KAAK2kB,MAAMkC,UAC5DpI,EAAKoZ,SAAW73B,KAAKqyC,oBAErB5zB,EAAKoZ,SAAW73B,KAAKwxC,iBAAgB,GAEnC7sB,EAAM45B,qBACR9/B,EAAKi/B,SAAWA,EACT19C,KAAK65B,WAAWpb,EAAM,6BAEtBze,KAAK65B,WAAWpb,EAAM,mBAEjC,CACAiqD,UAAUrqB,EAAMx3B,EAAUy3B,EAAS35B,GACjC,MAAMlG,EAAOze,KAAK25B,YAAY9S,GAK9B,OAJApI,EAAKnQ,OAAS+vC,EACdr+C,KAAK0iB,OACLjE,EAAKm/B,OAAS59C,KAAK6oE,kBACnBlkD,EAAM85B,MAAO,EACNz+C,KAAKsvD,gBAAgBtvD,KAAK65B,WAAWpb,EAAM,kBAAmBoI,EAAUy3B,EACjF,CACAqqB,gCAAgCtqB,EAAMx3B,EAAUlC,EAAO+4B,GACrD,MAAM4gB,EAA4Bt+D,KAAK2kB,MAAMwC,uBAC7C,IAAIgQ,EAAsB,KAC1Bn3B,KAAK2kB,MAAMwC,wBAAyB,EACpCnnB,KAAK0iB,OACL,MAAMjE,EAAOze,KAAK25B,YAAY9S,GAC9BpI,EAAKm/B,OAASS,EACd,MAAM,gBACJoqB,EAAe,oBACflqB,GACE55B,EACA8jD,IACFzoE,KAAK04B,gBAAgB7W,MA/wOlB,IAAIkS,GA9H4B,IA84OnCoD,EAAsB,IAAI2B,IAExBylB,IACF9/B,EAAKi/B,SAAWA,GAGhBj/B,EAAKmH,UADH83B,EACe19C,KAAKuvD,6BAA6B,IAElCvvD,KAAKuvD,6BAA6B,GAAkB,WAAdlR,EAAKptC,KAAiC,UAAdotC,EAAKptC,KAAkBwN,EAAM0Y,GAE9G,IAAIkwC,EAAernE,KAAKw9C,qBAAqB/+B,EAAM8/B,GAenD,OAdIkqB,GAAmBzoE,KAAKouD,0BAA4B1Q,GACtD/4B,EAAM85B,MAAO,EACbz+C,KAAK64B,0BAA0B1B,GAC/Bn3B,KAAK04B,gBAAgB/D,oBACrB30B,KAAK04B,gBAAgB5W,OACrBulD,EAAernE,KAAKmuD,kCAAkCnuD,KAAK25B,YAAY9S,GAAWwgD,KAE9EoB,IACFzoE,KAAKk3B,sBAAsBC,GAAqB,GAChDn3B,KAAK04B,gBAAgB5W,QAEvB9hB,KAAK89C,sBAAsBupB,IAE7BrnE,KAAK2kB,MAAMwC,uBAAyBm3C,EAC7B+I,CACT,CACAvpB,sBAAsBr/B,EAAMsyB,GAC1B/wC,KAAKgxC,qBAAqBvyB,EAAKmH,UAAWmrB,EAC5C,CACA0uB,8BAA8BphB,EAAMx3B,EAAUlC,GAC5C,MAAMlG,EAAOze,KAAK25B,YAAY9S,GAQ9B,OAPApI,EAAKqqD,IAAMzqB,EACX5/B,EAAKsqD,MAAQ/oE,KAAKo5D,eAAc,GAC5Bz0C,EAAM45B,qBACRv+C,KAAKwiB,MAAM3E,EAAO1F,2BAA4B,CAC5C5T,GAAIsiB,IAGD7mB,KAAK65B,WAAWpb,EAAM,2BAC/B,CACA8gD,qBAAqBlhB,GACnB,MAAqB,eAAdA,EAAKptC,MAAuC,UAAdotC,EAAK98C,MAAoBvB,KAAK2kB,MAAMqD,cAAc3a,QAAUgxC,EAAK5wC,MAAQzN,KAAKo2B,sBAAwBioB,EAAK5wC,IAAM4wC,EAAK7wC,OAAU,GAAK6wC,EAAK7wC,QAAUxN,KAAK2kB,MAAMqC,gBACtM,CACAw2B,qBAAqB/+B,EAAMi/B,GACzB,GAAyB,WAArBj/B,EAAKm/B,OAAO3sC,KAQd,GAP8B,IAA1BwN,EAAKmH,UAAU9Y,SAEV9M,KAAKsjB,UAAU,qBAClBtjB,KAAKovB,aAAa,qBAIM,IAA1B3Q,EAAKmH,UAAU9Y,QAAgB2R,EAAKmH,UAAU9Y,OAAS,EACzD9M,KAAKwiB,MAAM3E,EAAOvJ,gBAAiB,CACjC/P,GAAIka,EACJlK,iBAAkBvU,KAAKsjB,UAAU,qBAAuBtjB,KAAKsjB,UAAU,oBAAsB,EAAI,SAGnG,IAAK,MAAMgtB,KAAO7xB,EAAKmH,UACJ,kBAAb0qB,EAAIr/B,MACNjR,KAAKwiB,MAAM3E,EAAOpJ,yBAA0B,CAC1ClQ,GAAI+rC,IAMd,OAAOtwC,KAAK65B,WAAWpb,EAAMi/B,EAAW,yBAA2B,iBACrE,CACA6R,6BAA6B9d,EAAOu3B,EAAeC,EAAkBC,EAAc/xC,GACjF,MAAMya,EAAO,GACb,IAAIC,GAAQ,EACZ,MAAMs3B,EAAgCnpE,KAAK2kB,MAAMmD,2BAEjD,IADA9nB,KAAK2kB,MAAMmD,4BAA6B,GAChC9nB,KAAKktB,IAAIukB,IAAQ,CACvB,GAAII,EACFA,GAAQ,OAGR,GADA7xC,KAAK02B,OAAO,IACR12B,KAAK2qB,MAAM8mB,GAAQ,EACjBu3B,GAAkBhpE,KAAKsjB,UAAU,qBAAwBtjB,KAAKsjB,UAAU,qBAC1EtjB,KAAKwiB,MAAM3E,EAAOxJ,gCAAiC,CACjD9P,GAAIvE,KAAK2kB,MAAMsD,kBAGfihD,GACFlpE,KAAKopE,4BAA4BF,GAEnClpE,KAAK0iB,OACL,KACF,CAEFkvB,EAAKrvC,KAAKvC,KAAKqpE,mBAAkB,EAAOlyC,EAAqB8xC,GAC/D,CAEA,OADAjpE,KAAK2kB,MAAMmD,2BAA6BqhD,EACjCv3B,CACT,CACAwc,wBACE,OAAOpuD,KAAK2qB,MAAM,MAAQ3qB,KAAKo2B,oBACjC,CACA+3B,kCAAkC1vC,EAAMy0B,GACtC,IAAIo2B,EAUJ,OATAtpE,KAAKgmB,kCAAkCktB,GACvClzC,KAAK02B,OAAO,IACZ12B,KAAK8vD,qBAAqBrxC,EAAMy0B,EAAKttB,WAAW,EAAoC,OAA7B0jD,EAAcp2B,EAAKvd,YAAiB,EAAS2zC,EAAYp5B,kBAC5GgD,EAAK/uB,eACPD,GAAiBzF,EAAMy0B,EAAK/uB,eAE1B+uB,EAAK0K,OAAO55B,kBACdE,GAAiBzF,EAAMy0B,EAAK0K,OAAO55B,kBAE9BvF,CACT,CACAoqD,kBACE,MAAMhiD,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,OAAO7mB,KAAKsvD,gBAAgBtvD,KAAK4/C,gBAAiB/4B,GAAU,EAC9D,CACA+4B,cAAczoB,GACZ,IAAI1Y,EACAuzB,EAAa,KACjB,MAAM,KACJ/gC,GACEjR,KAAK2kB,MACT,OAAQ1T,GACN,KAAK,GACH,OAAOjR,KAAKupE,aACd,KAAK,GAGH,OAFA9qD,EAAOze,KAAK05B,YACZ15B,KAAK0iB,OACD1iB,KAAK2qB,MAAM,IACN3qB,KAAKwpE,wBAAwB/qD,IAEjCze,KAAK2qB,MAAM,KACd3qB,KAAKwiB,MAAM3E,EAAOlD,kBAAmB,CACnCpW,GAAIvE,KAAK2kB,MAAMsD,kBAGZjoB,KAAK65B,WAAWpb,EAAM,WAC/B,KAAK,GAGH,OAFAA,EAAOze,KAAK05B,YACZ15B,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,kBAC/B,KAAK,GAED,OAAOze,KAAKypE,QAAQzpE,KAAK05B,aAAa,GAE1C,KAAK,GACL,KAAK,GAGD,OADA15B,KAAK6wB,aACE7wB,KAAKo6C,mBAAmBp6C,KAAK2kB,MAAMpW,OAE9C,KAAK,IACH,OAAOvO,KAAK86C,oBAAoB96C,KAAK2kB,MAAMpW,OAC7C,KAAK,IACH,OAAOvO,KAAKu6C,mBAAmBv6C,KAAK2kB,MAAMpW,OAC5C,KAAK,IACH,OAAOvO,KAAK26C,oBAAoB36C,KAAK2kB,MAAMpW,OAC7C,KAAK,IACH,OAAOvO,KAAK66C,mBAAmB76C,KAAK2kB,MAAMpW,OAC5C,KAAK,GACH,OAAOvO,KAAK+6C,mBACd,KAAK,GACH,OAAO/6C,KAAKg7C,qBAAoB,GAClC,KAAK,GACH,OAAOh7C,KAAKg7C,qBAAoB,GAClC,KAAK,GACH,CACE,MAAMqU,EAAarvD,KAAK2kB,MAAMqC,mBAAqBhnB,KAAK2kB,MAAMnX,MAC9D,OAAOxN,KAAKovD,mCAAmCC,EACjD,CACF,KAAK,EACL,KAAK,EAED,OAAOrvD,KAAKisD,eAAmC,IAApBjsD,KAAK2kB,MAAM1T,KAAa,EAAI,GAAG,GAAO,GAErE,KAAK,EAED,OAAOjR,KAAKisD,eAAe,GAAG,GAAM,EAAO90B,GAE/C,KAAK,EACL,KAAK,EAED,OAAOn3B,KAAKuxC,gBAAoC,IAApBvxC,KAAK2kB,MAAM1T,KAAa,EAAI,GAAG,GAAO,GAEtE,KAAK,EAED,OAAOjR,KAAKuxC,gBAAgB,GAAG,GAAO,EAAOpa,GAEjD,KAAK,GACH,OAAOn3B,KAAK0pE,8BACd,KAAK,GACH13B,EAAahyC,KAAK2pE,kBACpB,KAAK,GACH,OAAO3pE,KAAK69D,WAAW79D,KAAKgjE,oBAAoBhxB,EAAYhyC,KAAK05B,cAAc,GACjF,KAAK,GACH,OAAO15B,KAAK4pE,sBACd,KAAK,GACL,KAAK,GACH,OAAO5pE,KAAKo5D,eAAc,GAC5B,KAAK,GACH,CACE36C,EAAOze,KAAK05B,YACZ15B,KAAK0iB,OACLjE,EAAKnQ,OAAS,KACd,MAAMsvC,EAASn/B,EAAKm/B,OAAS59C,KAAK6oE,kBAClC,GAAoB,qBAAhBjrB,EAAO3sC,KACT,OAAOjR,KAAK65B,WAAWpb,EAAM,kBAE7B,MAAMze,KAAKwiB,MAAM3E,EAAOrD,gBAAiB,CACvCjW,GAAIq5C,GAGV,CACF,KAAK,IAMD,OAJA59C,KAAKwiB,MAAM3E,EAAOrF,oBAAqB,CACrCjU,GAAIvE,KAAK2kB,MAAMkC,SACflZ,eAAgB3N,KAAK2kB,MAAMpW,QAEtBvO,KAAKqyC,mBAEhB,KAAK,GAED,OAAOryC,KAAK6pE,kCAAkC,GAAI,KAEtD,KAAK,GAED,OAAO7pE,KAAK6pE,kCAAkC,GAAI,KAEtD,KAAK,GACL,KAAK,GAED,OAAO7pE,KAAK8pE,oBAAoB,QAEpC,KAAK,GACL,KAAK,GACL,KAAK,GACH,CACE,MAAMC,EAAe/pE,KAAK2jB,gBAAgB,mBAAoB,YAC9D,GAAIomD,EACF,OAAO/pE,KAAK8pE,oBAAoBC,GAElC/pE,KAAK+V,aACL,KACF,CACF,KAAK,GACH,CACE,MAAMi0D,EAAchqE,KAAK0lB,MAAMsK,YAAYhwB,KAAKwtB,kBAC5CtO,GAAkB8qD,IAAgC,KAAhBA,EACpChqE,KAAKyyB,gBAAgB,CAAC,MAAO,OAAQ,eAErCzyB,KAAK+V,aAEP,KACF,CACF,QACE,GAAIpK,EAAkBsF,GAAO,CAC3B,GAAIjR,KAAK41B,aAAa,MAA2C,MAAnC51B,KAAK8tB,0BACjC,OAAO9tB,KAAKiqE,wBAEd,MAAM5a,EAAarvD,KAAK2kB,MAAMqC,mBAAqBhnB,KAAK2kB,MAAMnX,MACxD4a,EAAcpoB,KAAK2kB,MAAMyD,YACzBxF,EAAK5iB,KAAKwxC,kBAChB,IAAKppB,GAA2B,UAAZxF,EAAGrhB,OAAqBvB,KAAKo2B,qBAAsB,CACrE,MAAM,KACJnlB,GACEjR,KAAK2kB,MACT,GAAa,KAAT1T,EAGF,OAFAjR,KAAKgmB,kCAAkCpD,GACvC5iB,KAAK0iB,OACE1iB,KAAKkqE,6BAA6BlqE,KAAK45B,gBAAgBhX,IACzD,GAAIjX,EAAkBsF,GAC3B,OAAiC,KAA7BjR,KAAK2tB,oBACA3tB,KAAKmqE,6BAA6BnqE,KAAK45B,gBAAgBhX,IAEvDA,EAEJ,GAAa,KAAT3R,EAET,OADAjR,KAAKgmB,kCAAkCpD,GAChC5iB,KAAKypE,QAAQzpE,KAAK45B,gBAAgBhX,IAAK,EAElD,CACA,OAAIysC,GAAcrvD,KAAK2qB,MAAM,MAAQ3qB,KAAKo2B,sBACxCp2B,KAAK0iB,OACE1iB,KAAK8vD,qBAAqB9vD,KAAK45B,gBAAgBhX,GAAK,CAACA,IAAK,IAE5DA,CACT,CACE5iB,KAAK+V,aAGb,CACA8zD,kCAAkCO,EAAgBC,GAChD,MAAMN,EAAe/pE,KAAK2jB,gBAAgB,mBAAoB,YAC9D,GAAIomD,EAMF,OALA/pE,KAAK2kB,MAAM1T,KAAOm5D,EAClBpqE,KAAK2kB,MAAMpW,MAAQ87D,EACnBrqE,KAAK2kB,MAAMzH,MACXld,KAAK2kB,MAAMlX,MACXzN,KAAK2kB,MAAMmC,OAASlZ,EAA+B5N,KAAK2kB,MAAMmC,QAAS,GAChE9mB,KAAK8pE,oBAAoBC,GAEhC/pE,KAAK+V,YAET,CACA+zD,oBAAoBC,GAClB,MAAMtrD,EAAOze,KAAK05B,YACZ7S,EAAW7mB,KAAK2kB,MAAMkC,SACtB64C,EAAY1/D,KAAK2kB,MAAM1T,KAE7B,OADAjR,KAAK0iB,OACE1iB,KAAKsqE,qBAAqB7rD,EAAMoI,EAAUkjD,EAAcrK,EACjE,CACA4K,qBAAqB7rD,EAAMoI,EAAUkjD,EAAcrK,GACjD,GAAI1/D,KAAKuqE,gCAAgCR,EAAcljD,EAAU64C,GAAY,CAC3E,MAAMjG,EAA4B,UAAjBsQ,EAA2B,gCAAkC,iBAO9E,OANK/pE,KAAKwqE,2CACRxqE,KAAKwiB,MAAuB,UAAjBunD,EAA2BlsD,EAAOtB,uBAAyBsB,EAAO9B,iBAAkB,CAC7FxX,GAAIsiB,IAGR7mB,KAAKyqE,yBACEzqE,KAAK65B,WAAWpb,EAAMg7C,EAC/B,CACE,MAAMz5D,KAAKwiB,MAAM3E,EAAO7B,2BAA4B,CAClDzX,GAAIsiB,EACJ/mB,MAAOmM,EAAeyzD,IAG5B,CACA6K,gCAAgCR,EAAcljD,EAAU64C,GACtD,OAAQqK,GACN,IAAK,OAED,OAAO/pE,KAAKsjB,UAAU,CAAC,mBAAoB,CACzCyM,WAAY9jB,EAAeyzD,MAGjC,IAAK,QACH,OAAqB,KAAdA,EACT,QACE,MAAM1/D,KAAKwiB,MAAM3E,EAAO/B,2BAA4B,CAClDvX,GAAIsiB,IAGZ,CACAsjD,6BAA6B1rD,GAC3Bze,KAAKw4B,UAAU3W,MAAMyT,IAAc,EAAMt1B,KAAKw4B,UAAUrD,WACxD,MAAMtP,EAAS,CAAC7lB,KAAKwxC,mBAQrB,OAPAxxC,KAAKw4B,UAAU1W,OACX9hB,KAAKq2B,yBACPr2B,KAAKwiB,MAAM3E,EAAOrH,0BAA2B,CAC3CjS,GAAIvE,KAAK2kB,MAAM8D,gBAGnBzoB,KAAK02B,OAAO,IACL12B,KAAK8vD,qBAAqBrxC,EAAMoH,GAAQ,EACjD,CACA4jD,QAAQhrD,EAAM8W,GACZv1B,KAAKovB,aAAa,iBACdmG,GACFv1B,KAAKovB,aAAa,sBAEpB3Q,EAAKqwC,MAAQv5B,EACbv1B,KAAK0iB,OACL,MAAMuV,EAAYj4B,KAAK2kB,MAAMoD,OAU7B,OATA/nB,KAAK2kB,MAAMoD,OAAS,GAChBwN,GACFv1B,KAAKw4B,UAAU3W,MAAMiT,IACrBrW,EAAK09B,KAAOn8C,KAAK+kE,aACjB/kE,KAAKw4B,UAAU1W,QAEfrD,EAAK09B,KAAOn8C,KAAK+kE,aAEnB/kE,KAAK2kB,MAAMoD,OAASkQ,EACbj4B,KAAK65B,WAAWpb,EAAM,eAC/B,CACA8qD,aACE,MAAM9qD,EAAOze,KAAK05B,YAgBlB,OAfA15B,KAAK0iB,QACD1iB,KAAK2qB,MAAM,KAAQ3qB,KAAK+hB,MAAMV,kBAAqBrhB,KAAKwB,QAAQtC,wBAIxDc,KAAK+hB,MAAMZ,YAAenhB,KAAKwB,QAAQtC,yBACjDc,KAAKwiB,MAAM3E,EAAO1D,gBAAiB,CACjC5V,GAAIka,IALNze,KAAKwiB,MAAM3E,EAAO3E,gBAAiB,CACjC3U,GAAIka,IAOHze,KAAK2qB,MAAM,KAAQ3qB,KAAK2qB,MAAM,IAAO3qB,KAAK2qB,MAAM,KACnD3qB,KAAKwiB,MAAM3E,EAAO7C,iBAAkB,CAClCzW,GAAIka,IAGDze,KAAK65B,WAAWpb,EAAM,QAC/B,CACA4zB,mBACE,MAAM5zB,EAAOze,KAAK05B,YACZ9W,EAAK5iB,KAAK25B,YAAY/rB,EAA+B5N,KAAK2kB,MAAMkC,SAAU,IAC1EtlB,EAAOvB,KAAK2kB,MAAMpW,MAGxB,OAFAvO,KAAK0iB,OACLjE,EAAKmE,GAAK5iB,KAAKmoD,iBAAiBvlC,EAAIrhB,GAC7BvB,KAAK65B,WAAWpb,EAAM,cAC/B,CACAirD,8BACE,MAAMjrD,EAAOze,KAAK05B,YAElB,GADA15B,KAAK0iB,OACD1iB,KAAKw4B,UAAUrD,UAAYn1B,KAAK2qB,MAAM,IAAK,CAC7C,MAAM+/C,EAAO1qE,KAAKmoD,iBAAiBnoD,KAAK45B,gBAAgBnb,GAAO,YAO/D,OANAze,KAAK0iB,OACD1iB,KAAK2qB,MAAM,KACb3qB,KAAKovB,aAAa,gBACRpvB,KAAKsjB,UAAU,iBACzBtjB,KAAK+V,aAEA/V,KAAK2qE,kBAAkBlsD,EAAMisD,EAAM,OAC5C,CACA,OAAO1qE,KAAK4qE,cAAcnsD,EAC5B,CACAksD,kBAAkBlsD,EAAMisD,EAAMj2B,GAC5Bh2B,EAAKisD,KAAOA,EACZ,MAAMtiD,EAAcpoB,KAAK2kB,MAAMyD,YAS/B,OARA3J,EAAKoZ,SAAW73B,KAAKwxC,iBAAgB,IACjC/yB,EAAKoZ,SAASt2B,OAASkzC,GAAgBrsB,IACzCpoB,KAAKwiB,MAAM3E,EAAOjD,wBAAyB,CACzCrW,GAAIka,EAAKoZ,SACTnrB,OAAQg+D,EAAKnpE,KACbsZ,sBAAuB45B,IAGpBz0C,KAAK65B,WAAWpb,EAAM,eAC/B,CACA+qD,wBAAwB/qD,GACtB,MAAMmE,EAAK5iB,KAAKmoD,iBAAiBnoD,KAAK45B,gBAAgBnb,GAAO,UAU7D,OATAze,KAAK0iB,OACD1iB,KAAK41B,aAAa,OACf51B,KAAK2f,UACR3f,KAAKwiB,MAAM3E,EAAOxO,wBAAyB,CACzC9K,GAAIqe,IAGR5iB,KAAKojB,mBAAoB,GAEpBpjB,KAAK2qE,kBAAkBlsD,EAAMmE,EAAI,OAC1C,CACAslC,mBAAmB35C,EAAO0C,EAAMwN,GAK9B,OAJAze,KAAK01B,SAASjX,EAAM,WAAYlQ,GAChCvO,KAAK01B,SAASjX,EAAM,MAAOze,KAAK0lB,MAAMkD,MAAMnK,EAAKjR,MAAOxN,KAAK2kB,MAAMlX,MACnEgR,EAAKlQ,MAAQA,EACbvO,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAMxN,EAC/B,CACA2pC,aAAarsC,EAAO0C,GAClB,MAAMwN,EAAOze,KAAK05B,YAClB,OAAO15B,KAAKkoD,mBAAmB35C,EAAO0C,EAAMwN,EAC9C,CACAo8B,mBAAmBtsC,GACjB,OAAOvO,KAAK46C,aAAarsC,EAAO,gBAClC,CACAusC,oBAAoBvsC,GAClB,OAAOvO,KAAK46C,aAAarsC,EAAO,iBAClC,CACAgsC,mBAAmBhsC,GACjB,OAAOvO,KAAK46C,aAAarsC,EAAO,gBAClC,CACAosC,oBAAoBpsC,GAClB,OAAOvO,KAAK46C,aAAarsC,EAAO,iBAClC,CACA6rC,mBAAmB7rC,GACjB,MAAMkQ,EAAOze,KAAK46C,aAAarsC,EAAMA,MAAO,iBAG5C,OAFAkQ,EAAK0S,QAAU5iB,EAAM4iB,QACrB1S,EAAK8B,MAAQhS,EAAMgS,MACZ9B,CACT,CACAu8B,oBAAoBzsC,GAClB,MAAMkQ,EAAOze,KAAK05B,YAGlB,OAFAjb,EAAKlQ,MAAQA,EACbvO,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,iBAC/B,CACAs8B,mBACE,MAAMt8B,EAAOze,KAAK05B,YAElB,OADA15B,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,cAC/B,CACA2wC,mCAAmCC,GACjC,MAAMxoC,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,IAAI8B,EACJ3oB,KAAK0iB,OACL1iB,KAAK04B,gBAAgB7W,MA7vPhB,IAAIkS,GA5HuB,IA03PhC,MAAMuqC,EAA4Bt+D,KAAK2kB,MAAMwC,uBACvCgiD,EAAgCnpE,KAAK2kB,MAAMmD,2BACjD9nB,KAAK2kB,MAAMwC,wBAAyB,EACpCnnB,KAAK2kB,MAAMmD,4BAA6B,EACxC,MAAM+iD,EAAgB7qE,KAAK2kB,MAAMkC,SAC3B2pB,EAAW,GACXrZ,EAAsB,IAAI2B,GAChC,IACIgyC,EACAC,EAFAl5B,GAAQ,EAGZ,MAAQ7xC,KAAK2qB,MAAM,KAAK,CACtB,GAAIknB,EACFA,GAAQ,OAGR,GADA7xC,KAAK02B,OAAO,GAAkD,OAA9CS,EAAoBK,sBAAiC,KAAOL,EAAoBK,uBAC5Fx3B,KAAK2qB,MAAM,IAAK,CAClBogD,EAAwB/qE,KAAK2kB,MAAMkC,SACnC,KACF,CAEF,GAAI7mB,KAAK2qB,MAAM,IAAK,CAClB,MAAMqgD,EAAqBhrE,KAAK2kB,MAAMkC,SAGtC,GAFAikD,EAAiB9qE,KAAK2kB,MAAMkC,SAC5B2pB,EAASjuC,KAAKvC,KAAK2qD,eAAe3qD,KAAKoxC,mBAAoB45B,KACtDhrE,KAAK+xC,oBAAoB,IAC5B,KAEJ,MACEvB,EAASjuC,KAAKvC,KAAKmxC,wBAAwBha,EAAqBn3B,KAAK2qD,gBAEzE,CACA,MAAMsgB,EAAcjrE,KAAK2kB,MAAMqD,cAC/BhoB,KAAK02B,OAAO,IACZ12B,KAAK2kB,MAAMwC,uBAAyBm3C,EACpCt+D,KAAK2kB,MAAMmD,2BAA6BqhD,EACxC,IAAI+B,EAAYlrE,KAAK25B,YAAY9S,GACjC,OAAIwoC,GAAcrvD,KAAKgvD,iBAAiBxe,KAAc06B,EAAYlrE,KAAK+uD,WAAWmc,KAChFlrE,KAAK64B,0BAA0B1B,GAC/Bn3B,KAAK04B,gBAAgB/D,oBACrB30B,KAAK04B,gBAAgB5W,OACrB9hB,KAAK8vD,qBAAqBob,EAAW16B,GAAU,GACxC06B,IAETlrE,KAAK04B,gBAAgB5W,OAChB0uB,EAAS1jC,QACZ9M,KAAK+V,WAAW/V,KAAK2kB,MAAMsD,iBAEzB8iD,GAAuB/qE,KAAK+V,WAAWg1D,GACvCD,GAAgB9qE,KAAK+V,WAAW+0D,GACpC9qE,KAAKk3B,sBAAsBC,GAAqB,GAChDn3B,KAAKgxC,qBAAqBR,GAAU,GAChCA,EAAS1jC,OAAS,GACpB6b,EAAM3oB,KAAK25B,YAAYkxC,GACvBliD,EAAIiwB,YAAcpI,EAClBxwC,KAAK65B,WAAWlR,EAAK,sBACrB3oB,KAAKg6B,iBAAiBrR,EAAKsiD,IAE3BtiD,EAAM6nB,EAAS,GAEVxwC,KAAKmrE,gBAAgBtkD,EAAU8B,GACxC,CACAwiD,gBAAgBtkD,EAAU2oB,GACxB,IAAKxvC,KAAKwB,QAAQhC,+BAIhB,OAHAQ,KAAK01B,SAAS8Z,EAAY,iBAAiB,GAC3CxvC,KAAK01B,SAAS8Z,EAAY,aAAc3oB,EAASxZ,OACjDrN,KAAKimB,wBAAwBupB,EAAY3oB,EAASxZ,MAAOrN,KAAK2kB,MAAMqD,cAAc3a,OAC3EmiC,EAET,MAAM47B,EAAkBprE,KAAK25B,YAAY9S,GAEzC,OADAukD,EAAgB57B,WAAaA,EACtBxvC,KAAK65B,WAAWuxC,EAAiB,0BAC1C,CACApc,iBAAiBnpC,GACf,OAAQ7lB,KAAKo2B,oBACf,CACA24B,WAAWtwC,GACT,GAAIze,KAAKktB,IAAI,IACX,OAAOzO,CAEX,CACAksC,eAAelsC,EAAMoI,GACnB,OAAOpI,CACT,CACAmrD,sBACE,MAAMnrD,EAAOze,KAAK05B,YAElB,GADA15B,KAAK0iB,OACD1iB,KAAK2qB,MAAM,IAAK,CAClB,MAAM+/C,EAAO1qE,KAAKmoD,iBAAiBnoD,KAAK45B,gBAAgBnb,GAAO,OAC/Dze,KAAK0iB,OACL,MAAM2oD,EAAWrrE,KAAK2qE,kBAAkBlsD,EAAMisD,EAAM,UAMpD,OALK1qE,KAAK+hB,MAAMN,oBAAuBzhB,KAAK+hB,MAAMT,SAAYthB,KAAKwB,QAAQxC,+BACzEgB,KAAKwiB,MAAM3E,EAAO9D,oBAAqB,CACrCxV,GAAI8mE,IAGDA,CACT,CACA,OAAOrrE,KAAKsrE,SAAS7sD,EACvB,CACA6sD,SAAS7sD,GAEP,GADAze,KAAK4vD,eAAenxC,GAChBze,KAAKktB,IAAI,IAAK,CAChB,MAAMnK,EAAO/iB,KAAKurE,cAAc,IAChCvrE,KAAK8wC,iBAAiB/tB,GACtBtE,EAAKmH,UAAY7C,CACnB,MACEtE,EAAKmH,UAAY,GAEnB,OAAO5lB,KAAK65B,WAAWpb,EAAM,gBAC/B,CACAmxC,eAAenxC,GACbA,EAAKm/B,OAAS59C,KAAK6oE,kBACM,WAArBpqD,EAAKm/B,OAAO3sC,MACdjR,KAAKwiB,MAAM3E,EAAOrJ,2BAA4B,CAC5CjQ,GAAIka,EAAKm/B,QAGf,CACA4tB,qBAAqBC,GACnB,MAAM,MACJj+D,EAAK,SACLqZ,EAAQ,IACRpZ,EAAG,MACHc,GACEvO,KAAK2kB,MACH+mD,EAAYl+D,EAAQ,EACpBm+D,EAAO3rE,KAAK25B,YAAY/rB,EAA+BiZ,EAAU,IACzD,OAAVtY,IACGk9D,GACHzrE,KAAKwiB,MAAM3E,EAAOxI,8BAA+B,CAC/C9Q,GAAIqJ,EAA+B5N,KAAK2kB,MAAM0D,8BAA+B,MAInF,MAAMujD,EAAS5rE,KAAK2qB,MAAM,IACpBkhD,EAAYD,GAAU,GAAK,EAC3BE,EAAUr+D,EAAMo+D,EACtBF,EAAKp9D,MAAQ,CACX4sC,IAAKn7C,KAAK0lB,MAAMkD,MAAM8iD,EAAWI,GAASz6C,QAAQ,SAAU,MAC5D06C,OAAkB,OAAVx9D,EAAiB,KAAOA,EAAMqa,MAAM,EAAGijD,IAEjDF,EAAKK,KAAOJ,EACZ5rE,KAAK0iB,OACL,MAAM2kD,EAAernE,KAAK65B,WAAW8xC,EAAM,mBAE3C,OADA3rE,KAAKg6B,iBAAiBqtC,EAAcz5D,EAA+B5N,KAAK2kB,MAAMqD,cAAe6jD,IACtFxE,CACT,CACAjO,cAAcqS,GACZ,MAAMhtD,EAAOze,KAAK05B,YAClBjb,EAAKm6B,YAAc,GACnB,IAAIqzB,EAASjsE,KAAKwrE,qBAAqBC,GAEvC,IADAhtD,EAAKytD,OAAS,CAACD,IACPA,EAAOD,MACbvtD,EAAKm6B,YAAYr2C,KAAKvC,KAAKq5D,6BAC3Br5D,KAAKgyB,2BACLvT,EAAKytD,OAAO3pE,KAAK0pE,EAASjsE,KAAKwrE,qBAAqBC,IAEtD,OAAOzrE,KAAK65B,WAAWpb,EAAM,kBAC/B,CACA46C,4BACE,OAAOr5D,KAAK+/C,iBACd,CACAxO,gBAAgBE,EAAO2L,EAAW0oB,EAAU3uC,GACtC2uC,GACF9lE,KAAKovB,aAAa,kBAEpB,MAAM+5C,EAAgCnpE,KAAK2kB,MAAMmD,2BACjD9nB,KAAK2kB,MAAMmD,4BAA6B,EACxC,MAAMqkD,EAAWv/D,OAAOysB,OAAO,MAC/B,IAAIwY,GAAQ,EACZ,MAAMpzB,EAAOze,KAAK05B,YAGlB,IAFAjb,EAAK/P,WAAa,GAClB1O,KAAK0iB,QACG1iB,KAAK2qB,MAAM8mB,IAAQ,CACzB,GAAII,EACFA,GAAQ,OAGR,GADA7xC,KAAK02B,OAAO,IACR12B,KAAK2qB,MAAM8mB,GAAQ,CACrBzxC,KAAKopE,4BAA4B3qD,GACjC,KACF,CAEF,IAAImtB,EACAwR,EACFxR,EAAO5rC,KAAKoyC,wBAEZxG,EAAO5rC,KAAKosE,wBAAwBj1C,GACpCn3B,KAAK6lE,WAAWj6B,EAAMk6B,EAAUqG,EAAUh1C,IAExC2uC,IAAa9lE,KAAK83B,iBAAiB8T,IAAuB,kBAAdA,EAAK36B,MACnDjR,KAAKwiB,MAAM3E,EAAO1H,sBAAuB,CACvC5R,GAAIqnC,IAGJA,EAAK0R,WACPt9C,KAAK01B,SAASkW,EAAM,aAAa,GAEnCntB,EAAK/P,WAAWnM,KAAKqpC,EACvB,CACA5rC,KAAK0iB,OACL1iB,KAAK2kB,MAAMmD,2BAA6BqhD,EACxC,IAAIl4D,EAAO,mBAMX,OALImsC,EACFnsC,EAAO,gBACE60D,IACT70D,EAAO,oBAEFjR,KAAK65B,WAAWpb,EAAMxN,EAC/B,CACAm4D,4BAA4B3qD,GAC1Bze,KAAK01B,SAASjX,EAAM,gBAAiBze,KAAK2kB,MAAMuD,cAChDloB,KAAK01B,SAASjX,EAAM,mBAAoBze,KAAK2kB,MAAMsD,iBAAiB,EACtE,CACAokD,yBAAyBzgC,GACvB,OAAQA,EAAK+M,UAA8B,eAAlB/M,EAAKp/B,IAAIyE,OAA0BjR,KAAKy3B,yBAA2Bz3B,KAAK2qB,MAAM,IAAM3qB,KAAK2qB,MAAM,IAC1H,CACAyhD,wBAAwBj1C,GACtB,IAAI6a,EAAa,GACjB,GAAIhyC,KAAK2qB,MAAM,IAMb,IALI3qB,KAAKsjB,UAAU,eACjBtjB,KAAKwiB,MAAM3E,EAAO9C,6BAA8B,CAC9CxW,GAAIvE,KAAK2kB,MAAMkC,WAGZ7mB,KAAK2qB,MAAM,KAChBqnB,EAAWzvC,KAAKvC,KAAKiyC,kBAGzB,MAAMrG,EAAO5rC,KAAK05B,YAClB,IAEI7S,EAFA0O,GAAU,EACV8nB,GAAa,EAEjB,GAAIr9C,KAAK2qB,MAAM,IAEb,OADIqnB,EAAWllC,QAAQ9M,KAAK+V,aACrB/V,KAAKkxC,cAEVc,EAAWllC,SACb8+B,EAAKoG,WAAaA,EAClBA,EAAa,IAEfpG,EAAK2G,QAAS,EACVpb,IACFtQ,EAAW7mB,KAAK2kB,MAAMkC,UAExB,IAAI2O,EAAcx1B,KAAKktB,IAAI,IAC3BltB,KAAK8sD,gCAAgClhB,GACrC,MAAMxjB,EAAcpoB,KAAK2kB,MAAMyD,YACzB5b,EAAMxM,KAAKsyC,kBAAkB1G,EAAMzU,GACzC,IAAK3B,IAAgBpN,GAAepoB,KAAKqsE,yBAAyBzgC,GAAO,CACvE,MAAM0gC,EAAU9/D,EAAIjL,KACJ,UAAZ+qE,GAAwBtsE,KAAKq2B,0BAC/Bd,GAAU,EACVv1B,KAAKgmB,kCAAkCxZ,GACvCgpB,EAAcx1B,KAAKktB,IAAI,IACvBltB,KAAKsyC,kBAAkB1G,IAET,QAAZ0gC,GAAiC,QAAZA,IACvBjvB,GAAa,EACbr9C,KAAKgmB,kCAAkCxZ,GACvCo/B,EAAKv6B,KAAOi7D,EACRtsE,KAAK2qB,MAAM,MACb6K,GAAc,EACdx1B,KAAKwiB,MAAM3E,EAAOzM,oBAAqB,CACrC7M,GAAIvE,KAAK2kB,MAAM8D,cACfpX,KAAMi7D,IAERtsE,KAAK0iB,QAEP1iB,KAAKsyC,kBAAkB1G,GAE3B,CACA,OAAO5rC,KAAKwyC,kBAAkB5G,EAAM/kB,EAAU2O,EAAaD,GAAS,EAAO8nB,EAAYlmB,EACzF,CACAurC,kCAAkCnwB,GAChC,MAAuB,QAAhBA,EAAOlhC,KAAiB,EAAI,CACrC,CACAoqC,6BAA6BlJ,GAC3B,OAAOA,EAAO1sB,MAChB,CACAgnC,wBAAwBta,GACtB,IAAIg6B,EACJ,MAAMjlB,EAAatnD,KAAK0iE,kCAAkCnwB,GACpD1sB,EAAS7lB,KAAKy7C,6BAA6BlJ,GAC7C1sB,EAAO/Y,SAAWw6C,GACpBtnD,KAAKwiB,MAAsB,QAAhB+vB,EAAOlhC,KAAiBwM,EAAO/L,eAAiB+L,EAAO9L,eAAgB,CAChFxN,GAAIguC,IAGY,QAAhBA,EAAOlhC,MAA8F,iBAAlC,OAAxCk7D,EAAU1mD,EAAOA,EAAO/Y,OAAS,SAAc,EAASy/D,EAAQt7D,OAC7FjR,KAAKwiB,MAAM3E,EAAO7L,uBAAwB,CACxCzN,GAAIguC,GAGV,CACA4K,kBAAkBvR,EAAMpW,EAAaD,EAAS6nB,EAAWC,GACvD,GAAIA,EAAY,CACd,MAAMmvB,EAAexsE,KAAKw8C,YAAY5Q,EAAMpW,GAAa,GAAO,GAAO,EAAO,gBAE9E,OADAx1B,KAAK6sD,wBAAwB2f,GACtBA,CACT,CACA,GAAIj3C,GAAWC,GAAex1B,KAAK2qB,MAAM,IAIvC,OAHIyyB,GAAWp9C,KAAK+V,aACpB61B,EAAKv6B,KAAO,SACZu6B,EAAK2G,QAAS,EACPvyC,KAAKw8C,YAAY5Q,EAAMpW,EAAaD,GAAS,GAAO,EAAO,eAEtE,CACAgoB,oBAAoB3R,EAAM/kB,EAAUu2B,EAAWjmB,GAE7C,GADAyU,EAAK0R,WAAY,EACbt9C,KAAKktB,IAAI,IAEX,OADA0e,EAAKr9B,MAAQ6uC,EAAYp9C,KAAKyyC,kBAAkBzyC,KAAK2kB,MAAMkC,UAAY7mB,KAAKmxC,wBAAwBha,GAC7Fn3B,KAAK65B,WAAW+R,EAAM,kBAE/B,IAAKA,EAAK+M,UAA8B,eAAlB/M,EAAKp/B,IAAIyE,KAAuB,CAEpD,GADAjR,KAAKguD,kBAAkBpiB,EAAKp/B,IAAIjL,KAAMqqC,EAAKp/B,IAAIsQ,IAAItP,OAAO,GAAM,GAC5D4vC,EACFxR,EAAKr9B,MAAQvO,KAAKyyC,kBAAkB5rB,EAAUsS,GAAgByS,EAAKp/B,WAC9D,GAAIxM,KAAK2qB,MAAM,IAAK,CACzB,MAAM0M,EAAqBr3B,KAAK2kB,MAAMkC,SACX,MAAvBsQ,EAC6C,OAA3CA,EAAoBE,qBACtBF,EAAoBE,mBAAqBA,GAG3Cr3B,KAAKwiB,MAAM3E,EAAO7I,4BAA6B,CAC7CzQ,GAAI8yB,IAGRuU,EAAKr9B,MAAQvO,KAAKyyC,kBAAkB5rB,EAAUsS,GAAgByS,EAAKp/B,KACrE,MACEo/B,EAAKr9B,MAAQ4qB,GAAgByS,EAAKp/B,KAGpC,OADAo/B,EAAK0R,WAAY,EACVt9C,KAAK65B,WAAW+R,EAAM,iBAC/B,CACF,CACA4G,kBAAkB5G,EAAM/kB,EAAU2O,EAAaD,EAAS6nB,EAAWC,EAAYlmB,GAC7E,MAAM1Y,EAAOze,KAAKm9C,kBAAkBvR,EAAMpW,EAAaD,EAAS6nB,EAAWC,IAAer9C,KAAKu9C,oBAAoB3R,EAAM/kB,EAAUu2B,EAAWjmB,GAE9I,OADK1Y,GAAMze,KAAK+V,aACT0I,CACT,CACA6zB,kBAAkB1G,EAAMzU,GACtB,GAAIn3B,KAAKktB,IAAI,GACX0e,EAAK+M,UAAW,EAChB/M,EAAKp/B,IAAMxM,KAAKmxC,0BAChBnxC,KAAK02B,OAAO,OACP,CACL,MAAM,KACJzlB,EAAI,MACJ1C,GACEvO,KAAK2kB,MACT,IAAInY,EACJ,GAAIZ,EAA2BqF,GAC7BzE,EAAMxM,KAAKwxC,iBAAgB,QAE3B,OAAQvgC,GACN,KAAK,IACHzE,EAAMxM,KAAK86C,oBAAoBvsC,GAC/B,MACF,KAAK,IACH/B,EAAMxM,KAAK66C,mBAAmBtsC,GAC9B,MACF,KAAK,IACH/B,EAAMxM,KAAKu6C,mBAAmBhsC,GAC9B,MACF,KAAK,IACH/B,EAAMxM,KAAK26C,oBAAoBpsC,GAC/B,MACF,KAAK,IACH,CACE,MAAMgpB,EAAgBv3B,KAAK2kB,MAAMkC,SACN,MAAvBsQ,EACwC,OAAtCA,EAAoBI,gBACtBJ,EAAoBI,cAAgBA,GAGtCv3B,KAAKwiB,MAAM3E,EAAO5D,uBAAwB,CACxC1V,GAAIgzB,IAGR/qB,EAAMxM,KAAKqyC,mBACX,KACF,CACF,QACEryC,KAAK+V,aAGX61B,EAAKp/B,IAAMA,EACE,MAATyE,IACF26B,EAAK+M,UAAW,EAEpB,CACA,OAAO/M,EAAKp/B,GACd,CACA+uC,aAAa98B,EAAM8W,GACjB9W,EAAKmE,GAAK,KACVnE,EAAKguD,WAAY,EACjBhuD,EAAKqwC,MAAQv5B,CACf,CACAinB,YAAY/9B,EAAM+W,EAAaD,EAAS+mB,EAAej7B,EAAkBpQ,EAAM6rC,GAAe,GAC5F98C,KAAKu7C,aAAa98B,EAAM8W,GACxB9W,EAAKguD,UAAYj3C,EACjBx1B,KAAK+hB,MAAMF,MAAM2oC,IAAgC1N,EAztUrC,GAytUkE,IAAMz7B,EA1tUjE,GA0tUyG,IAC5HrhB,KAAKw4B,UAAU3W,MAAMyT,GAAcC,EAAS9W,EAAKguD,YACjDzsE,KAAKiuD,oBAAoBxvC,EAAM69B,GAC/B,MAAM+qB,EAAernE,KAAKgpD,2BAA2BvqC,EAAMxN,GAAM,GAGjE,OAFAjR,KAAKw4B,UAAU1W,OACf9hB,KAAK+hB,MAAMD,OACJulD,CACT,CACApb,eAAexa,EAAOya,EAAcC,EAASh1B,GACvCg1B,GACFnsD,KAAKovB,aAAa,kBAEpB,MAAM+5C,EAAgCnpE,KAAK2kB,MAAMmD,2BACjD9nB,KAAK2kB,MAAMmD,4BAA6B,EACxC,MAAMrJ,EAAOze,KAAK05B,YAIlB,OAHA15B,KAAK0iB,OACLjE,EAAK4F,SAAWrkB,KAAKurE,cAAc95B,GAAQ0a,EAASh1B,EAAqB1Y,GACzEze,KAAK2kB,MAAMmD,2BAA6BqhD,EACjCnpE,KAAK65B,WAAWpb,EAAM0tC,EAAU,kBAAoB,kBAC7D,CACA2D,qBAAqBrxC,EAAMoH,EAAQ0P,EAAS2a,GAC1ClwC,KAAK+hB,MAAMF,MAAM2oC,GACjB,IAAIjqC,EAAQ+U,GAAcC,GAAS,IAC9Bv1B,KAAK2qB,MAAM,IAAM3qB,KAAKw4B,UAAUnD,QACnC9U,GA7pQO,GA+pQTvgB,KAAKw4B,UAAU3W,MAAMtB,GACrBvgB,KAAKu7C,aAAa98B,EAAM8W,GACxB,MAAM+oC,EAA4Bt+D,KAAK2kB,MAAMwC,uBAU7C,OATItB,IACF7lB,KAAK2kB,MAAMwC,wBAAyB,EACpCnnB,KAAKivD,2BAA2BxwC,EAAMoH,EAAQqqB,IAEhDlwC,KAAK2kB,MAAMwC,wBAAyB,EACpCnnB,KAAK28C,kBAAkBl+B,GAAM,GAC7Bze,KAAKw4B,UAAU1W,OACf9hB,KAAK+hB,MAAMD,OACX9hB,KAAK2kB,MAAMwC,uBAAyBm3C,EAC7Bt+D,KAAK65B,WAAWpb,EAAM,0BAC/B,CACAwwC,2BAA2BxwC,EAAMoH,EAAQqqB,GACvClwC,KAAKmwC,iBAAiBtqB,EAAQqqB,GAAkB,GAChDzxB,EAAKoH,OAASA,CAChB,CACAmjC,2BAA2BvqC,EAAMxN,EAAM4rC,GAAW,GAEhD,OADA78C,KAAK28C,kBAAkBl+B,GAAM,EAAOo+B,GAC7B78C,KAAK65B,WAAWpb,EAAMxN,EAC/B,CACA0rC,kBAAkBl+B,EAAMm+B,EAAiBC,GAAW,GAClD,MAAM6vB,EAAe9vB,IAAoB58C,KAAK2qB,MAAM,GAEpD,GADA3qB,KAAK04B,gBAAgB7W,MAAM+S,MACvB83C,EACFjuD,EAAK09B,KAAOn8C,KAAKgqD,mBACjBhqD,KAAKyqD,YAAYhsC,GAAM,EAAOm+B,GAAiB,OAC1C,CACL,MAAMuoB,EAAYnlE,KAAK2kB,MAAM+B,OACvBuR,EAAYj4B,KAAK2kB,MAAMoD,OAC7B/nB,KAAK2kB,MAAMoD,OAAS,GACpB/nB,KAAKw4B,UAAU3W,MAhsQJ,EAgsQU7hB,KAAKw4B,UAAUvD,gBACpCxW,EAAK09B,KAAOn8C,KAAK+kE,YAAW,GAAM,GAAO4H,IACvC,MAAMC,GAAa5sE,KAAK6sE,kBAAkBpuD,EAAKoH,QAC3C8mD,GAA0BC,GAC5B5sE,KAAKwiB,MAAM3E,EAAO5J,6BAA8B,CAC9C1P,GAAmB,WAAdka,EAAKpN,MAAmC,gBAAdoN,EAAKpN,OAA6BoN,EAAKjS,IAAyBiS,EAAnBA,EAAKjS,IAAIsQ,IAAIrP,MAG7F,MAAM6lC,GAAqB6xB,GAAanlE,KAAK2kB,MAAM+B,OACnD1mB,KAAKyqD,YAAYhsC,IAAOze,KAAK2kB,MAAM+B,QAAWk2B,GAAoBC,GAAa+vB,GAAWhwB,EAAiBtJ,GACvGtzC,KAAK2kB,MAAM+B,QAAUjI,EAAKmE,IAC5B5iB,KAAKyzC,gBAAgBh1B,EAAKmE,GAnwUnBxC,GAmwUqCkzB,EAC9C,IAEFtzC,KAAKw4B,UAAU1W,OACf9hB,KAAK2kB,MAAMoD,OAASkQ,CACtB,CACAj4B,KAAK04B,gBAAgB5W,MACvB,CACA+8C,kBAAkBpgD,GAChB,MAAqB,eAAdA,EAAKxN,IACd,CACA47D,kBAAkBhnD,GAChB,IAAK,IAAIpZ,EAAI,EAAGqe,EAAMjF,EAAO/Y,OAAQL,EAAIqe,EAAKre,IAC5C,IAAKzM,KAAK6+D,kBAAkBh5C,EAAOpZ,IAAK,OAAO,EAEjD,OAAO,CACT,CACAg+C,YAAYhsC,EAAMywC,EAAiBC,EAAiB7b,GAAoB,GACtE,MAAMD,GAAgB6b,GAAmB,IAAIvzC,IACvCmxD,EAAmB,CACvB77D,KAAM,oBAER,IAAK,MAAMyhC,KAASj0B,EAAKoH,OACvB7lB,KAAKmzC,UAAUT,EAAO,CACpBU,GAAI05B,EACJ/5B,QAnyUK3yB,EAoyULizB,eACAC,qBAGN,CACAi4B,cAAc95B,EAAOE,EAAYxa,EAAqB+xC,GACpD,MAAMt3B,EAAO,GACb,IAAIC,GAAQ,EACZ,MAAQ7xC,KAAKktB,IAAIukB,IAAQ,CACvB,GAAII,EACFA,GAAQ,OAGR,GADA7xC,KAAK02B,OAAO,IACR12B,KAAK2qB,MAAM8mB,GAAQ,CACjBy3B,GACFlpE,KAAKopE,4BAA4BF,GAEnClpE,KAAK0iB,OACL,KACF,CAEFkvB,EAAKrvC,KAAKvC,KAAKqpE,kBAAkB13B,EAAYxa,GAC/C,CACA,OAAOya,CACT,CACAy3B,kBAAkB13B,EAAYxa,EAAqB8xC,GACjD,IAAIx4B,EACJ,GAAIzwC,KAAK2qB,MAAM,IACRgnB,GACH3xC,KAAKwiB,MAAM3E,EAAOzD,gBAAiB,CACjC7V,GAAIvE,KAAK2kB,MAAM8D,cACf1S,WAAY,MAGhB06B,EAAM,UACD,GAAIzwC,KAAK2qB,MAAM,IAAK,CACzB,MAAMqgD,EAAqBhrE,KAAK2kB,MAAMkC,SACtC4pB,EAAMzwC,KAAK2qD,eAAe3qD,KAAKkxC,YAAY/Z,GAAsB6zC,EACnE,MAAO,GAAIhrE,KAAK2qB,MAAM,IAAK,CACzB3qB,KAAKovB,aAAa,sBACb65C,GACHjpE,KAAKwiB,MAAM3E,EAAOrE,8BAA+B,CAC/CjV,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MAAMpI,EAAOze,KAAK05B,YAClB15B,KAAK0iB,OACL+tB,EAAMzwC,KAAK65B,WAAWpb,EAAM,sBAC9B,MACEgyB,EAAMzwC,KAAKmxC,wBAAwBha,EAAqBn3B,KAAK2qD,gBAE/D,OAAOla,CACT,CACAe,gBAAgBuT,GACd,MAAMtmC,EAAOze,KAAK05B,YACZn4B,EAAOvB,KAAKqkE,oBAAoBtf,GACtC,OAAO/kD,KAAKmoD,iBAAiB1pC,EAAMld,EACrC,CACA4mD,iBAAiB1pC,EAAMld,GAGrB,OAFAkd,EAAKld,KAAOA,EACZkd,EAAK3B,IAAInP,eAAiBpM,EACnBvB,KAAK65B,WAAWpb,EAAM,aAC/B,CACA4lD,oBAAoBtf,GAClB,IAAIxjD,EACJ,MAAM,SACJslB,EAAQ,KACR5V,GACEjR,KAAK2kB,MACL/Y,EAA2BqF,GAC7B1P,EAAOvB,KAAK2kB,MAAMpW,MAElBvO,KAAK+V,aAEP,MAAM/J,EAAmDiF,GAhwW3C,GAywWd,OARI8zC,EACE/4C,GACFhM,KAAKgvB,aAAa,KAGpBhvB,KAAKguD,kBAAkBzsD,EAAMslB,EAAU7a,GAAgB,GAEzDhM,KAAK0iB,OACEnhB,CACT,CACAysD,kBAAkBtuC,EAAMmH,EAAUo5C,EAAetvB,GAC/C,KAAIjxB,EAAK5S,OAAS,KAx5UtB,SAA2B4S,GACzB,OAAOM,GAAoBH,IAAIH,EACjC,CAy5USqtD,CAAkBrtD,GAGvB,GAAIugD,GAr6UR,SAAmBvgD,GACjB,OAAOJ,GAASO,IAAIH,EACtB,CAm6UyBstD,CAAUttD,GAC7B1f,KAAKwiB,MAAM3E,EAAOjE,kBAAmB,CACnCrV,GAAIsiB,EACJ9lB,QAAS2e,SAKb,IADsB1f,KAAK2kB,MAAM+B,OAA0BiqB,EAAY5wB,GAA2BH,GAAxDH,IACzBC,EAAM1f,KAAK2f,UAC1B3f,KAAKwiB,MAAM3E,EAAO3D,uBAAwB,CACxC3V,GAAIsiB,EACJtR,aAAcmK,SAGX,GAAa,UAATA,GACT,GAAI1f,KAAKw4B,UAAUrD,SAIjB,YAHAn1B,KAAKwiB,MAAM3E,EAAOtC,uBAAwB,CACxChX,GAAIsiB,SAIH,GAAa,UAATnH,EAAkB,CAC3B,GAAI1f,KAAKw4B,UAAUtD,SAIjB,YAHAl1B,KAAKwiB,MAAM3E,EAAOrM,uBAAwB,CACxCjN,GAAIsiB,IAIR,GAAI7mB,KAAK+hB,MAAMP,cAIb,YAHAxhB,KAAKwiB,MAAM3E,EAAOpM,oCAAqC,CACrDlN,GAAIsiB,IAIR7mB,KAAK04B,gBAAgBhE,gCAAgC,CACnDnwB,GAAIsiB,GAER,MAAO,GAAa,cAATnH,GACL1f,KAAK+hB,MAAMR,gCAIb,YAHAvhB,KAAKwiB,MAAM3E,EAAOvM,iBAAkB,CAClC/M,GAAIsiB,GAKZ,CACAohD,iBACE,QAAIjoE,KAAKw4B,UAAUtD,aACfl1B,KAAKwB,QAAQ1C,2BAA8BkB,KAAK+hB,MAAMd,WAI5D,CACAinD,WAAWrhD,GACT,MAAMpI,EAAOze,KAAK25B,YAAY9S,GAmB9B,OAlBA7mB,KAAK04B,gBAAgBnE,gCAAgC1W,EAAOnM,+BAAgC,CAC1FnN,GAAIka,IAEFze,KAAKktB,IAAI,KACXltB,KAAKwiB,MAAM3E,EAAO5F,kBAAmB,CACnC1T,GAAIka,IAGHze,KAAK+hB,MAAMd,YAAejhB,KAAKwB,QAAQ1C,4BACtCkB,KAAKsoE,mBACPtoE,KAAKqjB,6BAA8B,EAEnCrjB,KAAKojB,mBAAoB,GAGxBpjB,KAAK2kB,MAAMkD,YACdpJ,EAAKrB,SAAWpd,KAAKw5D,gBAAgB,MAAM,IAEtCx5D,KAAK65B,WAAWpb,EAAM,kBAC/B,CACA6pD,mBACE,GAAItoE,KAAKq2B,wBAAyB,OAAO,EACzC,MAAM,KACJplB,GACEjR,KAAK2kB,MACT,OAAgB,KAAT1T,GAAwB,KAATA,GAAwB,IAATA,GAAc9E,EAAgB8E,IAAkB,MAATA,IAAiBjR,KAAK2kB,MAAMyD,aAAwB,MAATnX,GAAyB,KAATA,GAAejR,KAAKsjB,UAAU,gBAA2B,KAATrS,CACzL,CACAw1D,aACE,MAAMhoD,EAAOze,KAAK05B,YAClB15B,KAAK04B,gBAAgBnE,gCAAgC1W,EAAOrC,iBAAkB,CAC5EjX,GAAIka,IAENze,KAAK0iB,OACL,IAAIuqD,GAAa,EACb7vD,EAAW,KACf,IAAKpd,KAAKq2B,wBAER,OADA42C,EAAajtE,KAAKktB,IAAI,IACdltB,KAAK2kB,MAAM1T,MACjB,KAAK,GACL,KAAK,IACL,KAAK,EACL,KAAK,GACL,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,GACH,IAAKg8D,EAAY,MACnB,QACE7vD,EAAWpd,KAAKgqD,mBAKtB,OAFAvrC,EAAKyuD,SAAWD,EAChBxuD,EAAKrB,SAAWA,EACTpd,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAwoD,6BAA6B52B,EAAMwvB,GAC7B7/D,KAAKsjB,UAAU,CAAC,mBAAoB,CACtCwM,SAAU,YAEQ,uBAAdugB,EAAKp/B,MACPjR,KAAKwiB,MAAM3E,EAAOxB,+BAAgC,CAChD9X,GAAIs7D,GAIZ,CACA4H,8BAA8B0F,EAAWtmD,GACvC,GAAI7mB,KAAKotE,kBAAkBD,GAAY,CACrC,MAAMjqB,EAAWljD,KAAK25B,YAAY9S,GAElC,OADAq8B,EAAStF,OAASuvB,EACXntE,KAAK65B,WAAWqpB,EAAU,uBACnC,CAAO,CACL,MAAMA,EAAWljD,KAAK25B,YAAY9S,GAGlC,OAFA7mB,KAAKqtE,mCAAmCxmD,GACxCq8B,EAAS1T,WAAa29B,EACfntE,KAAK65B,WAAWqpB,EAAU,0BACnC,CACF,CACAkqB,kBAAkB59B,GAChB,OAAQA,EAAWv+B,MACjB,IAAK,mBACH,OAAQu+B,EAAWmJ,UAAY34C,KAAKotE,kBAAkB59B,EAAWlhC,QACnE,IAAK,aACH,OAAO,EACT,QACE,OAAO,EAEb,CACA++D,mCAAmCxmD,GACjC,GAAI7mB,KAAK2qB,MAAM,IACb,MAAM3qB,KAAKwiB,MAAM3E,EAAO1B,oBAAqB,CAC3C5X,GAAIvE,KAAK2kB,MAAMkC,WAGd7mB,KAAK8nE,yCACR9nE,KAAKwiB,MAAM3E,EAAOvB,oBAAqB,CACrC/X,GAAIsiB,GAGV,CACA0gD,wBAAwB+F,GACtB,MAAMC,EAAyBvtE,KAAK2kB,MAAM+C,aAC1C1nB,KAAK2kB,MAAM+C,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAEjB,IACE,OAAO0lD,GACT,CAAE,QACAttE,KAAK2kB,MAAM+C,aAAe6lD,CAC5B,CACF,CACAC,mCAAmCF,GACjC,IAAIttE,KAAKsjB,UAAU,CAAC,mBAAoB,CACtCwM,SAAU,WAaV,OAAOw9C,IAZJ,CACH,MAAMC,EAAyBvtE,KAAK2kB,MAAM+C,aAC1C1nB,KAAK2kB,MAAM+C,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAEjB,IACE,OAAO0lD,GACT,CAAE,QACAttE,KAAK2kB,MAAM+C,aAAe6lD,CAC5B,CACF,CAGF,CACA5F,+BAA+B2F,GAC7B,MAAMG,EAA6BztE,KAAK2kB,MAAMkD,UAC9C7nB,KAAK2kB,MAAMkD,WAAY,EACvB,IACE,OAAOylD,GACT,CAAE,QACAttE,KAAK2kB,MAAMkD,UAAY4lD,CACzB,CACF,CACApH,WAAWiH,GACT,MAAM/sD,EAAQvgB,KAAKw4B,UAAUvD,eAE7B,GArgRS,GAogR0B1U,EACf,CAClBvgB,KAAKw4B,UAAU3W,MAtgRR,EAsgRctB,GACrB,IACE,OAAO+sD,GACT,CAAE,QACAttE,KAAKw4B,UAAU1W,MACjB,CACF,CACA,OAAOwrD,GACT,CACAnH,cAAcmH,GACZ,MAAM/sD,EAAQvgB,KAAKw4B,UAAUvD,eAE7B,GAlhRS,EAihR2B1U,EACd,CACpBvgB,KAAKw4B,UAAU3W,OAAc,EAARtB,GACrB,IACE,OAAO+sD,GACT,CAAE,QACAttE,KAAKw4B,UAAU1W,MACjB,CACF,CACA,OAAOwrD,GACT,CACA7C,yBACEzqE,KAAK2kB,MAAM+C,aAAaE,cAAgB,CAC1C,CACA4iD,0CACE,OAAOxqE,KAAK2kB,MAAM+C,aAAaC,0BAA4B,CAC7D,CACAmgD,wCACE,OAAgD,MAAzC9nE,KAAK2kB,MAAM+C,aAAaE,eAAyB5nB,KAAK2kB,MAAM+C,aAAaE,eAAiB,CACnG,CACAggD,wBAAwBZ,GACtB,MAAMngD,EAAW7mB,KAAK2kB,MAAMkC,SAC5B7mB,KAAK2kB,MAAMqC,iBAAmBhnB,KAAK2kB,MAAMnX,MACzC,MAAM27D,EAAgCnpE,KAAK2kB,MAAMmD,2BACjD9nB,KAAK2kB,MAAMmD,4BAA6B,EACxC,MAAM4lD,EAAM1tE,KAAK4/D,YAAY5/D,KAAK8mE,2BAA4BjgD,EAAUmgD,GAExE,OADAhnE,KAAK2kB,MAAMmD,2BAA6BqhD,EACjCuE,CACT,CACAzD,wBACEjqE,KAAKovB,aAAa,gBAClB,MAAM3Q,EAAOze,KAAK05B,YAClB15B,KAAK0iB,OACA1iB,KAAK2qB,MAAM,IACd3qB,KAAK+V,WAAW,KAAM,GAExB,MAAMi6C,EAAUhwD,KAAK25B,YAAY35B,KAAK2kB,MAAMmC,QAC5C9mB,KAAK0iB,OACL,MAAMirD,EAAe3tE,KAAKg4B,kBAAiB,GAC3Ch4B,KAAK24B,qBACL,IACEla,EAAK09B,KAAOn8C,KAAK4tE,aAAa5d,EAAS,EAAG,SAC5C,CAAE,QACA2d,GACF,CACA,OAAO3tE,KAAK65B,WAAWpb,EAAM,mBAC/B,CACAquC,gCAAgClhB,GAAO,EAEzC,MAAMiiC,GAAY,CACdx8D,KAAM,QAERy8D,GAAc,CACZz8D,KAAM,UAEJ08D,GAAgB,mBAChBC,GAA4B,mBA4GlC,MAAMC,WAAwBrI,GAC5B7V,cAAc5V,EAAM6V,GAMlB,OALA7V,EAAK6V,QAAUhwD,KAAK4tE,aAAa5d,GACjC7V,EAAKp2B,SAAW/jB,KAAK2kB,MAAMZ,SACvB/jB,KAAKwB,QAAQjC,SACf46C,EAAK56C,OAhHX,SAA4BA,EAAQmmB,GAClC,IAAK,IAAIjZ,EAAI,EAAGA,EAAIlN,EAAOuN,OAAQL,IAAK,CACtC,MAAM3M,EAAQP,EAAOkN,IACf,KACJwE,GACEnR,EACJ,GAAoB,iBAATmR,EAAmB,CAE1B,GAAa,MAATA,EAAc,CAChB,MAAM,IACJ6L,EAAG,MACHtP,EAAK,MACLe,EAAK,IACLd,GACE3N,EACEouE,EAAa1gE,EAAQ,EACrB2gE,EAAavgE,EAA+BkP,EAAItP,MAAO,GAC7DjO,EAAO+lB,OAAO7Y,EAAG,EAAG,IAAI6f,GAAM,CAC5Brb,KAAM7E,EAAiB,IACvBmC,MAAO,IACPf,MAAOA,EACPC,IAAKygE,EACLrnD,SAAU/J,EAAItP,MACdsZ,OAAQqnD,IACN,IAAI7hD,GAAM,CACZrb,KAAM7E,EAAiB,KACvBmC,MAAOA,EACPf,MAAO0gE,EACPzgE,IAAKA,EACLoZ,SAAUsnD,EACVrnD,OAAQhK,EAAIrP,OAEdhB,IACA,QACF,CACA,GAAIN,EAAgB8E,GAAO,CACzB,MAAM,IACJ6L,EAAG,MACHtP,EAAK,MACLe,EAAK,IACLd,GACE3N,EACEsuE,EAAe5gE,EAAQ,EACvB6gE,EAAkBzgE,EAA+BkP,EAAItP,MAAO,GAClE,IAAI8gE,EAoBAC,EAAeC,EAAoBC,EAAuBC,EAlB5DJ,EAD8B,KAA5B5oD,EAAMC,WAAWnY,GACN,IAAI8e,GAAM,CACrBrb,KAAM7E,EAAiB,IACvBmC,MAAO,IACPf,MAAOA,EACPC,IAAK2gE,EACLvnD,SAAU/J,EAAItP,MACdsZ,OAAQunD,IAGG,IAAI/hD,GAAM,CACrBrb,KAAM7E,EAAiB,GACvBmC,MAAO,IACPf,MAAOA,EACPC,IAAK2gE,EACLvnD,SAAU/J,EAAItP,MACdsZ,OAAQunD,IAIC,KAATp9D,GACFu9D,EAAqB/gE,EAAM,EAC3BghE,EAAwB7gE,EAA+BkP,EAAIrP,KAAM,GACjE8gE,EAA0B,OAAVhgE,EAAiB,KAAOA,EAAMqa,MAAM,GAAI,GACxD8lD,EAAW,IAAIpiD,GAAM,CACnBrb,KAAM7E,EAAiB,IACvBmC,MAAO,IACPf,MAAOghE,EACP/gE,IAAKA,EACLoZ,SAAU4nD,EACV3nD,OAAQhK,EAAIrP,QAGd+gE,EAAqB/gE,EAAM,EAC3BghE,EAAwB7gE,EAA+BkP,EAAIrP,KAAM,GACjE8gE,EAA0B,OAAVhgE,EAAiB,KAAOA,EAAMqa,MAAM,GAAI,GACxD8lD,EAAW,IAAIpiD,GAAM,CACnBrb,KAAM7E,EAAiB,IACvBmC,MAAO,KACPf,MAAOghE,EACP/gE,IAAKA,EACLoZ,SAAU4nD,EACV3nD,OAAQhK,EAAIrP,OAGhBlO,EAAO+lB,OAAO7Y,EAAG,EAAG6hE,EAAY,IAAIhiD,GAAM,CACxCrb,KAAM7E,EAAiB,IACvBmC,MAAOggE,EACP/gE,MAAO4gE,EACP3gE,IAAK+gE,EACL3nD,SAAUwnD,EACVvnD,OAAQ2nD,IACNC,GACJjiE,GAAK,EACL,QACF,CAEF3M,EAAMmR,KAAO7E,EAAiB6E,EAChC,CACF,CACA,OAAO1R,CACT,CAMoBovE,CAAmB3uE,KAAKT,OAAQS,KAAK0lB,QAE9C1lB,KAAK65B,WAAWsgB,EAAM,OAC/B,CACAyzB,aAAa5d,EAASviD,EAAM,IAAKhP,EAAauB,KAAKwB,QAAQ/C,YAIzD,GAHAuxD,EAAQvxD,WAAaA,EACrBuxD,EAAQ4e,YAAc5uE,KAAK6uE,4BAC3B7uE,KAAK47C,eAAeoU,GAAS,GAAM,EAAMviD,GACrCzN,KAAK2f,WAAa3f,KAAKwB,QAAQrC,wBAA0Ba,KAAK+hB,MAAMjB,iBAAiBuP,KAAO,EAC9F,IAAK,MAAO5c,EAAWlP,KAAO+Y,MAAM8V,KAAKpzB,KAAK+hB,MAAMjB,kBAClD9gB,KAAKwiB,MAAM3E,EAAOlG,sBAAuB,CACvCpT,KACAkP,cAIN,IAAIq7D,EAMJ,OAJEA,EADU,MAARrhE,EACgBzN,KAAK65B,WAAWm2B,EAAS,WAEzBhwD,KAAK85B,aAAak2B,EAAS,UAAWpiD,EAA+B5N,KAAK2kB,MAAMkC,UAAW,IAExGioD,CACT,CACAC,gBAAgB1zB,GACd,MAAMH,EAAYG,EAClBH,EAAUjqC,KAAO,YACjBiqC,EAAU3sC,MAAQ2sC,EAAU1L,kBACrB0L,EAAU1L,WACjB,MAAMw/B,EAAmB9zB,EAAU3sC,MAC7B6sC,EAAkB4zB,EAAiBzgE,MACnC4sC,EAAMn7C,KAAK0lB,MAAMkD,MAAMomD,EAAiBxhE,MAAOwhE,EAAiBvhE,KAChEkb,EAAMqmD,EAAiBzgE,MAAQ4sC,EAAIvyB,MAAM,GAAI,GAKnD,OAJA5oB,KAAK01B,SAASs5C,EAAkB,MAAO7zB,GACvCn7C,KAAK01B,SAASs5C,EAAkB,WAAYrmD,GAC5C3oB,KAAK01B,SAASs5C,EAAkB,kBAAmB5zB,GACnD4zB,EAAiB/9D,KAAO,mBACjBiqC,CACT,CACA2zB,4BACE,IAAK7uE,KAAK2qB,MAAM,IACd,OAAO,KAET,MAAMlM,EAAOze,KAAK05B,YAGlB,OAFAjb,EAAKlQ,MAAQvO,KAAK2kB,MAAMpW,MACxBvO,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,uBAC/B,CACA+kC,QACE,QAAKxjD,KAAK41B,aAAa,KAGhB51B,KAAKivE,yBACd,CACAtK,0BAA0Bx7C,EAAIjM,GAC5B,GAAIgC,GAAkBiK,GAAK,CAEzB,GADA6kD,GAA0BtgD,UAAYxQ,EAClC8wD,GAA0B7uD,KAAKnf,KAAK0lB,OAAQ,CAC9C,MAAMwpD,EAAQlvE,KAAK+tB,eAAeigD,GAA0BtgD,WAC5D,IAAKrO,GAAiB6vD,IAAoB,KAAVA,EAC9B,OAAO,CAEX,CACA,OAAO,CACT,CAAO,OAAW,KAAP/lD,CAKb,CACAgmD,uBAAuBhmD,GACrB,OAAc,KAAPA,GAAoB,MAAPA,CACtB,CACA8lD,0BACE,MAAMvsD,EAAO1iB,KAAKwtB,iBACZwI,EAASh2B,KAAK+tB,eAAerL,GACnC,OAAO1iB,KAAKmvE,uBAAuBn5C,IAAWh2B,KAAK2kE,0BAA0B3uC,EAAQtT,EACvF,CACA0sD,sCACE,MAAM1sD,EAAO1iB,KAAK4tB,uBACZoI,EAASh2B,KAAK+tB,eAAerL,GACnC,OAAO1iB,KAAK2kE,0BAA0B3uC,EAAQtT,EAChD,CACA2sD,mBACE,MAAM,KACJp+D,EAAI,YACJmX,GACEpoB,KAAKqtB,YACT,QAAa,MAATpc,IAAiBmX,KAEVzc,EAAkBsF,KAAUjR,KAAKs2B,yBAC1Ct2B,KAAKovB,aAAa,+BACX,QAFF,EAIT,CACAkgD,kBACE,OAAOtvE,KAAKipD,mBAAmB,GACjC,CACAsmB,yBACE,OAAOvvE,KAAKipD,mBAAmB,IAAUjpD,KAAKwB,QAAQ7B,QAAUK,KAAK2kB,MAAM+B,OAAS,EAAI,GAC1F,CACAo+C,gDAAgD0K,GAAuB,GACrE,IAAIjvD,EAAQ,EAOZ,OANIvgB,KAAKwB,QAAQ7B,SAAWK,KAAK2kB,MAAM+B,SACrCnG,GAAS,EACLivD,IACFjvD,GAAS,IAGNvgB,KAAKipD,mBAAmB1oC,EACjC,CACAkvD,iBACE,OAAOzvE,KAAKipD,mBAAmB,EACjC,CACAA,mBAAmB1oC,GACjB,IAAIyxB,EAAa,KAIjB,OAHIhyC,KAAK2qB,MAAM,MACbqnB,EAAahyC,KAAK2pE,iBAAgB,IAE7B3pE,KAAKygE,sBAAsBlgD,EAAOyxB,EAC3C,CACAyuB,sBAAsBlgD,EAAOyxB,GAC3B,MAAM0rB,EAAY19D,KAAK2kB,MAAM1T,KACvBwN,EAAOze,KAAK05B,YACZg2C,KAA8B,EAARnvD,GACtBovD,KAAsC,EAARpvD,GAC9Bu7B,EAAmB,EAARv7B,EACjB,OAAQm9C,GACN,KAAK,GACH,OAAO19D,KAAK4vE,4BAA4BnxD,GAAM,GAChD,KAAK,GACH,OAAOze,KAAK4vE,4BAA4BnxD,GAAM,GAChD,KAAK,GACH,OAAOze,KAAK6vE,uBAAuBpxD,GACrC,KAAK,GACH,OAAOze,KAAK8vE,sBAAsBrxD,GACpC,KAAK,GACH,OAAOze,KAAK+vE,kBAAkBtxD,GAChC,KAAK,GACH,GAAiC,KAA7Bze,KAAK2tB,oBAA4B,MAMrC,OALKgiD,GACH3vE,KAAKwiB,MAAMxiB,KAAK2kB,MAAM+B,OAAS7I,EAAOM,eAAiBne,KAAKwB,QAAQ7B,OAASke,EAAO7E,qBAAuB6E,EAAO9E,eAAgB,CAChIxU,GAAIvE,KAAK2kB,MAAMkC,WAGZ7mB,KAAK49D,uBAAuBn/C,GAAM,GAAQixD,GAAoBC,GACvE,KAAK,GAEH,OADKD,GAAkB1vE,KAAK+V,aACrB/V,KAAK69D,WAAW79D,KAAKgjE,oBAAoBhxB,EAAYvzB,IAAO,GACrE,KAAK,GACH,OAAOze,KAAKgwE,iBAAiBvxD,GAC/B,KAAK,GACH,OAAOze,KAAKiwE,qBAAqBxxD,GACnC,KAAK,GACH,OAAOze,KAAKkwE,qBAAqBzxD,GACnC,KAAK,GACH,OAAOze,KAAKmwE,oBAAoB1xD,GAClC,KAAK,GACH,OAAOze,KAAKowE,kBAAkB3xD,GAChC,KAAK,IACH,GAAIze,KAAK2kB,MAAMyD,cAAgBpoB,KAAKovE,sCAClC,MAYF,OAVApvE,KAAKovB,aAAa,+BACbpvB,KAAK+hB,MAAMpC,UAAY3f,KAAK+hB,MAAMhB,WACrC/gB,KAAKwiB,MAAM3E,EAAOtD,2BAA4B,CAC5ChW,GAAIvE,KAAK2kB,MAAMkC,WAEP6oD,GACV1vE,KAAKwiB,MAAM3E,EAAO/D,6BAA8B,CAC9CvV,GAAIvE,KAAK2kB,MAAMkC,WAGZ7mB,KAAK89D,kBAAkBr/C,EAAM,SACtC,KAAK,GACH,CACE,GAAIze,KAAK2kB,MAAMyD,YACb,MAEF,MAAM1F,EAAO1iB,KAAKwtB,iBACZwI,EAASh2B,KAAK+tB,eAAerL,GACnC,GAAe,KAAXsT,EAAe,CACjB,IAAK05C,GAAoB1vE,KAAKs2B,wBAAyB,MACvD,IAAKt2B,KAAK2kE,0BAA0B3uC,EAAQtT,IAAoB,MAAXsT,EACnD,KAEJ,CACF,CACF,KAAK,GAEI05C,GACH1vE,KAAKwiB,MAAM3E,EAAO/D,6BAA8B,CAC9CvV,GAAIvE,KAAK2kB,MAAMkC,WAIvB,KAAK,GACH,CACE,MAAMxV,EAAOrR,KAAK2kB,MAAMpW,MACxB,OAAOvO,KAAK89D,kBAAkBr/C,EAAMpN,EACtC,CACF,KAAK,GACH,OAAOrR,KAAKqwE,oBAAoB5xD,GAClC,KAAK,GACH,OAAOze,KAAKswE,mBAAmB7xD,GACjC,KAAK,EACH,OAAOze,KAAK+kE,aACd,KAAK,GACH,OAAO/kE,KAAKuwE,oBAAoB9xD,GAClC,KAAK,GACH,CACE,MAAM+xD,EAAoBxwE,KAAK2tB,oBAC/B,GAA0B,KAAtB6iD,GAAkD,KAAtBA,EAC9B,KAEJ,CACF,KAAK,GACH,CAOE,IAAI9lB,EAaJ,OAnBK1qD,KAAKwB,QAAQvC,6BAAgC68C,GAChD97C,KAAKwiB,MAAM3E,EAAOlE,uBAAwB,CACxCpV,GAAIvE,KAAK2kB,MAAMkC,WAGnB7mB,KAAK0iB,OAEa,KAAdg7C,GACFhT,EAAS1qD,KAAKmjD,YAAY1kC,GACN,sBAAhBisC,EAAOz5C,MAAkCy5C,EAAO7sB,YAAoC,UAAtB6sB,EAAO7sB,aACvE79B,KAAKojB,mBAAoB,KAG3BsnC,EAAS1qD,KAAK+9C,YAAYt/B,EAAMuzB,IACZ,2BAAhB0Y,EAAOz5C,MAAuCy5C,EAAOjH,YAAoC,UAAtBiH,EAAOjH,cAA2C,yBAAhBiH,EAAOz5C,MAAqCy5C,EAAOjH,YAAoC,UAAtBiH,EAAOjH,aAA2C,6BAAhBiH,EAAOz5C,OACjNjR,KAAKojB,mBAAoB,IAG7BpjB,KAAK6qD,wBAAwBH,GACtBA,CACT,CACF,QAEI,GAAI1qD,KAAKywE,kBAOP,OANKf,GACH1vE,KAAKwiB,MAAM3E,EAAOtM,sCAAuC,CACvDhN,GAAIvE,KAAK2kB,MAAMkC,WAGnB7mB,KAAK0iB,OACE1iB,KAAK49D,uBAAuBn/C,GAAM,GAAOixD,GAAoBC,GAI5E,MAAMe,EAAY1wE,KAAK2kB,MAAMpW,MACvB0iC,EAAOjxC,KAAK+/C,kBAClB,OAAIp0C,EAAkB+xD,IAA4B,eAAdzsB,EAAKhgC,MAAyBjR,KAAKktB,IAAI,IAClEltB,KAAK2wE,sBAAsBlyD,EAAMiyD,EAAWz/B,EAAM1wB,GAElDvgB,KAAKmpD,yBAAyB1qC,EAAMwyB,EAAMe,EAErD,CACA6Y,wBAAwBpsC,GACjBze,KAAKwB,QAAQvC,6BAAgCe,KAAK2f,UACrD3f,KAAKwiB,MAAM3E,EAAOrO,oBAAqB,CACrCjL,GAAIka,GAGV,CACAmyD,gCACE,QAAI5wE,KAAKsjB,UAAU,sBACZtjB,KAAKsjB,UAAU,gBAAkF,IAAjEtjB,KAAK2jB,gBAAgB,aAAc,yBAC5E,CACAq/C,oBAAoB6N,EAAiBC,EAAWC,GAe9C,OAdIF,IACEC,EAAU9+B,YAAc8+B,EAAU9+B,WAAWllC,OAAS,GACoB,kBAAjE9M,KAAK2jB,gBAAgB,aAAc,2BAC5C3jB,KAAKwiB,MAAM3E,EAAOpL,4BAA6B,CAC7ClO,GAAIusE,EAAU9+B,WAAW,KAG7B8+B,EAAU9+B,WAAW/tB,WAAW4sD,IAEhCC,EAAU9+B,WAAa6+B,EAEzB7wE,KAAKi6B,2BAA2B62C,EAAWD,EAAgB,IACvDE,GAAY/wE,KAAKi6B,2BAA2B82C,EAAYD,IAEvDA,CACT,CACArO,0BACE,OAAOziE,KAAK2qB,MAAM,GACpB,CACAg/C,gBAAgBqH,GACd,MAAMh/B,EAAa,GACnB,GACEA,EAAWzvC,KAAKvC,KAAKiyC,wBACdjyC,KAAK2qB,MAAM,KACpB,GAAI3qB,KAAK2qB,MAAM,IACRqmD,GACHhxE,KAAK+V,aAEF/V,KAAK4wE,iCACR5wE,KAAKwiB,MAAM3E,EAAOlL,qBAAsB,CACtCpO,GAAIvE,KAAK2kB,MAAMkC,gBAGd,IAAK7mB,KAAKyiE,0BACf,MAAMziE,KAAKwiB,MAAM3E,EAAOhE,2BAA4B,CAClDtV,GAAIvE,KAAK2kB,MAAMkC,WAGnB,OAAOmrB,CACT,CACAC,iBACEjyC,KAAKyyB,gBAAgB,CAAC,aAAc,sBACpC,MAAMhU,EAAOze,KAAK05B,YAElB,GADA15B,KAAK0iB,OACD1iB,KAAKsjB,UAAU,cAAe,CAChC,MAAMuD,EAAW7mB,KAAK2kB,MAAMkC,SAC5B,IAAIoqB,EACJ,GAAIjxC,KAAK2qB,MAAM,IAAK,CAClB,MAAM9D,EAAW7mB,KAAK2kB,MAAMkC,SAC5B7mB,KAAK0iB,OACLuuB,EAAOjxC,KAAK+/C,kBACZ//C,KAAK02B,OAAO,IACZua,EAAOjxC,KAAKmrE,gBAAgBtkD,EAAUoqB,GACtC,MAAMggC,EAAiBjxE,KAAK2kB,MAAMkC,SAClCpI,EAAK+wB,WAAaxvC,KAAKwiE,6BAA6BvxB,IACiB,IAAjEjxC,KAAK2jB,gBAAgB,aAAc,2BAAuClF,EAAK+wB,aAAeyB,GAChGjxC,KAAKwiB,MAAM3E,EAAOtL,qCAAsC,CACtDhO,GAAI0sE,GAGV,KAAO,CAEL,IADAhgC,EAAOjxC,KAAKwxC,iBAAgB,GACrBxxC,KAAKktB,IAAI,KAAK,CACnB,MAAMzO,EAAOze,KAAK25B,YAAY9S,GAC9BpI,EAAKnQ,OAAS2iC,EACVjxC,KAAK2qB,MAAM,MACb3qB,KAAK2zB,WAAWD,eAAe1zB,KAAK2kB,MAAMpW,MAAOvO,KAAK2kB,MAAMkC,UAC5DpI,EAAKoZ,SAAW73B,KAAKqyC,oBAErB5zB,EAAKoZ,SAAW73B,KAAKwxC,iBAAgB,GAEvC/yB,EAAKk6B,UAAW,EAChB1H,EAAOjxC,KAAK65B,WAAWpb,EAAM,mBAC/B,CACAA,EAAK+wB,WAAaxvC,KAAKwiE,6BAA6BvxB,EACtD,CACF,MACExyB,EAAK+wB,WAAaxvC,KAAKwoE,sBAEzB,OAAOxoE,KAAK65B,WAAWpb,EAAM,YAC/B,CACA+jD,6BAA6BvxB,GAC3B,GAAIjxC,KAAKktB,IAAI,IAAK,CAChB,MAAMzO,EAAOze,KAAK45B,gBAAgBqX,GAIlC,OAHAxyB,EAAKm/B,OAAS3M,EACdxyB,EAAKmH,UAAY5lB,KAAKuvD,6BAA6B,IAAI,GACvDvvD,KAAK8wC,iBAAiBryB,EAAKmH,WACpB5lB,KAAK65B,WAAWpb,EAAM,iBAC/B,CACA,OAAOwyB,CACT,CACA2+B,4BAA4BnxD,EAAMomD,GAShC,OARA7kE,KAAK0iB,OACD1iB,KAAKu2B,mBACP9X,EAAK5d,MAAQ,MAEb4d,EAAK5d,MAAQb,KAAKwxC,kBAClBxxC,KAAKw2B,aAEPx2B,KAAK4kE,oBAAoBnmD,EAAMomD,GACxB7kE,KAAK65B,WAAWpb,EAAMomD,EAAU,iBAAmB,oBAC5D,CACAD,oBAAoBnmD,EAAMomD,GACxB,IAAIp4D,EACJ,IAAKA,EAAI,EAAGA,EAAIzM,KAAK2kB,MAAMoD,OAAOjb,SAAUL,EAAG,CAC7C,MAAMykE,EAAMlxE,KAAK2kB,MAAMoD,OAAOtb,GAC9B,GAAkB,MAAdgS,EAAK5d,OAAiBqwE,EAAI3vE,OAASkd,EAAK5d,MAAMU,KAAM,CACtD,GAAgB,MAAZ2vE,EAAI7/D,OAAiBwzD,GAAwB,SAAbqM,EAAI7/D,MAAkB,MAC1D,GAAIoN,EAAK5d,OAASgkE,EAAS,KAC7B,CACF,CACA,GAAIp4D,IAAMzM,KAAK2kB,MAAMoD,OAAOjb,OAAQ,CAClC,MAAMmE,EAAO4zD,EAAU,iBAAmB,oBAC1C7kE,KAAKwiB,MAAM3E,EAAO7J,qBAAsB,CACtCzP,GAAIka,EACJxN,QAEJ,CACF,CACA4+D,uBAAuBpxD,GAGrB,OAFAze,KAAK0iB,OACL1iB,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,oBAC/B,CACA0yD,wBACEnxE,KAAK02B,OAAO,IACZ,MAAM/N,EAAM3oB,KAAK+/C,kBAEjB,OADA//C,KAAK02B,OAAO,IACL/N,CACT,CACAmnD,sBAAsBrxD,GAQpB,OAPAze,KAAK0iB,OACL1iB,KAAK2kB,MAAMoD,OAAOxlB,KAAKsrE,IACvBpvD,EAAK09B,KAAOn8C,KAAKwtE,oCAAmC,IAAMxtE,KAAKyvE,mBAC/DzvE,KAAK2kB,MAAMoD,OAAO9a,MAClBjN,KAAK02B,OAAO,IACZjY,EAAKU,KAAOnf,KAAKmxE,wBACjBnxE,KAAKktB,IAAI,IACFltB,KAAK65B,WAAWpb,EAAM,mBAC/B,CACAsxD,kBAAkBtxD,GAChBze,KAAK0iB,OACL1iB,KAAK2kB,MAAMoD,OAAOxlB,KAAKsrE,IACvB,IAAIuD,EAAU,KAMd,GALIpxE,KAAKioE,kBAAoBjoE,KAAKk2B,cAAc,MAC9Ck7C,EAAUpxE,KAAK2kB,MAAMsD,iBAEvBjoB,KAAK+hB,MAAMF,MAxrWK,GAyrWhB7hB,KAAK02B,OAAO,IACR12B,KAAK2qB,MAAM,IAIb,OAHgB,OAAZymD,GACFpxE,KAAK+V,WAAWq7D,GAEXpxE,KAAKqxE,SAAS5yD,EAAM,MAE7B,MAAM6yD,EAAgBtxE,KAAK41B,aAAa,IAClC27C,EAAkBvxE,KAAK41B,aAAa,KACpC47C,EAAeF,GAAiBtxE,KAAKivE,2BAA6BsC,GAAmBvxE,KAAKqvE,mBAChG,GAAIrvE,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO6mD,EAAc,CACpD,MAAMC,EAAWzxE,KAAK05B,YAChBroB,EAAOrR,KAAK2kB,MAAMpW,MACxBvO,KAAK0iB,OACL1iB,KAAK0xE,SAASD,GAAU,EAAMpgE,GAC9B,MAAMmX,EAAOxoB,KAAK65B,WAAW43C,EAAU,uBACjCE,EAAU3xE,KAAK2qB,MAAM,IAM3B,OALIgnD,GAAWJ,GACbvxE,KAAKwiB,MAAM3E,EAAOjK,WAAY,CAC5BrP,GAAIikB,KAGHmpD,GAAW3xE,KAAK41B,aAAa,OAAsC,IAA7BpN,EAAKg4C,aAAa1zD,OACpD9M,KAAK4xE,WAAWnzD,EAAM+J,EAAM4oD,IAErB,OAAZA,GACFpxE,KAAK+V,WAAWq7D,GAEXpxE,KAAKqxE,SAAS5yD,EAAM+J,GAC7B,CACA,MAAMqpD,EAAkB7xE,KAAK41B,aAAa,IACpCuB,EAAsB,IAAI2B,GAC1BtQ,EAAOxoB,KAAK+/C,iBAAgB,EAAM5oB,GAClC26C,EAAU9xE,KAAK41B,aAAa,KAalC,GAZIk8C,IACER,GACFtxE,KAAKwiB,MAAM3E,EAAO/J,SAAU,CAC1BvP,GAAIikB,IAGQ,OAAZ4oD,GAAoBS,GAAiC,eAAdrpD,EAAKvX,MAC9CjR,KAAKwiB,MAAM3E,EAAOhK,WAAY,CAC5BtP,GAAIikB,KAINspD,GAAW9xE,KAAK2qB,MAAM,IAAK,CAC7B3qB,KAAK64B,0BAA0B1B,GAC/Bn3B,KAAK0vC,aAAalnB,GAAM,GACxB,MAAMvX,EAAO6gE,EAAU,iBAAmB,iBAM1C,OALA9xE,KAAKmzC,UAAU3qB,EAAM,CACnB4qB,GAAI,CACFniC,UAGGjR,KAAK4xE,WAAWnzD,EAAM+J,EAAM4oD,EACrC,CAMA,OALEpxE,KAAKk3B,sBAAsBC,GAAqB,GAElC,OAAZi6C,GACFpxE,KAAK+V,WAAWq7D,GAEXpxE,KAAKqxE,SAAS5yD,EAAM+J,EAC7B,CACAo1C,uBAAuBn/C,EAAM8W,EAASw8C,GAEpC,OADA/xE,KAAK0iB,OACE1iB,KAAK4qE,cAAcnsD,EAAM,GAAKszD,EAAuB,EAAI,IAAMx8C,EAAU,EAAI,GACtF,CACAy6C,iBAAiBvxD,GAKf,OAJAze,KAAK0iB,OACLjE,EAAKU,KAAOnf,KAAKmxE,wBACjB1yD,EAAKirC,WAAa1pD,KAAK8kE,kDACvBrmD,EAAKsrC,UAAY/pD,KAAKktB,IAAI,IAAMltB,KAAK8kE,kDAAoD,KAClF9kE,KAAK65B,WAAWpb,EAAM,cAC/B,CACAwxD,qBAAqBxxD,GAanB,OAZKze,KAAKw4B,UAAUpD,WAAcp1B,KAAKwB,QAAQzC,4BAC7CiB,KAAKwiB,MAAM3E,EAAO3J,cAAe,CAC/B3P,GAAIvE,KAAK2kB,MAAMkC,WAGnB7mB,KAAK0iB,OACD1iB,KAAKu2B,mBACP9X,EAAKrB,SAAW,MAEhBqB,EAAKrB,SAAWpd,KAAK+/C,kBACrB//C,KAAKw2B,aAEAx2B,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAyxD,qBAAqBzxD,GACnBze,KAAK0iB,OACLjE,EAAKuzD,aAAehyE,KAAKmxE,wBACzB,MAAMc,EAAQxzD,EAAKwzD,MAAQ,GAI3B,IAAIC,EAHJlyE,KAAK02B,OAAO,GACZ12B,KAAK2kB,MAAMoD,OAAOxlB,KAAKurE,IACvB9tE,KAAK+hB,MAAMF,MAzxWK,GA2xWhB,IAAK,IAAIswD,GAAanyE,KAAK2qB,MAAM,IAC/B,GAAI3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,IAAK,CACpC,MAAMynD,EAASpyE,KAAK2qB,MAAM,IACtBunD,GAAKlyE,KAAK65B,WAAWq4C,EAAK,cAC9BD,EAAM1vE,KAAK2vE,EAAMlyE,KAAK05B,aACtBw4C,EAAIxoB,WAAa,GACjB1pD,KAAK0iB,OACD0vD,EACFF,EAAI/yD,KAAOnf,KAAK+/C,mBAEZoyB,GACFnyE,KAAKwiB,MAAM3E,EAAOjG,yBAA0B,CAC1CrT,GAAIvE,KAAK2kB,MAAMsD,kBAGnBkqD,GAAa,EACbD,EAAI/yD,KAAO,MAEbnf,KAAK02B,OAAO,GACd,MACMw7C,EACFA,EAAIxoB,WAAWnnD,KAAKvC,KAAKuvE,0BAEzBvvE,KAAK+V,aAQX,OAJA/V,KAAK+hB,MAAMD,OACPowD,GAAKlyE,KAAK65B,WAAWq4C,EAAK,cAC9BlyE,KAAK0iB,OACL1iB,KAAK2kB,MAAMoD,OAAO9a,MACXjN,KAAK65B,WAAWpb,EAAM,kBAC/B,CACA0xD,oBAAoB1xD,GASlB,OARAze,KAAK0iB,OACD1iB,KAAKq2B,yBACPr2B,KAAKwiB,MAAM3E,EAAOhG,kBAAmB,CACnCtT,GAAIvE,KAAK2kB,MAAMqD,gBAGnBvJ,EAAKrB,SAAWpd,KAAK+/C,kBACrB//C,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,iBAC/B,CACAokD,wBACE,MAAMnwB,EAAQ1yC,KAAKqxC,mBAQnB,OAPArxC,KAAK+hB,MAAMF,MAAM7hB,KAAKwB,QAAQ7B,QAAyB,eAAf+yC,EAAMzhC,KAr0W3B,EAq0WwE,GAC3FjR,KAAKmzC,UAAUT,EAAO,CACpBU,GAAI,CACFniC,KAAM,eAER8hC,QApzWe3yB,IAszWVsyB,CACT,CACA09B,kBAAkB3xD,GAIhB,GAHAze,KAAK0iB,OACLjE,EAAK4zD,MAAQryE,KAAK+kE,aAClBtmD,EAAK6zD,QAAU,KACXtyE,KAAK2qB,MAAM,IAAK,CAClB,MAAM4nD,EAASvyE,KAAK05B,YACpB15B,KAAK0iB,OACD1iB,KAAK2qB,MAAM,KACb3qB,KAAK02B,OAAO,IACZ67C,EAAO7/B,MAAQ1yC,KAAK6iE,wBACpB7iE,KAAK02B,OAAO,MAEZ67C,EAAO7/B,MAAQ,KACf1yC,KAAK+hB,MAAMF,MA/1WC,IAi2Wd0wD,EAAOp2B,KAAOn8C,KAAKwtE,oCAAmC,IAAMxtE,KAAK+kE,YAAW,GAAO,KACnF/kE,KAAK+hB,MAAMD,OACXrD,EAAK6zD,QAAUtyE,KAAK65B,WAAW04C,EAAQ,cACzC,CAOA,OANA9zD,EAAK+zD,UAAYxyE,KAAKktB,IAAI,IAAMltB,KAAK+kE,aAAe,KAC/CtmD,EAAK6zD,SAAY7zD,EAAK+zD,WACzBxyE,KAAKwiB,MAAM3E,EAAO/F,iBAAkB,CAClCvT,GAAIka,IAGDze,KAAK65B,WAAWpb,EAAM,eAC/B,CACAq/C,kBAAkBr/C,EAAMpN,EAAMkvD,GAA0B,GAItD,OAHAvgE,KAAK0iB,OACL1iB,KAAK0xE,SAASjzD,GAAM,EAAOpN,EAAMkvD,GACjCvgE,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,sBAC/B,CACA4xD,oBAAoB5xD,GAMlB,OALAze,KAAK0iB,OACLjE,EAAKU,KAAOnf,KAAKmxE,wBACjBnxE,KAAK2kB,MAAMoD,OAAOxlB,KAAKsrE,IACvBpvD,EAAK09B,KAAOn8C,KAAKwtE,oCAAmC,IAAMxtE,KAAKyvE,mBAC/DzvE,KAAK2kB,MAAMoD,OAAO9a,MACXjN,KAAK65B,WAAWpb,EAAM,iBAC/B,CACA6xD,mBAAmB7xD,GASjB,OARIze,KAAK2kB,MAAM+B,QACb1mB,KAAKwiB,MAAM3E,EAAOS,WAAY,CAC5B/Z,GAAIvE,KAAK2kB,MAAMkC,WAGnB7mB,KAAK0iB,OACLjE,EAAKnQ,OAAStO,KAAKmxE,wBACnB1yD,EAAK09B,KAAOn8C,KAAKwtE,oCAAmC,IAAMxtE,KAAKyvE,mBACxDzvE,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA8xD,oBAAoB9xD,GAElB,OADAze,KAAK0iB,OACE1iB,KAAK65B,WAAWpb,EAAM,iBAC/B,CACAkyD,sBAAsBlyD,EAAMiyD,EAAWz/B,EAAM1wB,GAC3C,IAAK,MAAM1f,KAASb,KAAK2kB,MAAMoD,OACzBlnB,EAAMU,OAASmvE,GACjB1wE,KAAKwiB,MAAM3E,EAAOxH,mBAAoB,CACpC9R,GAAI0sC,EACJ36B,UAAWo6D,IAIjB,MAAMr/D,GAtvYWvR,EAsvYQE,KAAK2kB,MAAM1T,OArvYtB,IAAMnR,GAAS,GAqvYe,OAASE,KAAK2qB,MAAM,IAAM,SAAW,KAtvYrF,IAAqB7qB,EAuvYjB,IAAK,IAAI2M,EAAIzM,KAAK2kB,MAAMoD,OAAOjb,OAAS,EAAGL,GAAK,EAAGA,IAAK,CACtD,MAAM5L,EAAQb,KAAK2kB,MAAMoD,OAAOtb,GAChC,GAAI5L,EAAM4xE,iBAAmBh0D,EAAKjR,MAIhC,MAHA3M,EAAM4xE,eAAiBzyE,KAAK2kB,MAAMnX,MAClC3M,EAAMwQ,KAAOA,CAIjB,CASA,OARArR,KAAK2kB,MAAMoD,OAAOxlB,KAAK,CACrBhB,KAAMmvE,EACNr/D,KAAMA,EACNohE,eAAgBzyE,KAAK2kB,MAAMnX,QAE7BiR,EAAK09B,KAAe,EAAR57B,EAAYvgB,KAAK8kE,iDAAgD,GAAQ9kE,KAAKyvE,iBAC1FzvE,KAAK2kB,MAAMoD,OAAO9a,MAClBwR,EAAK5d,MAAQowC,EACNjxC,KAAK65B,WAAWpb,EAAM,mBAC/B,CACA0qC,yBAAyB1qC,EAAMwyB,EAAMe,GAGnC,OAFAvzB,EAAK+wB,WAAayB,EAClBjxC,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,sBAC/B,CACAsmD,WAAWlpB,GAAkB,EAAOmpB,GAAwB,EAAMjpB,GAChE,MAAMt9B,EAAOze,KAAK05B,YAYlB,OAXImiB,GACF77C,KAAK2kB,MAAM2D,aAAa+F,QAE1BruB,KAAK02B,OAAO,GACRsuC,GACFhlE,KAAK+hB,MAAMF,MAn7WG,GAq7WhB7hB,KAAK47C,eAAen9B,EAAMo9B,GAAiB,EAAO,EAAGE,GACjDipB,GACFhlE,KAAK+hB,MAAMD,OAEN9hB,KAAK65B,WAAWpb,EAAM,iBAC/B,CACAi9B,iBAAiBL,GACf,MAAqB,wBAAdA,EAAKpqC,MAA2D,kBAAzBoqC,EAAK7L,WAAWv+B,OAA6BoqC,EAAK7L,WAAW7Z,MAAMma,aACnH,CACA8L,eAAen9B,EAAMo9B,EAAiBC,EAAUruC,EAAKsuC,GACnD,MAAMI,EAAO19B,EAAK09B,KAAO,GACnBF,EAAax9B,EAAKw9B,WAAa,GACrCj8C,KAAK08D,4BAA4BvgB,EAAMN,EAAkBI,OAAat9C,EAAWm9C,EAAUruC,EAAKsuC,EAClG,CACA2gB,4BAA4BvgB,EAAMF,EAAYH,EAAUruC,EAAKsuC,GAC3D,MAAMopB,EAAYnlE,KAAK2kB,MAAM+B,OAC7B,IAAIimD,GAAyB,EACzB+F,GAAqB,EACzB,MAAQ1yE,KAAK2qB,MAAMld,IAAM,CACvB,MAAM4tC,EAAOS,EAAW97C,KAAKsvE,kBAAoBtvE,KAAKuvE,yBACtD,GAAItzB,IAAey2B,EAAoB,CACrC,GAAI1yE,KAAK07C,iBAAiBL,GAAO,CAC/B,MAAMH,EAAYl7C,KAAK+uE,gBAAgB1zB,GACvCY,EAAW15C,KAAK24C,GACXyxB,GAAoD,eAA1BzxB,EAAU3sC,MAAMA,QAC7Co+D,GAAyB,EACzB3sE,KAAKkuB,WAAU,IAEjB,QACF,CACAwkD,GAAqB,EACrB1yE,KAAK2kB,MAAM2D,aAAa+F,OAC1B,CACA8tB,EAAK55C,KAAK84C,EACZ,CACIU,GACFA,EAAgB7I,KAAKlzC,KAAM2sE,GAExBxH,GACHnlE,KAAKkuB,WAAU,GAEjBluB,KAAK0iB,MACP,CACA2uD,SAAS5yD,EAAM+J,GAUb,OATA/J,EAAK+J,KAAOA,EACZxoB,KAAKw2B,WAAU,GACf/X,EAAKU,KAAOnf,KAAK2qB,MAAM,IAAM,KAAO3qB,KAAK+/C,kBACzC//C,KAAKw2B,WAAU,GACf/X,EAAK0pD,OAASnoE,KAAK2qB,MAAM,IAAM,KAAO3qB,KAAK+/C,kBAC3C//C,KAAK02B,OAAO,IACZjY,EAAK09B,KAAOn8C,KAAKwtE,oCAAmC,IAAMxtE,KAAKyvE,mBAC/DzvE,KAAK+hB,MAAMD,OACX9hB,KAAK2kB,MAAMoD,OAAO9a,MACXjN,KAAK65B,WAAWpb,EAAM,eAC/B,CACAmzD,WAAWnzD,EAAM+J,EAAM4oD,GACrB,MAAMO,EAAU3xE,KAAK2qB,MAAM,IA2B3B,OA1BA3qB,KAAK0iB,OACDivD,EACc,OAAZP,GAAkBpxE,KAAK+V,WAAWq7D,GAEtC3yD,EAAKk0D,MAAoB,OAAZvB,EAEG,wBAAd5oD,EAAKvX,MAA+D,MAA7BuX,EAAKg4C,aAAa,GAAGh4C,MAAkBmpD,GAAY3xE,KAAKwB,QAAQ7B,SAAUK,KAAK2kB,MAAM+B,QAAwB,QAAd8B,EAAKnX,MAAmD,eAAjCmX,EAAKg4C,aAAa,GAAG59C,GAAG3R,MACvLjR,KAAKwiB,MAAM3E,EAAOlK,uBAAwB,CACxCpP,GAAIikB,EACJvX,KAAM0gE,EAAU,iBAAmB,mBAGrB,sBAAdnpD,EAAKvX,MACPjR,KAAKwiB,MAAM3E,EAAOpI,WAAY,CAC5BlR,GAAIikB,EACJ9S,SAAU,CACRzE,KAAM,kBAIZwN,EAAK4xB,KAAO7nB,EACZ/J,EAAKm0B,MAAQ++B,EAAU3xE,KAAK+/C,kBAAoB//C,KAAKmxC,0BACrDnxC,KAAK02B,OAAO,IACZjY,EAAK09B,KAAOn8C,KAAKwtE,oCAAmC,IAAMxtE,KAAKyvE,mBAC/DzvE,KAAK+hB,MAAMD,OACX9hB,KAAK2kB,MAAMoD,OAAO9a,MACXjN,KAAK65B,WAAWpb,EAAMkzD,EAAU,iBAAmB,iBAC5D,CACAD,SAASjzD,EAAMm0D,EAAOvhE,EAAMkvD,GAA0B,GACpD,MAAMC,EAAe/hD,EAAK+hD,aAAe,GAEzC,IADA/hD,EAAKpN,KAAOA,IACH,CACP,MAAMy5C,EAAO9qD,KAAK05B,YAiBlB,GAhBA15B,KAAKkuD,WAAWpD,EAAMz5C,GACtBy5C,EAAKtiC,KAAQxoB,KAAKktB,IAAI,IAAa0lD,EAAQ5yE,KAAKsmE,6BAA+BtmE,KAAKmxC,0BAAxD,KACV,OAAd2Z,EAAKtiC,MAAkB+3C,IACJ,eAAjBzV,EAAKloC,GAAG3R,MAA2B2hE,IAAU5yE,KAAK2qB,MAAM,KAAO3qB,KAAK41B,aAAa,MAKjE,UAATvkB,GAAsBrR,KAAK2qB,MAAM,KAAO3qB,KAAK41B,aAAa,MACnE51B,KAAKwiB,MAAM3E,EAAOvL,8BAA+B,CAC/C/N,GAAIvE,KAAK2kB,MAAMqD,cACf3W,KAAM,UAPRrR,KAAKwiB,MAAM3E,EAAOvL,8BAA+B,CAC/C/N,GAAIvE,KAAK2kB,MAAMqD,cACf3W,KAAM,mBASZmvD,EAAaj+D,KAAKvC,KAAK65B,WAAWixB,EAAM,wBACnC9qD,KAAKktB,IAAI,IAAK,KACrB,CACA,OAAOzO,CACT,CACAyvC,WAAWpD,EAAMz5C,GACF,UAATA,IAAqBrR,KAAK2f,UAAY3f,KAAK2qB,MAAM,KACnD3qB,KAAKwiB,MAAM3E,EAAOlM,oBAAqB,CACrCpN,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MAAMjE,EAAK5iB,KAAKqxC,mBAChBrxC,KAAKmzC,UAAUvwB,EAAI,CACjBwwB,GAAI,CACFniC,KAAM,sBAER8hC,QAAkB,QAAT1hC,EAnhXF+O,EAmhX8BD,KAEvC2qC,EAAKloC,GAAKA,CACZ,CACAsnD,6BAA6BzrD,GAC3B,OAAOze,KAAK4qE,cAAcnsD,EAAM,EAClC,CACAmsD,cAAcnsD,EAAM8B,EAAQ,GAC1B,MAAMsyD,EAA6B,EAARtyD,EACrBuyD,KAA2B,EAARvyD,GACnB2kD,EAAY4N,KAA2B,EAARvyD,GAC/BgV,KAAqB,EAARhV,GACnBvgB,KAAKu7C,aAAa98B,EAAM8W,GACpBv1B,KAAK2qB,MAAM,MACTkoD,GACF7yE,KAAKwiB,MAAM3E,EAAO9J,kCAAmC,CACnDxP,GAAIvE,KAAK2kB,MAAMkC,WAGnB7mB,KAAK0iB,OACLjE,EAAKguD,WAAY,GAEfqG,IACFr0D,EAAKmE,GAAK5iB,KAAKilE,gBAAgBC,IAEjC,MAAM5G,EAA4Bt+D,KAAK2kB,MAAMwC,uBAiB7C,OAhBAnnB,KAAK2kB,MAAMwC,wBAAyB,EACpCnnB,KAAK+hB,MAAMF,MAvkXI,GAwkXf7hB,KAAKw4B,UAAU3W,MAAMyT,GAAcC,EAAS9W,EAAKguD,YAC5CqG,IACHr0D,EAAKmE,GAAK5iB,KAAKilE,mBAEjBjlE,KAAKiuD,oBAAoBxvC,GAAM,GAC/Bze,KAAKwtE,oCAAmC,KACtCxtE,KAAKgpD,2BAA2BvqC,EAAMq0D,EAAgB,sBAAwB,qBAAqB,IAErG9yE,KAAKw4B,UAAU1W,OACf9hB,KAAK+hB,MAAMD,OACPgxD,IAAkBD,GACpB7yE,KAAKg/D,4BAA4BvgD,GAEnCze,KAAK2kB,MAAMwC,uBAAyBm3C,EAC7B7/C,CACT,CACAwmD,gBAAgBC,GACd,OAAOA,GAAav5D,EAAkB3L,KAAK2kB,MAAM1T,MAAQjR,KAAKwxC,kBAAoB,IACpF,CACAyc,oBAAoBxvC,EAAM69B,GACxBt8C,KAAK02B,OAAO,IACZ12B,KAAK04B,gBAAgB7W,MAnhThB,IAAI+R,GAvHa,IA2oTtBnV,EAAKoH,OAAS7lB,KAAKsxC,iBAAiB,GAAI,GAAI,GAAKgL,EAAgB,EAAI,IACrEt8C,KAAK04B,gBAAgB5W,MACvB,CACAk9C,4BAA4BvgD,GACrBA,EAAKmE,IACV5iB,KAAK+hB,MAAMC,YAAYvD,EAAKmE,GAAGrhB,MAAOvB,KAAKwB,QAAQ7B,QAAUK,KAAK2kB,MAAM+B,QAAUjI,EAAKguD,WAAahuD,EAAKqwC,MAAQ9uD,KAAK+hB,MAAML,oBA1kXnHtB,EA0kXoJD,GAzkX/IC,GAykX6K3B,EAAKmE,GAAG9F,IAAItP,MACzM,CACAqwD,WAAWp/C,EAAM8sC,EAAaC,GAC5BxrD,KAAK0iB,OACL,MAAMyiD,EAAYnlE,KAAK2kB,MAAM+B,OAK7B,OAJA1mB,KAAK2kB,MAAM+B,QAAS,EACpB1mB,KAAKsrD,aAAa7sC,EAAM8sC,EAAaC,GACrCxrD,KAAK0sD,gBAAgBjuC,GACrBA,EAAK09B,KAAOn8C,KAAKolE,iBAAiB3mD,EAAKw7B,WAAYkrB,GAC5CnlE,KAAK65B,WAAWpb,EAAM8sC,EAAc,mBAAqB,kBAClE,CACAe,kBACE,OAAOtsD,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,EACxD,CACA0hC,gBACE,OAAOrsD,KAAK2qB,MAAM,GACpB,CACA4hC,uBAAuBha,GACrB,QAAQA,EAAOoG,UAAapG,EAAO4T,QAA+B,gBAApB5T,EAAO/lC,IAAIjL,MAA+C,gBAArBgxC,EAAO/lC,IAAI+B,MAChG,CACA62D,eAAepE,EAAemE,GAC5BnlE,KAAK2zB,WAAW9R,QAChB,MAAM8C,EAAQ,CACZouD,gBAAgB,EAChB/R,iBAEF,IAAIhvB,EAAa,GACjB,MAAMqK,EAAYr8C,KAAK05B,YAiCvB,GAhCA2iB,EAAUF,KAAO,GACjBn8C,KAAK02B,OAAO,GACZ12B,KAAKwtE,oCAAmC,KACtC,MAAQxtE,KAAK2qB,MAAM,IAAI,CACrB,GAAI3qB,KAAKktB,IAAI,IAAK,CAChB,GAAI8kB,EAAWllC,OAAS,EACtB,MAAM9M,KAAKwiB,MAAM3E,EAAOjL,mBAAoB,CAC1CrO,GAAIvE,KAAK2kB,MAAMqD,gBAGnB,QACF,CACA,GAAIhoB,KAAK2qB,MAAM,IAAK,CAClBqnB,EAAWzvC,KAAKvC,KAAKiyC,kBACrB,QACF,CACA,MAAMyZ,EAAS1rD,KAAK05B,YAChBsY,EAAWllC,SACb4+C,EAAO1Z,WAAaA,EACpBhyC,KAAKi6B,2BAA2ByxB,EAAQ1Z,EAAW,IACnDA,EAAa,IAEfhyC,KAAKyrD,iBAAiBpP,EAAWqP,EAAQ/mC,GACrB,gBAAhB+mC,EAAOr6C,MAA0Bq6C,EAAO1Z,YAAc0Z,EAAO1Z,WAAWllC,OAAS,GACnF9M,KAAKwiB,MAAM3E,EAAOnL,qBAAsB,CACtCnO,GAAImnD,GAGV,KAEF1rD,KAAK2kB,MAAM+B,OAASy+C,EACpBnlE,KAAK0iB,OACDsvB,EAAWllC,OACb,MAAM9M,KAAKwiB,MAAM3E,EAAOzE,kBAAmB,CACzC7U,GAAIvE,KAAK2kB,MAAMkC,WAInB,OADA7mB,KAAK2zB,WAAW7R,OACT9hB,KAAK65B,WAAWwiB,EAAW,YACpC,CACAsP,6BAA6BtP,EAAWqP,GACtC,MAAMl/C,EAAMxM,KAAKwxC,iBAAgB,GACjC,GAAIxxC,KAAKqsD,gBAAiB,CACxB,MAAM9Z,EAASmZ,EAMf,OALAnZ,EAAOlhC,KAAO,SACdkhC,EAAOoG,UAAW,EAClBpG,EAAO/lC,IAAMA,EACb+lC,EAAO4T,QAAS,EAChBnmD,KAAKo8C,gBAAgBC,EAAW9J,GAAQ,GAAO,GAAO,GAAO,IACtD,CACT,CAAO,GAAIvyC,KAAKssD,kBAAmB,CACjC,MAAM1gB,EAAO8f,EAKb,OAJA9f,EAAK+M,UAAW,EAChB/M,EAAKp/B,IAAMA,EACXo/B,EAAKua,QAAS,EACd9J,EAAUF,KAAK55C,KAAKvC,KAAKg9C,mBAAmBpR,KACrC,CACT,CAEA,OADA5rC,KAAKgmB,kCAAkCxZ,IAChC,CACT,CACAi/C,iBAAiBpP,EAAWqP,EAAQ/mC,GAClC,MAAMuhC,EAAWlmD,KAAK41B,aAAa,KACnC,GAAIswB,EAAU,CACZ,GAAIlmD,KAAK2rD,6BAA6BtP,EAAWqP,GAC/C,OAEF,GAAI1rD,KAAKktB,IAAI,GAEX,YADAltB,KAAK6gE,sBAAsBxkB,EAAWqP,EAG1C,CACA1rD,KAAK8gE,6BAA6BzkB,EAAWqP,EAAQ/mC,EAAOuhC,EAC9D,CACA4a,6BAA6BzkB,EAAWqP,EAAQ/mC,EAAOuhC,GACrD,MAAM8sB,EAAetnB,EACfunB,EAAgBvnB,EAChBwnB,EAAaxnB,EACbynB,EAAcznB,EACd0nB,EAAe1nB,EACfnZ,EAASygC,EACTK,EAAeL,EAGrB,GAFAtnB,EAAOvF,OAASD,EAChBlmD,KAAK8sD,gCAAgCpB,GACjC1rD,KAAKktB,IAAI,IAAK,CAChBqlB,EAAOlhC,KAAO,SACd,MAAMqmB,EAAgB13B,KAAK2qB,MAAM,KAEjC,OADA3qB,KAAKszE,sBAAsB/gC,GACvB7a,OACF13B,KAAKysD,uBAAuBpQ,EAAW42B,GAAe,GAAM,IAG1DjzE,KAAKusD,uBAAuBymB,IAC9BhzE,KAAKwiB,MAAM3E,EAAOxL,uBAAwB,CACxC9N,GAAIyuE,EAAaxmE,WAGrBxM,KAAKo8C,gBAAgBC,EAAW22B,GAAc,GAAM,GAAO,GAAO,GAEpE,CACA,MAAMp9C,EAAejqB,EAAkB3L,KAAK2kB,MAAM1T,QAAUjR,KAAK2kB,MAAMyD,YACjEmrD,EAAYvzE,KAAK2qB,MAAM,KACvBne,EAAMxM,KAAKszE,sBAAsB5nB,GACjC8nB,EAA6BxzE,KAAK2kB,MAAMkC,SAE9C,GADA7mB,KAAKihE,6BAA6BoS,GAC9BrzE,KAAKqsD,gBAAiB,CAExB,GADA9Z,EAAOlhC,KAAO,SACVkiE,EAEF,YADAvzE,KAAKysD,uBAAuBpQ,EAAW42B,GAAe,GAAO,GAG/D,MAAM32B,EAAgBt8C,KAAKusD,uBAAuBymB,GAClD,IAAIz2B,GAAoB,EACpBD,IACF02B,EAAa3hE,KAAO,cAChBsT,EAAMouD,iBAAmB/yE,KAAKsjB,UAAU,eAC1CtjB,KAAKwiB,MAAM3E,EAAO7K,qBAAsB,CACtCzO,GAAIiI,IAGJ8vC,GAAiBt8C,KAAKsjB,UAAU,eAAiBooC,EAAOgT,UAC1D1+D,KAAKwiB,MAAM3E,EAAOzF,sBAAuB,CACvC7T,GAAIiI,IAGRmY,EAAMouD,gBAAiB,EACvBx2B,EAAoB53B,EAAMq8C,eAE5BhhE,KAAKo8C,gBAAgBC,EAAW22B,GAAc,GAAO,EAAO12B,EAAeC,EAC7E,MAAO,GAAIv8C,KAAKssD,kBACVinB,EACFvzE,KAAKyzE,yBAAyBp3B,EAAW82B,GAEzCnzE,KAAK0zE,kBAAkBr3B,EAAW62B,QAE/B,GAAIt9C,GAA6B,UAAbppB,EAAIjL,OAAqBvB,KAAKu2B,mBAAoB,CAC3Ev2B,KAAKgmB,kCAAkCxZ,GACvC,MAAMgpB,EAAcx1B,KAAKktB,IAAI,IACzBmmD,EAAa31B,UACf19C,KAAK+V,WAAWy9D,GAElBjhC,EAAOlhC,KAAO,SACd,MAAMkiE,EAAYvzE,KAAK2qB,MAAM,KAC7B3qB,KAAKszE,sBAAsB/gC,GAC3BvyC,KAAKihE,6BAA6BoS,GAC9BE,EACFvzE,KAAKysD,uBAAuBpQ,EAAW42B,EAAez9C,GAAa,IAE/Dx1B,KAAKusD,uBAAuBymB,IAC9BhzE,KAAKwiB,MAAM3E,EAAOzL,mBAAoB,CACpC7N,GAAIyuE,EAAaxmE,MAGrBxM,KAAKo8C,gBAAgBC,EAAW22B,EAAcx9C,GAAa,GAAM,GAAO,GAE5E,MAAO,IAAII,GAA8B,QAAbppB,EAAIjL,MAA+B,QAAbiL,EAAIjL,MAAqBvB,KAAK2qB,MAAM,KAAO3qB,KAAKu2B,mBAgB3F,GAAIX,GAA6B,aAAbppB,EAAIjL,OAAwBvB,KAAKu2B,mBAAoB,CAC9Ev2B,KAAKovB,aAAa,0BAClBpvB,KAAKgmB,kCAAkCxZ,GACvC,MAAM+mE,EAAYvzE,KAAK2qB,MAAM,KAC7B3qB,KAAKszE,sBAAsBJ,GAC3BlzE,KAAK2zE,0BAA0Bt3B,EAAW+2B,EAAcG,EAC1D,MAAWvzE,KAAKu2B,mBACVg9C,EACFvzE,KAAKyzE,yBAAyBp3B,EAAW82B,GAEzCnzE,KAAK0zE,kBAAkBr3B,EAAW62B,GAGpClzE,KAAK+V,iBA7BgH,CACrH/V,KAAKgmB,kCAAkCxZ,GACvC+lC,EAAOlhC,KAAO7E,EAAIjL,KAClB,MAAMgyE,EAAYvzE,KAAK2qB,MAAM,KAC7B3qB,KAAKszE,sBAAsBN,GACvBO,EACFvzE,KAAKysD,uBAAuBpQ,EAAW42B,GAAe,GAAO,IAEzDjzE,KAAKusD,uBAAuBymB,IAC9BhzE,KAAKwiB,MAAM3E,EAAO1L,sBAAuB,CACvC5N,GAAIyuE,EAAaxmE,MAGrBxM,KAAKo8C,gBAAgBC,EAAW22B,GAAc,GAAO,GAAO,GAAO,IAErEhzE,KAAK6sD,wBAAwBmmB,EAC/B,CAeF,CACAM,sBAAsB5nB,GACpB,MAAM,KACJz6C,EAAI,MACJ1C,GACEvO,KAAK2kB,MAMT,GALc,MAAT1T,GAAyB,MAATA,IAAiBy6C,EAAOvF,QAAoB,cAAV53C,GACrDvO,KAAKwiB,MAAM3E,EAAO5E,gBAAiB,CACjC1U,GAAIvE,KAAK2kB,MAAMkC,WAGN,MAAT5V,EAAc,CACF,gBAAV1C,GACFvO,KAAKwiB,MAAM3E,EAAO3L,6BAA8B,CAC9C3N,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MAAMra,EAAMxM,KAAKqyC,mBAEjB,OADAqZ,EAAOl/C,IAAMA,EACNA,CACT,CACA,OAAOxM,KAAKsyC,kBAAkBoZ,EAChC,CACAmV,sBAAsBxkB,EAAWqP,GAC/B,IAAIkoB,EACJ5zE,KAAK+hB,MAAMF,MAAMgyD,KACjB,MAAM57C,EAAYj4B,KAAK2kB,MAAMoD,OAC7B/nB,KAAK2kB,MAAMoD,OAAS,GACpB/nB,KAAKw4B,UAAU3W,MAhwTL,GAiwTV,MAAMs6B,EAAOuP,EAAOvP,KAAO,GAC3Bn8C,KAAK08D,4BAA4BvgB,OAAMx9C,GAAW,EAAO,GACzDqB,KAAKw4B,UAAU1W,OACf9hB,KAAK+hB,MAAMD,OACX9hB,KAAK2kB,MAAMoD,OAASkQ,EACpBokB,EAAUF,KAAK55C,KAAKvC,KAAK65B,WAAW6xB,EAAQ,gBACI,OAA3CkoB,EAAqBloB,EAAO1Z,aAAuB4hC,EAAmB9mE,QACzE9M,KAAKwiB,MAAM3E,EAAOhL,qBAAsB,CACtCtO,GAAImnD,GAGV,CACAgoB,kBAAkBr3B,EAAWzQ,GACtBA,EAAK+M,UAA+B,gBAAlB/M,EAAKp/B,IAAIjL,MAA6C,gBAAnBqqC,EAAKp/B,IAAI+B,OACjEvO,KAAKwiB,MAAM3E,EAAO5L,sBAAuB,CACvC1N,GAAIqnC,EAAKp/B,MAGb6vC,EAAUF,KAAK55C,KAAKvC,KAAKg9C,mBAAmBpR,GAC9C,CACA6nC,yBAAyBp3B,EAAWzQ,GAClC,MAAMntB,EAAOze,KAAKk9C,0BAA0BtR,GAC5CyQ,EAAUF,KAAK55C,KAAKkc,GACpBze,KAAK2zB,WAAWN,mBAAmBrzB,KAAK23B,iBAAiBlZ,EAAKjS,KAh0X1C,EAg0XqEiS,EAAKjS,IAAIsQ,IAAItP,MACxG,CACAmmE,0BAA0Bt3B,EAAWzQ,EAAM2nC,GACzC,IAAKA,IAAc3nC,EAAK+M,SAAU,CAChC,MAAMnsC,EAAMo/B,EAAKp/B,IACA,gBAAbA,EAAIjL,MAAwC,gBAAdiL,EAAI+B,OACpCvO,KAAKwiB,MAAM3E,EAAO5L,sBAAuB,CACvC1N,GAAIiI,GAGV,CACA,MAAMiS,EAAOze,KAAKshE,2BAA2B11B,GAC7CyQ,EAAUF,KAAK55C,KAAKkc,GAChB80D,GACFvzE,KAAK2zB,WAAWN,mBAAmBrzB,KAAK23B,iBAAiBlZ,EAAKjS,KA90X5C,EA80XuEiS,EAAKjS,IAAIsQ,IAAItP,MAE1G,CACA4uC,gBAAgBC,EAAW9J,EAAQ/c,EAAaD,EAAS+mB,EAAeC,GACtEF,EAAUF,KAAK55C,KAAKvC,KAAKw8C,YAAYjK,EAAQ/c,EAAaD,EAAS+mB,EAAeC,EAAmB,eAAe,GACtH,CACAkQ,uBAAuBpQ,EAAW9J,EAAQ/c,EAAaD,GACrD,MAAM9W,EAAOze,KAAKw8C,YAAYjK,EAAQ/c,EAAaD,GAAS,GAAO,EAAO,sBAAsB,GAChG8mB,EAAUF,KAAK55C,KAAKkc,GACpB,MAAMpN,EAAqB,QAAdoN,EAAKpN,KAAiBoN,EAAK0nC,OA31XR3yB,EAHN,EA81XmG,QAAd/U,EAAKpN,KAAiBoN,EAAK0nC,OA11X9G2tB,EAHF,EAMN,EAw1XpB9zE,KAAKuhE,iCAAiC9iD,EAAMpN,EAC9C,CACAkwD,iCAAiC9iD,EAAMpN,GACrCrR,KAAK2zB,WAAWN,mBAAmBrzB,KAAK23B,iBAAiBlZ,EAAKjS,KAAM6E,EAAMoN,EAAKjS,IAAIsQ,IAAItP,MACzF,CACAyzD,6BAA6BC,GAAe,CAC5ChkB,0BAA0Bz+B,GAGxB,OAFAze,KAAK+zE,iBAAiBt1D,GACtBze,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,uBAC/B,CACAu+B,mBAAmBv+B,GAGjB,OAFAze,KAAK+zE,iBAAiBt1D,GACtBze,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,gBAC/B,CACA6iD,2BAA2B7iD,GAGzB,OAFAze,KAAK+zE,iBAAiBt1D,GACtBze,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,wBAC/B,CACAs1D,iBAAiBt1D,GACfze,KAAK+hB,MAAMF,MAAMgyD,IACjB7zE,KAAK04B,gBAAgB7W,MAAM+S,MAC3B50B,KAAKw4B,UAAU3W,MAx0TL,GAy0TVpD,EAAKlQ,MAAQvO,KAAKktB,IAAI,IAAMltB,KAAKmxC,0BAA4B,KAC7DnxC,KAAK04B,gBAAgB5W,OACrB9hB,KAAKw4B,UAAU1W,OACf9hB,KAAK+hB,MAAMD,MACb,CACAwpC,aAAa7sC,EAAM8sC,EAAaC,EAAYvpC,EA74X3B7B,MA84Xf,GAAIzU,EAAkB3L,KAAK2kB,MAAM1T,MAC/BwN,EAAKmE,GAAK5iB,KAAKwxC,kBACX+Z,GACFvrD,KAAKg0C,0BAA0Bv1B,EAAKmE,GAAIX,OAErC,CACL,IAAIupC,GAAeD,EAGjB,MAAMvrD,KAAKwiB,MAAM3E,EAAOnH,iBAAkB,CACxCnS,GAAIvE,KAAK2kB,MAAMkC,WAHjBpI,EAAKmE,GAAK,IAMd,CACF,CACA8pC,gBAAgBjuC,GACdA,EAAKw7B,WAAaj6C,KAAKktB,IAAI,IAAMltB,KAAKwoE,sBAAwB,IAChE,CACAzqB,YAAYt/B,EAAMuzB,GAChB,MAAMgiC,EAAah0E,KAAKslE,iCAAiC7mD,GACnDw1D,GAAqBD,GAAch0E,KAAKktB,IAAI,IAC5CgnD,EAAUD,GAAqBj0E,KAAKmrD,cAAc1sC,GAClD4sC,EAAe6oB,GAAWl0E,KAAKorD,mCAAmC3sC,GAClE01D,EAAsBF,KAAuB5oB,GAAgBrrD,KAAKktB,IAAI,KACtEknD,EAAiBJ,GAAcE,EACrC,GAAIA,IAAY7oB,EAAc,CAE5B,GADI2oB,GAAYh0E,KAAK+V,aACjBi8B,EACF,MAAMhyC,KAAKwiB,MAAM3E,EAAOpD,2BAA4B,CAClDlW,GAAIka,IAIR,OADAze,KAAKkrD,gBAAgBzsC,GAAM,GACpBze,KAAK65B,WAAWpb,EAAM,uBAC/B,CACA,MAAM41D,EAAgBr0E,KAAKs0E,gCAAgC71D,GAO3D,IAAI81D,EACJ,GAPIP,GAAcC,IAAsBC,IAAYG,GAClDr0E,KAAK+V,WAAW,KAAM,GAEpBs1C,GAAgB8oB,GAClBn0E,KAAK+V,WAAW,KAAM,IAGpBq+D,GAAkBC,EAAe,CAEnC,GADAE,GAAiB,EACbviC,EACF,MAAMhyC,KAAKwiB,MAAM3E,EAAOpD,2BAA4B,CAClDlW,GAAIka,IAGRze,KAAKkrD,gBAAgBzsC,EAAM21D,EAC7B,MACEG,EAAiBv0E,KAAKw0E,4BAA4B/1D,GAEpD,GAAI21D,GAAkBC,GAAiBE,EAAgB,CACrD,IAAIE,EACJ,MAAMltB,EAAQ9oC,EAEd,GADAze,KAAKulE,YAAYhe,GAAO,GAAM,IAASA,EAAMj7C,QACiD,sBAA7C,OAA3CmoE,EAAqBltB,EAAMpJ,kBAAuB,EAASs2B,EAAmBxjE,MAClFjR,KAAKgjE,oBAAoBhxB,EAAYuV,EAAMpJ,YAAaoJ,QACnD,GAAIvV,EACT,MAAMhyC,KAAKwiB,MAAM3E,EAAOpD,2BAA4B,CAClDlW,GAAIka,IAGR,OAAOze,KAAK65B,WAAW0tB,EAAO,yBAChC,CACA,GAAIvnD,KAAKktB,IAAI,IAAK,CAChB,MAAMq6B,EAAQ9oC,EACRqsC,EAAO9qD,KAAKspD,+BAElB,GADA/B,EAAMpJ,YAAc2M,EACF,qBAAdA,EAAK75C,KACPjR,KAAKgjE,oBAAoBhxB,EAAY8Y,EAAMvD,QACtC,GAAIvV,EACT,MAAMhyC,KAAKwiB,MAAM3E,EAAOpD,2BAA4B,CAClDlW,GAAIka,IAIR,OADAze,KAAKulE,YAAYhe,GAAO,GAAM,GACvBvnD,KAAK65B,WAAW0tB,EAAO,2BAChC,CACAvnD,KAAK+V,WAAW,KAAM,EACxB,CACAo1C,cAAc1sC,GACZ,OAAOze,KAAKktB,IAAI,GAClB,CACAo4C,iCAAiC7mD,GAC/B,GAAIze,KAAKqpD,2BAA4B,CACnCrpD,KAAKovB,aAAa,qBAClB,MAAM+9B,EAAYntD,KAAK05B,YAGvB,OAFAyzB,EAAUlP,SAAWj+C,KAAKwxC,iBAAgB,GAC1C/yB,EAAKqH,WAAa,CAAC9lB,KAAK65B,WAAWszB,EAAW,4BACvC,CACT,CACA,OAAO,CACT,CACA/B,mCAAmC3sC,GACjC,GAAIze,KAAK41B,aAAa,IAAK,CACpBnX,EAAKqH,aAAYrH,EAAKqH,WAAa,IACxC,MAAMqnC,EAAYntD,KAAK25B,YAAY35B,KAAK2kB,MAAMsD,iBAI9C,OAHAjoB,KAAK0iB,OACLyqC,EAAUlP,SAAWj+C,KAAKikE,wBAC1BxlD,EAAKqH,WAAWvjB,KAAKvC,KAAK65B,WAAWszB,EAAW,8BACzC,CACT,CACA,OAAO,CACT,CACAmnB,gCAAgC71D,GAC9B,GAAIze,KAAK2qB,MAAM,GAAI,CACZlM,EAAKqH,aAAYrH,EAAKqH,WAAa,IACxC,MAAM4uD,EAAmC,SAApBj2D,EAAKglC,WAO1B,OANAhlC,EAAKqH,WAAWvjB,QAAQvC,KAAKirD,sBAAsBypB,IACnDj2D,EAAKnS,OAAS,KACdmS,EAAK0/B,YAAc,KACfn+C,KAAKsjB,UAAU,sBACjB7E,EAAKk2D,WAAa,KAEb,CACT,CACA,OAAO,CACT,CACAH,4BAA4B/1D,GAC1B,QAAIze,KAAKopD,iCACP3qC,EAAKqH,WAAa,GAClBrH,EAAKnS,OAAS,KACVtM,KAAKsjB,UAAU,sBACjB7E,EAAKk2D,WAAa,IAEpBl2D,EAAK0/B,YAAcn+C,KAAK+qD,uBAAuBtsC,IACxC,EAGX,CACAgyD,kBACE,IAAKzwE,KAAK41B,aAAa,IAAK,OAAO,EACnC,MAAMlT,EAAO1iB,KAAKwtB,iBAClB,OAAQtH,GAAU/G,KAAKnf,KAAK0lB,MAAMkD,MAAM5oB,KAAK2kB,MAAMzH,IAAKwF,KAAU1iB,KAAK61B,qBAAqBnT,EAAM,WACpG,CACA4mC,+BACE,MAAMrY,EAAOjxC,KAAK05B,YAClB,GAAI15B,KAAK2qB,MAAM,IAEb,OADA3qB,KAAK0iB,OACE1iB,KAAK4qE,cAAc35B,EAAM,GAC3B,GAAIjxC,KAAKywE,kBAGd,OAFAzwE,KAAK0iB,OACL1iB,KAAK0iB,OACE1iB,KAAK4qE,cAAc35B,EAAM,IAElC,GAAIjxC,KAAK2qB,MAAM,IACb,OAAO3qB,KAAK69D,WAAW5sB,GAAM,GAAM,GAErC,GAAIjxC,KAAK2qB,MAAM,IAMb,OALI3qB,KAAKsjB,UAAU,gBAAkF,IAAjEtjB,KAAK2jB,gBAAgB,aAAc,2BACrE3jB,KAAKwiB,MAAM3E,EAAOrL,sBAAuB,CACvCjO,GAAIvE,KAAK2kB,MAAMkC,WAGZ7mB,KAAK69D,WAAW79D,KAAKgjE,oBAAoBhjE,KAAK2pE,iBAAgB,GAAQ3pE,KAAK05B,cAAc,GAAM,GAExG,GAAI15B,KAAK2qB,MAAM,KAAO3qB,KAAK2qB,MAAM,KAAO3qB,KAAKwjD,QAC3C,MAAMxjD,KAAKwiB,MAAM3E,EAAOnD,yBAA0B,CAChDnW,GAAIvE,KAAK2kB,MAAMkC,WAGnB,MAAMkD,EAAM/pB,KAAKmxC,0BAEjB,OADAnxC,KAAKw2B,YACEzM,CACT,CACAghC,uBAAuBtsC,GACrB,OAAIze,KAAK2qB,MAAM,IACA3qB,KAAK69D,WAAW79D,KAAK05B,aAAa,GAAM,GAGhD15B,KAAKuvE,wBACd,CACAlmB,2BACE,MAAM,KACJp4C,GACEjR,KAAK2kB,MACT,GAAIhZ,EAAkBsF,GAAO,CAC3B,GAAa,KAATA,IAAgBjR,KAAK2kB,MAAMyD,aAAwB,KAATnX,EAC5C,OAAO,EAET,IAAc,MAATA,GAAyB,MAATA,KAAkBjR,KAAK2kB,MAAMyD,YAAa,CAC7D,MACEnX,KAAM2jE,GACJ50E,KAAKqtB,YACT,GAAI1hB,EAAkBipE,IAA0B,KAAbA,GAAgC,IAAbA,EAEpD,OADA50E,KAAKyyB,gBAAgB,CAAC,OAAQ,gBACvB,CAEX,CACF,MAAO,IAAKzyB,KAAK2qB,MAAM,IACrB,OAAO,EAET,MAAMjI,EAAO1iB,KAAKwtB,iBACZqnD,EAAU70E,KAAK61B,qBAAqBnT,EAAM,QAChD,GAAoC,KAAhC1iB,KAAK0lB,MAAMC,WAAWjD,IAAgB/W,EAAkB3L,KAAK2kB,MAAM1T,OAAS4jE,EAC9E,OAAO,EAET,GAAI70E,KAAK2qB,MAAM,KAAOkqD,EAAS,CAC7B,MAAMC,EAAgB90E,KAAK0lB,MAAMC,WAAW3lB,KAAKytB,oBAAoB/K,EAAO,IAC5E,OAAyB,KAAlBoyD,GAA0C,KAAlBA,CACjC,CACA,OAAO,CACT,CACA5pB,gBAAgBzsC,EAAMiY,GACpB,GAAI12B,KAAKk2B,cAAc,IAAK,CAC1BzX,EAAKnS,OAAStM,KAAK0lE,oBACnB1lE,KAAKulE,YAAY9mD,GACjB,MAAMk2D,EAAa30E,KAAK+0E,6BACpBJ,IACFl2D,EAAKk2D,WAAaA,EAClB30E,KAAKg1E,sBAAsBv2D,GAE/B,MAAWiY,GACT12B,KAAK+V,aAEP/V,KAAKw2B,WACP,CACA4yB,+BACE,MAAM,KACJn4C,GACEjR,KAAK2kB,MACT,OAAa,KAAT1T,IACFjR,KAAKyyB,gBAAgB,CAAC,aAAc,sBAChCzyB,KAAKsjB,UAAU,iBACoD,IAAjEtjB,KAAK2jB,gBAAgB,aAAc,2BACrC3jB,KAAKwiB,MAAM3E,EAAOrL,sBAAuB,CACvCjO,GAAIvE,KAAK2kB,MAAMkC,YAGZ,GAGK,KAAT5V,GAAwB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAejR,KAAKwjD,SAAWxjD,KAAKywE,iBAC1F,CACAlL,YAAY9mD,EAAMw2D,EAAYC,EAAWC,GACvC,GAAIF,EACF,GAAIC,GAEF,GADAl1E,KAAKkgE,sBAAsBzhD,EAAM,WAC7Bze,KAAKsjB,UAAU,qBAAsB,CACvC,IAAI8xD,EACJ,MAAMj3B,EAAc1/B,EAAK0/B,YACA,eAArBA,EAAYltC,MAA8C,SAArBktC,EAAY58C,MAAmB48C,EAAY1wC,IAAM0wC,EAAY3wC,OAAU,GAAmD,OAA3C4nE,EAAqBj3B,EAAYxoB,QAAkBy/C,EAAmBtlC,eAC5L9vC,KAAKwiB,MAAM3E,EAAOnK,8BAA+B,CAC/CnP,GAAI45C,GAGV,OACK,GAAI1/B,EAAKqH,YAAcrH,EAAKqH,WAAWhZ,OAC5C,IAAK,MAAMqgD,KAAa1uC,EAAKqH,WAAY,CACvC,MAAM,SACJm4B,GACEkP,EACEh6C,EAA+B,eAAlB8qC,EAAShtC,KAAwBgtC,EAAS18C,KAAO08C,EAAS1vC,MAE7E,GADAvO,KAAKkgE,sBAAsB/S,EAAWh6C,IACjCgiE,GAAUhoB,EAAUC,MAAO,CAC9B,MAAM,MACJA,GACED,EACe,eAAfC,EAAMn8C,KACRjR,KAAKwiB,MAAM3E,EAAOrK,sBAAuB,CACvCjP,GAAI4oD,EACJ15C,UAAW25C,EAAM7+C,MACjB4E,gBAGFnT,KAAKguD,kBAAkBZ,EAAM7rD,KAAM6rD,EAAMtwC,IAAItP,OAAO,GAAM,GAC1DxN,KAAK+hB,MAAMY,iBAAiByqC,GAEhC,CACF,MACK,GAAI3uC,EAAK0/B,YACd,GAA8B,wBAA1B1/B,EAAK0/B,YAAYltC,MAA4D,qBAA1BwN,EAAK0/B,YAAYltC,KAA6B,CACnG,MAAM2R,EAAKnE,EAAK0/B,YAAYv7B,GAC5B,IAAKA,EAAI,MAAM,IAAIisB,MAAM,qBACzB7uC,KAAKkgE,sBAAsBzhD,EAAMmE,EAAGrhB,KACtC,MAAO,GAA8B,wBAA1Bkd,EAAK0/B,YAAYltC,KAC1B,IAAK,MAAMktC,KAAe1/B,EAAK0/B,YAAYqiB,aACzCxgE,KAAKw7C,iBAAiB2C,EAAYv7B,GAK5C,CACA44B,iBAAiB/8B,GACf,GAAkB,eAAdA,EAAKxN,KACPjR,KAAKkgE,sBAAsBzhD,EAAMA,EAAKld,WACjC,GAAkB,kBAAdkd,EAAKxN,KACd,IAAK,MAAM26B,KAAQntB,EAAK/P,WACtB1O,KAAKw7C,iBAAiB5P,QAEnB,GAAkB,iBAAdntB,EAAKxN,KACd,IAAK,MAAM06D,KAAQltD,EAAK4F,SAClBsnD,GACF3rE,KAAKw7C,iBAAiBmwB,OAGH,mBAAdltD,EAAKxN,KACdjR,KAAKw7C,iBAAiB/8B,EAAKlQ,OACJ,gBAAdkQ,EAAKxN,KACdjR,KAAKw7C,iBAAiB/8B,EAAKrB,UACJ,sBAAdqB,EAAKxN,MACdjR,KAAKw7C,iBAAiB/8B,EAAK4xB,KAE/B,CACA6vB,sBAAsBzhD,EAAMtL,GACtBnT,KAAKm4B,oBAAoBtY,IAAI1M,KACZ,YAAfA,EACFnT,KAAKwiB,MAAM3E,EAAO5K,uBAAwB,CACxC1O,GAAIka,IAGNze,KAAKwiB,MAAM3E,EAAO3K,gBAAiB,CACjC3O,GAAIka,EACJtL,gBAINnT,KAAKm4B,oBAAoBhW,IAAIhP,EAC/B,CACA83C,sBAAsBoY,GACpB,MAAMgS,EAAQ,GACd,IAAIxjC,GAAQ,EAEZ,IADA7xC,KAAK02B,OAAO,IACJ12B,KAAKktB,IAAI,IAAI,CACnB,GAAI2kB,EACFA,GAAQ,OAGR,GADA7xC,KAAK02B,OAAO,IACR12B,KAAKktB,IAAI,GAAI,MAEnB,MAAMwgC,EAAkB1tD,KAAK41B,aAAa,KACpCwtC,EAAWpjE,KAAK2qB,MAAM,KACtBlM,EAAOze,KAAK05B,YAClBjb,EAAK2uC,MAAQptD,KAAKikE,wBAClBoR,EAAM9yE,KAAKvC,KAAKmjE,qBAAqB1kD,EAAM2kD,EAAUC,EAAgB3V,GACvE,CACA,OAAO2nB,CACT,CACAlS,qBAAqB1kD,EAAM2kD,EAAUC,EAAgB3V,GAQnD,OAPI1tD,KAAKk2B,cAAc,IACrBzX,EAAKw/B,SAAWj+C,KAAKikE,wBACZb,EACT3kD,EAAKw/B,SAz3TX,SAA4Bx/B,GAC1B,MAAM,KACJxN,EAAI,MACJzD,EAAK,IACLC,EAAG,IACHqP,EAAG,MACHkc,EAAK,MACLrD,GACElX,EACJ,GAAa,gBAATxN,EACF,OApCJ,SAA0BwN,GACxB,OAAO0a,GAAgB1a,EACzB,CAkCW62D,CAAiB72D,GAE1B,MAAM2a,EAASxsB,OAAOysB,OAAOJ,IAY7B,OAXAG,EAAOnoB,KAAOA,EACdmoB,EAAO5rB,MAAQA,EACf4rB,EAAO3rB,IAAMA,EACb2rB,EAAOtc,IAAMA,EACbsc,EAAOJ,MAAQA,OACEr6B,IAAb8f,EAAK08B,IACP/hB,EAAO+hB,IAAM18B,EAAK08B,IAElB/hB,EAAOzD,MAAQA,EAEjByD,EAAO7qB,MAAQkQ,EAAKlQ,MACb6qB,CACT,CAg2TsBm8C,CAAmB92D,EAAK2uC,OAC9B3uC,EAAKw/B,WACfx/B,EAAKw/B,SAAW9kB,GAAgB1a,EAAK2uC,QAEhCptD,KAAK65B,WAAWpb,EAAM,kBAC/B,CACAwlD,wBACE,GAAIjkE,KAAK2qB,MAAM,KAAM,CACnB,MAAM+/B,EAAS1qD,KAAK66C,mBAAmB76C,KAAK2kB,MAAMpW,OAC5CinE,EAAY9qB,EAAOn8C,MAAMoc,MAAMojD,IAOrC,OANIyH,GACFx1E,KAAKwiB,MAAM3E,EAAOrG,iCAAkC,CAClDjT,GAAImmD,EACJjzC,kBAAmB+9D,EAAU,GAAG7vD,WAAW,KAGxC+kC,CACT,CACA,OAAO1qD,KAAKwxC,iBAAgB,EAC9B,CACAikC,mBAAmBh3D,GACjB,OAAuB,MAAnBA,EAAKk2D,YACAl2D,EAAKk2D,WAAWhiD,MAAK,EAC1BnmB,MACA+B,WAEuB,SAAhBA,EAAMA,QAAkC,eAAb/B,EAAIyE,KAAqC,SAAbzE,EAAIjL,KAAgC,SAAdiL,EAAI+B,QAI9F,CACAy+C,sBAAsBvuC,GAElB,IAAIi3D,EADFj3D,EAAKwuC,SAEwB,IAA3BxuC,EAAKqH,WAAWhZ,QAA4C,2BAA5B2R,EAAKqH,WAAW,GAAG7U,MACrDjR,KAAKwiB,MAAM3E,EAAOjJ,2BAA4B,CAC5CrQ,GAAIka,EAAKqH,WAAW,GAAGhJ,IAAItP,SAGc,OAAvCkoE,EAAmBj3D,EAAKk2D,iBAAsB,EAASe,EAAiB5oE,QAAU,GACtF9M,KAAKwiB,MAAM3E,EAAOlJ,6BAA8B,CAC9CpQ,GAAIka,EAAKqH,WAAW,GAAGhJ,IAAItP,QAInC,CACAwnE,sBAAsBv2D,GACpB,GAAIze,KAAKy1E,mBAAmBh3D,IAAuB,yBAAdA,EAAKxN,KAAiC,CACzE,MAAM,WACJ6U,GACErH,EACJ,GAAkB,MAAdqH,EAAoB,CACtB,MAAM6vD,EAA2B7vD,EAAW8zB,MAAKuT,IAC/C,IAAIS,EAMJ,GALuB,oBAAnBT,EAAUl8C,KACZ28C,EAAWT,EAAUC,MACO,oBAAnBD,EAAUl8C,OACnB28C,EAAWT,EAAUS,eAENjvD,IAAbivD,EACF,MAAyB,eAAlBA,EAAS38C,KAA0C,YAAlB28C,EAASrsD,KAAwC,YAAnBqsD,EAASr/C,KACjF,SAE+B5P,IAA7Bg3E,GACF31E,KAAKwiB,MAAM3E,EAAOnJ,4BAA6B,CAC7CnQ,GAAIoxE,EAAyB74D,IAAItP,OAGvC,CACF,CACF,CACAooE,2BAA2Bn3D,GACzB,IAAIo3D,GAAqB,EACzB,GAAI71E,KAAK41B,aAAa,KAAM,CAC1B,MAAMvI,EAAYrtB,KAAKqtB,YACjBunD,EAAWvnD,EAAUpc,KACvBtF,EAAkBipE,IACH,KAAbA,GAI6B,MADA50E,KAAK0lB,MAAMC,WAAW3lB,KAAKytB,oBAAoBJ,EAAU5f,SAFxFooE,GAAqB,GAOD,KAAbjB,IACTiB,GAAqB,EAEzB,CACIA,GACF71E,KAAKovB,aAAa,oBAClBpvB,KAAK0iB,OACLjE,EAAKwuC,QAAS,GACLjtD,KAAKsjB,UAAU,sBACxB7E,EAAKwuC,QAAS,EAElB,CACA9J,YAAY1kC,GAEV,GADAA,EAAKqH,WAAa,IACb9lB,KAAK2qB,MAAM,KAAM,CACpB3qB,KAAK41E,2BAA2Bn3D,GAChC,MACMq3D,GADa91E,KAAKstD,iCAAiC7uC,IACxBze,KAAKktB,IAAI,IACpCgnD,EAAU4B,GAAa91E,KAAKwlE,8BAA8B/mD,GAC5Dq3D,IAAc5B,GAASl0E,KAAKylE,2BAA2BhnD,GAC3Dze,KAAKm2B,iBAAiB,GACxB,CACA1X,EAAKnS,OAAStM,KAAK0lE,oBACnB,MAAMiP,EAAa30E,KAAK+0E,6BACxB,GAAIJ,EACFl2D,EAAKk2D,WAAaA,MACb,CACL,MAAM92B,EAAa79C,KAAK+1E,6BACpBl4B,IACFp/B,EAAKo/B,WAAaA,EAEtB,CAIA,OAHA79C,KAAKgtD,sBAAsBvuC,GAC3Bze,KAAKg1E,sBAAsBv2D,GAC3Bze,KAAKw2B,YACEx2B,KAAK65B,WAAWpb,EAAM,oBAC/B,CACAinD,oBAEE,OADK1lE,KAAK2qB,MAAM,MAAM3qB,KAAK+V,aACpB/V,KAAK4/C,eACd,CACAmN,yBAAyBtuC,GACvB,OAAO9S,EAAkB3L,KAAK2kB,MAAM1T,KACtC,CACAi8C,0BAA0BzuC,EAAM0uC,EAAWl8C,GACzCk8C,EAAUC,MAAQptD,KAAKwxC,kBACvB/yB,EAAKqH,WAAWvjB,KAAKvC,KAAKqtD,sBAAsBF,EAAWl8C,GAC7D,CACAo8C,sBAAsBF,EAAWl8C,EAAMgR,EAAc9B,MAOnD,OANAngB,KAAKmzC,UAAUga,EAAUC,MAAO,CAC9Bha,GAAI,CACFniC,QAEF8hC,QAAS9wB,IAEJjiB,KAAK65B,WAAWszB,EAAWl8C,EACpC,CACA+kE,qBACE,MAAMC,EAAQ,GACRC,EAAY,IAAIv6D,IACtB,EAAG,CACD,GAAI3b,KAAK2qB,MAAM,GACb,MAEF,MAAMlM,EAAOze,KAAK05B,YACZ4yC,EAAUtsE,KAAK2kB,MAAMpW,MAc3B,GAbI2nE,EAAUr2D,IAAIysD,IAChBtsE,KAAKwiB,MAAM3E,EAAOtG,kCAAmC,CACnDhT,GAAIvE,KAAK2kB,MAAMkC,SACfra,IAAK8/D,IAGT4J,EAAU/zD,IAAImqD,GACVtsE,KAAK2qB,MAAM,KACblM,EAAKjS,IAAMxM,KAAK66C,mBAAmByxB,GAEnC7tD,EAAKjS,IAAMxM,KAAKwxC,iBAAgB,GAElCxxC,KAAK02B,OAAO,KACP12B,KAAK2qB,MAAM,KACd,MAAM3qB,KAAKwiB,MAAM3E,EAAOvG,4BAA6B,CACnD/S,GAAIvE,KAAK2kB,MAAMkC,WAGnBpI,EAAKlQ,MAAQvO,KAAK66C,mBAAmB76C,KAAK2kB,MAAMpW,OAChD0nE,EAAM1zE,KAAKvC,KAAK65B,WAAWpb,EAAM,mBACnC,OAASze,KAAKktB,IAAI,KAClB,OAAO+oD,CACT,CACAF,6BACE,IAAI/1E,KAAK2qB,MAAM,KAAQ3qB,KAAKq2B,wBAI1B,OAAIr2B,KAAKsjB,UAAU,oBAA4B,GACxC,KAJPtjB,KAAKovB,aAAa,oBAClBpvB,KAAK0iB,OAKP,MAAMuzD,EAAQ,GACRp4B,EAAa,IAAIliC,IACvB,EAAG,CACD,MAAM8C,EAAOze,KAAK05B,YAelB,GAdAjb,EAAKjS,IAAMxM,KAAKwxC,iBAAgB,GACV,SAAlB/yB,EAAKjS,IAAIjL,MACXvB,KAAKwiB,MAAM3E,EAAOxG,iCAAkC,CAClD9S,GAAIka,EAAKjS,MAGTqxC,EAAWh+B,IAAIpB,EAAKjS,IAAIjL,OAC1BvB,KAAKwiB,MAAM3E,EAAOtG,kCAAmC,CACnDhT,GAAIka,EAAKjS,IACTA,IAAKiS,EAAKjS,IAAIjL,OAGlBs8C,EAAW17B,IAAI1D,EAAKjS,IAAIjL,MACxBvB,KAAK02B,OAAO,KACP12B,KAAK2qB,MAAM,KACd,MAAM3qB,KAAKwiB,MAAM3E,EAAOvG,4BAA6B,CACnD/S,GAAIvE,KAAK2kB,MAAMkC,WAGnBpI,EAAKlQ,MAAQvO,KAAK66C,mBAAmB76C,KAAK2kB,MAAMpW,OAChDvO,KAAK65B,WAAWpb,EAAM,mBACtBw3D,EAAM1zE,KAAKkc,EACb,OAASze,KAAKktB,IAAI,KAClB,OAAO+oD,CACT,CACAlB,6BACE,IAAI/0E,KAAK41B,aAAa,KAAQ51B,KAAKq2B,wBAIjC,OAAIr2B,KAAKsjB,UAAU,oBAA4B,GACxC,KAJPtjB,KAAKovB,aAAa,oBAClBpvB,KAAK0iB,OAKP1iB,KAAKktB,IAAI,GACT,MAAM+oD,EAAQj2E,KAAKg2E,qBAEnB,OADAh2E,KAAKktB,IAAI,GACF+oD,CACT,CACA3oB,iCAAiC7uC,GAC/B,QAAIze,KAAK+sD,yBAAyBtuC,KAChCze,KAAKktD,0BAA0BzuC,EAAMze,KAAK05B,YAAa,2BAChD,EAGX,CACA8rC,8BAA8B/mD,GAC5B,GAAIze,KAAK2qB,MAAM,IAAK,CAClB,MAAMwiC,EAAYntD,KAAK05B,YAIvB,OAHA15B,KAAK0iB,OACL1iB,KAAKm2B,iBAAiB,IACtBn2B,KAAKktD,0BAA0BzuC,EAAM0uC,EAAW,6BACzC,CACT,CACA,OAAO,CACT,CACAsY,2BAA2BhnD,GACzB,IAAIozB,GAAQ,EAEZ,IADA7xC,KAAK02B,OAAO,IACJ12B,KAAKktB,IAAI,IAAI,CACnB,GAAI2kB,EACFA,GAAQ,MACH,CACL,GAAI7xC,KAAKktB,IAAI,IACX,MAAMltB,KAAKwiB,MAAM3E,EAAO9K,uBAAwB,CAC9CxO,GAAIvE,KAAK2kB,MAAMkC,WAInB,GADA7mB,KAAK02B,OAAO,IACR12B,KAAKktB,IAAI,GAAI,KACnB,CACA,MAAMigC,EAAYntD,KAAK05B,YACjB8zB,EAAmBxtD,KAAK2qB,MAAM,KAC9B+iC,EAAkB1tD,KAAK41B,aAAa,KAC1Cu3B,EAAUS,SAAW5tD,KAAKikE,wBAC1B,MAAMkS,EAAkBn2E,KAAKutD,qBAAqBJ,EAAWK,EAAsC,SAApB/uC,EAAKof,YAA6C,WAApBpf,EAAKof,WAAyB6vB,OAAiB/uD,GAC5J8f,EAAKqH,WAAWvjB,KAAK4zE,EACvB,CACF,CACA5oB,qBAAqBJ,EAAWK,EAAkBC,EAAoBC,EAAiBzrC,GACrF,GAAIjiB,KAAKk2B,cAAc,IACrBi3B,EAAUC,MAAQptD,KAAKwxC,sBAClB,CACL,MAAM,SACJoc,GACET,EACJ,GAAIK,EACF,MAAMxtD,KAAKwiB,MAAM3E,EAAO1J,sBAAuB,CAC7C5P,GAAI4oD,EACJ/4C,WAAYw5C,EAASr/C,QAGzBvO,KAAKguD,kBAAkBJ,EAASrsD,KAAM4rD,EAAUrwC,IAAItP,OAAO,GAAM,GAC5D2/C,EAAUC,QACbD,EAAUC,MAAQj0B,GAAgBy0B,GAEtC,CACA,OAAO5tD,KAAKqtD,sBAAsBF,EAAW,kBAAmBlrC,EAClE,CACAuqC,YAAY9Z,GACV,MAAsB,eAAfA,EAAMzhC,MAAwC,SAAfyhC,EAAMnxC,IAC9C,EAEF,MAAM60E,WAAenI,GACnBpuE,YAAY2B,EAASkkB,GAEnB1C,MADAxhB,EAx4bJ,SAAoB60E,GAClB,GAAIA,GAAuB,MAAfA,EAAK12E,SAAkC,IAAhB02E,EAAK12E,OACtC,MAAM,IAAIkvC,MAAM,mDAElB,MAAMrtC,EAAU,CAAC,EACjB,IAAK,MAAMgL,KAAOI,OAAOC,KAAKrO,GAC5BgD,EAAQgL,GAAO6pE,GAAqB,MAAbA,EAAK7pE,GAAe6pE,EAAK7pE,GAAOhO,EAAegO,GAExE,OAAOhL,CACT,CA+3bc80E,CAAW90E,GACNkkB,GACf1lB,KAAKwB,QAAUA,EACfxB,KAAKg4B,mBACLh4B,KAAKZ,QAiBT,SAAoBA,GAClB,MAAMm3E,EAAY,IAAIl1E,IACtB,IAAK,MAAMuiB,KAAUxkB,EAAS,CAC5B,MAAOmC,EAAMC,GAAW8b,MAAMC,QAAQqG,GAAUA,EAAS,CAACA,EAAQ,CAAC,GAC9D2yD,EAAU12D,IAAIte,IAAOg1E,EAAU70E,IAAIH,EAAMC,GAAW,CAAC,EAC5D,CACA,OAAO+0E,CACT,CAxBmBC,CAAWx2E,KAAKwB,QAAQpC,SACvCY,KAAK0N,SAAWlM,EAAQ9C,cAC1B,CACA45B,kBACE,OAAO3X,EACT,CACAu5B,QACEl6C,KAAK24B,qBACL,MAAMwhB,EAAOn6C,KAAK05B,YACZs2B,EAAUhwD,KAAK05B,YAKrB,OAJA15B,KAAKitB,YACLktB,EAAKpzB,OAAS,KACd/mB,KAAK+vD,cAAc5V,EAAM6V,GACzB7V,EAAKpzB,OAAS/mB,KAAK2kB,MAAMoC,OAClBozB,CACT,GAgDF,SAAoCs8B,GAClC,MAAM50E,EAAa,CAAC,EACpB,IAAK,MAAMozD,KAAYroD,OAAOC,KAAK4pE,GACjC50E,EAAWozD,GAAY7oD,EAAiBqqE,EAAmBxhB,GAG/D,CACiByhB,CAA2B7zE,GAC5C,SAAS8zE,GAAUn1E,EAASkkB,GAC1B,IAAI46C,EAAM8V,GAKV,OAJe,MAAX50E,GAAmBA,EAAQpC,UApyHjC,SAAyBA,GACvB,GAAIkkB,GAAUlkB,EAAS,cAAe,CACpC,GAAIkkB,GAAUlkB,EAAS,qBACrB,MAAM,IAAIyvC,MAAM,mEAElB,MAAM+nC,EAAyBjzD,GAAgBvkB,EAAS,aAAc,0BACtE,GAA8B,MAA1Bw3E,GAAoE,kBAA3BA,EAC3C,MAAM,IAAI/nC,MAAM,6DAElB,MAAMgoC,EAAyBlzD,GAAgBvkB,EAAS,aAAc,0BACtE,GAA8B,MAA1By3E,GAAoE,kBAA3BA,EAC3C,MAAM,IAAIhoC,MAAM,8CAEpB,CACA,GAAIvrB,GAAUlkB,EAAS,SAAWkkB,GAAUlkB,EAAS,cACnD,MAAM,IAAIyvC,MAAM,+CAElB,GAAIvrB,GAAUlkB,EAAS,iBAAmBkkB,GAAUlkB,EAAS,eAC3D,MAAM,IAAIyvC,MAAM,wDAElB,GAAIvrB,GAAUlkB,EAAS,oBAAqB,CAC1C,MAAM0wB,EAAWnM,GAAgBvkB,EAAS,mBAAoB,YAC9D,IAAKy6C,GAAmB3oB,SAASpB,GAAW,CAC1C,MAAMgnD,EAAej9B,GAAmBjrC,KAAI8qC,GAAK,IAAIA,OAAMziC,KAAK,MAChE,MAAM,IAAI43B,MAAM,6EAA6EioC,KAC/F,CACA,MAAMC,EAAoBzzD,GAAUlkB,EAAS,CAAC,iBAAkB,CAC9D43E,WAAY,UAEd,GAAiB,SAAblnD,EAAqB,CACvB,GAAIxM,GAAUlkB,EAAS,gBACrB,MAAM,IAAIyvC,MAAM,4DAElB,GAAIvrB,GAAUlkB,EAAS,eACrB,MAAM,IAAIyvC,MAAM,2DAElB,MAAM9e,EAAapM,GAAgBvkB,EAAS,mBAAoB,cAChE,IAAK06C,GAAa5oB,SAASnB,GAAa,CACtC,MAAMknD,EAAYn9B,GAAalrC,KAAIisD,GAAK,IAAIA,OAAM5jD,KAAK,MACvD,MAAM,IAAI43B,MAAM,iHAAiHooC,KACnI,CACA,GAAmB,MAAflnD,GAAsBgnD,EACxB,MAAM,IAAIloC,MAAM,yIAEpB,MAAO,GAAiB,UAAb/e,GAAwBinD,EACjC,MAAM,IAAIloC,MAAM,yHAEpB,CACA,GAAIvrB,GAAUlkB,EAAS,oBACrB,CACE,GAAIkkB,GAAUlkB,EAAS,oBACrB,MAAM,IAAIyvC,MAAM,iEAGlB,GAA4C,aADAlrB,GAAgBvkB,EAAS,mBAAoB,WAEvF,MAAM,IAAIyvC,MAAM,uJAEpB,CAEF,GAAIvrB,GAAUlkB,EAAS,mBAAiF,MAA5DukB,GAAgBvkB,EAAS,iBAAkB,gBAA0B26C,GAA8B7oB,SAASvN,GAAgBvkB,EAAS,iBAAkB,eACjM,MAAM,IAAIyvC,MAAM,0EAA4EkL,GAA8BnrC,KAAI8qC,GAAK,IAAIA,OAAMziC,KAAK,OAEpJ,GAAIqM,GAAUlkB,EAAS,wBAA0BkkB,GAAUlkB,EAAS,iBAAkB,CACpF,MAAMmzB,EAAQ,IAAIsc,MAAM,gGAExB,MADAtc,EAAM2kD,eAAiB,gBACjB3kD,CACR,CACF,CAkuHI4kD,CAAgB31E,EAAQpC,SACxBkhE,EAKJ,SAAwB8W,GACtB,MAAMC,EAAa1R,GAAiB92D,QAAOtN,GAAQ+hB,GAAU8zD,EAAoB71E,KAC3EiL,EAAM6qE,EAAWpgE,KAAK,KAC5B,IAAIqpD,EAAMgX,GAAiB9qE,GAC3B,IAAK8zD,EAAK,CACRA,EAAM8V,GACN,IAAK,MAAMxyD,KAAUyzD,EACnB/W,EAAMtmB,GAAap2B,GAAQ08C,GAE7BgX,GAAiB9qE,GAAO8zD,CAC1B,CACA,OAAOA,CACT,CAjBUiX,CAAe/1E,EAAQpC,UAExB,IAAIkhE,EAAI9+D,EAASkkB,EAC1B,CACA,MAAM4xD,GAAmB,CAAC,EAc1BE,EAAQ,GApER,SAAe9xD,EAAOlkB,GACpB,IAAIi2E,EACJ,GAAsE,iBAAzC,OAAvBA,EAAWj2E,QAAmB,EAASi2E,EAASh5E,YA0BpD,OAAOk4E,GAAUn1E,EAASkkB,GAAOw0B,QAzBjC14C,EAAUoL,OAAOjI,OAAO,CAAC,EAAGnD,GAC5B,IACEA,EAAQ/C,WAAa,SACrB,MAAMmiB,EAAS+1D,GAAUn1E,EAASkkB,GAC5BgyD,EAAM92D,EAAOs5B,QACnB,GAAIt5B,EAAOwC,kBACT,OAAOs0D,EAET,GAAI92D,EAAOyC,4BACT,IAEE,OADA7hB,EAAQ/C,WAAa,SACdk4E,GAAUn1E,EAASkkB,GAAOw0B,OACnC,CAAE,MAAOQ,GAAU,MAEnBg9B,EAAI1nB,QAAQvxD,WAAa,SAE3B,OAAOi5E,CACT,CAAE,MAAOC,GACP,IAEE,OADAn2E,EAAQ/C,WAAa,SACdk4E,GAAUn1E,EAASkkB,GAAOw0B,OACnC,CAAE,MAAOygB,GAAW,CACpB,MAAMgd,CACR,CAIJ,EAuCAH,EAAQ,GAtCR,SAAyB9xD,EAAOlkB,GAC9B,MAAMof,EAAS+1D,GAAUn1E,EAASkkB,GAIlC,OAHI9E,EAAOpf,QAAQnC,aACjBuhB,EAAO+D,MAAM+B,QAAS,GAEjB9F,EAAOsiD,eAChB,C,gDCl+be,SAAS0U,EAAgBC,EAAKrrE,EAAK+B,GAYhD,OAXA/B,GAAM,OAAcA,MACTqrE,EACTjrE,OAAOsC,eAAe2oE,EAAKrrE,EAAK,CAC9B+B,MAAOA,EACPQ,YAAY,EACZI,cAAc,EACd2oE,UAAU,IAGZD,EAAIrrE,GAAO+B,EAENspE,CACT,C,gDCbA,SAASE,EAAQzpE,EAAQ0pE,GACvB,IAAInrE,EAAOD,OAAOC,KAAKyB,GACvB,GAAI1B,OAAOqrE,sBAAuB,CAChC,IAAIC,EAAUtrE,OAAOqrE,sBAAsB3pE,GAC3C0pE,IAAmBE,EAAUA,EAAQrpE,QAAO,SAAUspE,GACpD,OAAOvrE,OAAOwrE,yBAAyB9pE,EAAQ6pE,GAAKppE,UACtD,KAAKlC,EAAKtK,KAAK81E,MAAMxrE,EAAMqrE,EAC7B,CACA,OAAOrrE,CACT,CACe,SAASyrE,EAAe5rE,GACrC,IAAK,IAAID,EAAI,EAAGA,EAAImZ,UAAU9Y,OAAQL,IAAK,CACzC,IAAIH,EAAS,MAAQsZ,UAAUnZ,GAAKmZ,UAAUnZ,GAAK,CAAC,EACpDA,EAAI,EAAIsrE,EAAQnrE,OAAON,IAAS,GAAI6hB,SAAQ,SAAU3hB,IACpD,OAAeE,EAAQF,EAAKF,EAAOE,GACrC,IAAKI,OAAO2rE,0BAA4B3rE,OAAO4rE,iBAAiB9rE,EAAQE,OAAO2rE,0BAA0BjsE,IAAWyrE,EAAQnrE,OAAON,IAAS6hB,SAAQ,SAAU3hB,GAC5JI,OAAOsC,eAAexC,EAAQF,EAAKI,OAAOwrE,yBAAyB9rE,EAAQE,GAC7E,GACF,CACA,OAAOE,CACT,C,iBCpBe,SAAS+rE,EAAyBnsE,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAE7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAEvB,OAAOE,CACT,CDRe,CAA6BJ,EAAQC,GAElD,GAAIK,OAAOqrE,sBAAuB,CAChC,IAAIS,EAAmB9rE,OAAOqrE,sBAAsB3rE,GACpD,IAAKG,EAAI,EAAGA,EAAIisE,EAAiB5rE,OAAQL,IACvCD,EAAMksE,EAAiBjsE,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOssB,UAAUy/C,qBAAqBzlC,KAAK5mC,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,C,gEEbe,SAASksE,EAAetoC,GACrC,IAAI9jC,ECFS,SAAsBkZ,EAAOmzD,GAC1C,GAAuB,YAAnB,OAAQnzD,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIozD,EAAOpzD,EAAMqzD,OAAOC,aACxB,QAAar6E,IAATm6E,EAAoB,CACtB,IAAI/uD,EAAM+uD,EAAK5lC,KAAKxtB,EAAOmzD,UAC3B,GAAqB,YAAjB,OAAQ9uD,GAAmB,OAAOA,EACtC,MAAM,IAAIkvD,UAAU,+CACtB,CACA,OAA4B/nE,OAAiBwU,EAC/C,CDPY,CAAY4qB,GACtB,MAAwB,YAAjB,OAAQ9jC,GAAoBA,EAAM0E,OAAO1E,EAClD,C,iBELe,SAASpE,EAAQyvE,GAG9B,OAAOzvE,EAAU,mBAAqB2wE,QAAU,iBAAmBA,OAAO1kD,SAAW,SAAUwjD,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBkB,QAAUlB,EAAIh4E,cAAgBk5E,QAAUlB,IAAQkB,OAAO7/C,UAAY,gBAAkB2+C,CAC1H,EAAGzvE,EAAQyvE,EACb,C,wLCNO,MAAMqB,EACXr5E,eACE,OAAgBG,KAAM,2BAAuB,IAC7C,OAAgBA,KAAM,0BAAsB,IAC5C,OAAgBA,KAAM,gBAAY,EACpC,EAGK,MAAMm5E,EACXt5E,YAAYu5E,IACV,OAAgBp5E,KAAM,gBAAY,IAClC,OAAgBA,KAAM,aAAc,IAAIqB,KACxCrB,KAAKq5E,SAAWD,CAClB,CACAE,WAAW/3E,GACT,OAAOvB,KAAKu5E,WAAW15D,IAAIte,EAC7B,CACAi4E,qBAAqBj4E,EAAMk4E,GAMzB,OAJAz5E,KAAKu5E,WAAW73E,IAAIH,EAAM,CACxBm4E,SAAS,EACTD,cAEKE,OAAiBh7E,EAC1B,CASAi7E,uBAAuBr4E,EAAMmlB,GAK3B,OAHA1mB,KAAKu5E,WAAW73E,IAAIH,EAAM,CACxBmlB,WAEKizD,OAAiBh7E,EAC1B,CACAk7E,kBAAkBt4E,EAAMgN,GACtB,IAAIwkC,EAAU/yC,KAAKu5E,WAAWnrE,IAAI7M,GAMlC,OAJAqL,OAAOjI,OAAOouC,EAAS,CACrB+mC,aAAa,EACbvrE,UAEKorE,OAAiBh7E,EAC1B,CAUAo7E,kBAAkBx4E,EAAMgN,EAAOmY,GAC7B,IAAIqsB,EAAU/yC,KAAKu5E,WAAWnrE,IAAI7M,GAElC,IAAKwxC,EAAQ+mC,YACX,MAAM,IAAIE,eAAe,GAAGjmC,OAAOxyC,EAAM,wBACpC,IAAIwxC,EAAQ2mC,QAGjB,MAAM,IAAIT,UAAU,mCAEtB,OAJElmC,EAAQxkC,MAAQA,EAIXorE,OAAiBh7E,EAC1B,CACAs7E,gBAAgB14E,EAAMmlB,GACpB,IAAIqsB,EAAU/yC,KAAKu5E,WAAWnrE,IAAI7M,GAElC,IAAKwxC,EAAQ+mC,YACX,MAAM,IAAIE,eAAe,GAAGjmC,OAAOxyC,EAAM,wBAE3C,OAAOwxC,EAAQxkC,KACjB,EAEK,MAAM2rE,UAA+Bf,GACrC,MAAMgB,UAA4BhB,GAClC,IAAIiB,EAAarB,OAAOsB,IAAI,cACxBlqE,EAAmB4oE,OAAOsB,IAAI,oBAC9BC,EAAiBvB,OAAOsB,IAAI,kBAC5BE,EAAcxB,OAAOsB,IAAI,eACzBG,EAAgBzB,OAAOsB,IAAI,iBAE/B,MAAMI,EAGX56E,YAAYw+C,EAAMrgC,EAAe0I,IAC/B,OAAgB1mB,KAAM,YAAQ,IAC9B,OAAgBA,KAAM,qBAAiB,IACvC,OAAgBA,KAAM,cAAU,GAChCA,KAAK06E,KAAOr8B,EACZr+C,KAAK26E,cAAgB38D,EACrBhe,KAAK46E,OAASl0D,CAChB,EAIK,MAAMm0D,EACXh7E,YAAYoR,EAAM1C,IAChB,OAAgBvO,KAAM,YAAQ,IAC9B,OAAgBA,KAAM,aAAS,GAC/BA,KAAK86E,KAAO7pE,EACZjR,KAAK+6E,MAAQxsE,CACf,EAGK,SAASorE,EAAiBprE,GAC/B,OAAO,IAAIssE,EAAiB,SAAUtsE,EACxC,CACO,IAAIysE,EAAQjC,OAAO,oBCnHnB,SAASkC,EAAkBC,GAChC,IAAIC,EAAQ,IAAIx/D,IACZy/D,EAAU38D,IACZ,GAAInB,MAAMC,QAAQkB,GAChB,IAAK,IAAIuM,KAAKvM,EACZ28D,EAAQpwD,QAEL,GAAIvM,EAET,OAAQA,EAAKxN,MACX,IAAK,aAEH,YADAkqE,EAAMh5D,IAAI1D,EAAKld,MAEjB,IAAK,sBACH,OAAO65E,EAAQ38D,EAAK+hD,cACtB,IAAK,qBAYL,IAAK,sBACH,OAAO4a,EAAQ38D,EAAKmE,IAXtB,IAAK,eACH,OAAOw4D,EAAQ38D,EAAK4F,UACtB,IAAK,oBACH,OAAO+2D,EAAQ38D,EAAK4xB,MACtB,IAAK,gBACH,OAAO+qC,EAAQ38D,EAAK/P,YACtB,IAAK,WACH,OAAO0sE,EAAQ38D,EAAKlQ,OACtB,IAAK,cACH,OAAO6sE,EAAQ38D,EAAKrB,UAI1B,EAGF,OADAg+D,EAAQF,GACD59D,MAAM8V,KAAK+nD,EACpB,CACO,SAASE,EAAmBH,GACjC,IAAIE,EAAU38D,IACZ,GAAInB,MAAMC,QAAQkB,GAChB,OAAOA,EAAKkU,KAAKyoD,GACZ,GAAI38D,EAET,OAAQA,EAAKxN,MACX,IAAK,eACH,OAAOmqE,EAAQ38D,EAAK4F,UACtB,IAAK,oBACH,OAAO,EACT,IAAK,gBACH,OAAO+2D,EAAQ38D,EAAK/P,YACtB,IAAK,WACH,OAAO+P,EAAKk6B,UAAYyiC,EAAQ38D,EAAKlQ,OACvC,IAAK,cACH,OAAO6sE,EAAQ38D,EAAKrB,UAE1B,EAEF,OAAOg+D,EAAQF,EACjB,CACO,SAASI,EAA0BJ,EAAM15E,GAC9C,IAAIg/D,EAAe,GACf+a,EAAc,CAChB/6D,IAAKhf,EAAQgf,KAEX46D,EAAU,CAAC38D,EAAMjd,KACnB,GAAI8b,MAAMC,QAAQkB,GAChB,IAAK,IAAIuM,KAAKvM,EACZ28D,EAAQpwD,EAAGxpB,QAER,GAAIid,EAAM,CAEf,OAAQA,EAAKxN,MACX,IAAK,sBAOH,YAHI4a,QAAQrqB,EAAQgf,KAAOqL,OAAOrqB,EAAQs6C,WACxC0kB,EAAaj+D,KAAKkc,IAGtB,IAAK,sBAIH,YAHIoN,QAAQrqB,EAAQgf,KAAOqL,OAAqB,QAAdpN,EAAKpN,OACrCmvD,EAAaj+D,KAAKkc,IAGtB,IAAK,aAEH,YADA28D,EAAQ38D,EAAKirC,WAAY6xB,GAE3B,IAAK,cAEH,YADAH,EAAQ38D,EAAK09B,KAAMo/B,GAGvB,GAAI/5E,EAAQgf,IACV,OAAQ/B,EAAKxN,MACX,IAAK,iBAOL,IAAK,mBACL,IAAK,iBAEH,YADAmqE,EAAQ38D,EAAK09B,KAAMo/B,GANrB,IAAK,cAGH,OAFAH,EAAQ38D,EAAKirC,WAAY6xB,QACzBH,EAAQ38D,EAAKsrC,UAAWwxB,GAM1B,IAAK,eAGH,OAFAH,EAAQ38D,EAAK+J,KAAM+yD,QACnBH,EAAQ38D,EAAK09B,KAAMo/B,GAErB,IAAK,iBACL,IAAK,iBAGH,OAFAH,EAAQ38D,EAAK4xB,KAAMkrC,QACnBH,EAAQ38D,EAAK09B,KAAMo/B,GAErB,IAAK,kBAEH,YADAH,EAAQ38D,EAAKwzD,MAAOsJ,GAEtB,IAAK,eAIH,OAHAH,EAAQ38D,EAAK4zD,MAAOkJ,GACpBH,EAAQ38D,EAAK6zD,QAASiJ,QACtBH,EAAQ38D,EAAK+zD,UAAW+I,GAIhC,GAGF,OADAH,EAAQF,EAAM15E,GACPg/D,CACT,CC1HO,SAASgb,EAAoBC,GAClC,MAAkB,iBAAXA,EAAEf,QAA6Be,EAAEf,gBAAgBvB,EAC1D,CAGO,SAASuC,EAA4BD,EAAGE,GAE7C,OADWF,EAAEf,KACDb,kBAAkB4B,EAAEd,cAAegB,EACjD,CAGO,SAASC,EAAmBlvE,EAAQJ,EAAQuvE,GACjD,GAAIvvE,QACF,OAAOI,EAET,IAAIG,EAAOD,OAAOkvE,oBAAoBxvE,GAAQynC,OAAOnnC,OAAOqrE,sBAAsB3rE,IAClF,IAAK,IAAIyvE,KAAWlvE,EAClB,IAAKgvE,EAAch8D,IAAIk8D,GAAU,CAC/B,IAAI58B,EAAOvyC,OAAOwrE,yBAAyB9rE,EAAQyvE,GAC/C58B,SAAoCA,EAAKpwC,aAC3CrC,EAAOqvE,GAAWzvE,EAAOyvE,GAE7B,CAEF,OAAOrvE,CACT,CAGO,SAASsvE,EAAmCC,EAAgBC,GACjE,IAAIC,EAAkC,UAAxBF,EAAe5qE,KAC7B,IAAK,IAAI9P,KAAQ05E,EAAkBgB,GAC7BE,EACFD,EAAItC,uBAAuBr4E,GAAM,GAEjC26E,EAAI1C,qBAAqBj4E,GAAM,EAGrC,CAGO,SAAS66E,EAAcC,GAC5B,MAA2B,WAApBA,EAAWvB,MAAwC,YAAnBuB,EAAWvB,IACpD,CAGO,SAASwB,EAAYD,EAAY9tE,GACtC,OAAI8tE,EAAWtB,QAAUC,EAChBqB,EAEF,IAAIxB,EAAiBwB,EAAWvB,KAAMvsE,EAC/C,CAGO,SAASguE,EAASd,GAKvB,GAJIA,aAAaZ,IAEfY,EAAIA,EAAEV,SAEFU,aAAahB,GACjB,OAAOgB,EAET,GAAe,iBAAXA,EAAEf,KACJ,MAAM,IAAIV,eAAe,GAAGjmC,OAAO0nC,EAAEd,cAAe,oBAEtD,OAAIc,EAAEf,gBAAgBvB,EACTsC,EAAEf,KACDT,gBAAgBwB,EAAEd,cAAec,EAAEb,QAE1Ca,EAAEf,KAAKe,EAAEd,cAClB,CAGO,SAAS6B,EAAclsC,GAC5B,MAAmB,iBAARA,EACFA,EAEFp/B,OAAOo/B,EAChB,CAGO,SAASmsC,EAAKhB,EAAGiB,GACtB,OAAOjB,EAAEiB,EACX,CAGO,SAASC,EAASlB,EAAGE,GAE1B,GAAe,iBAAXF,EAAEf,KACJ,MAAM,IAAIV,eAAe,GAAGjmC,OAAO0nC,EAAEd,cAAe,oBAEtD,OAAIc,EAAEf,gBAAgBvB,EACbsC,EAAEf,KAAKX,kBAAkB0B,EAAEd,cAAegB,EAAGF,EAAEb,SAExDa,EAAEf,KAAKe,EAAEd,eAAiBgB,EACnBhC,OAAiBh7E,GAC1B,CAGO,SAASi+E,EAAyB75D,GACvC,GAuFyBgpD,EAvFThpD,IAwFZzF,MAAMC,QAAQwuD,IAGdA,SAGsC,mBAA5BA,EAAOgN,OAAO1kD,WA7F1B,MAAM,IAAI4kD,UAAU,GAAGllC,cAAchxB,EAAM,qBAsFxC,IAAoBgpD,EApFzB,OAAOhpD,EAAKg2D,OAAO1kD,WACrB,CAGO,SAASwoD,EAAuBvsC,GACrC,GAAIA,QACF,MAAM,IAAI2oC,UAAU,qDAExB,CAGO,SAAS6D,EAAuBZ,EAAK36E,EAAMmlB,GAChD,OAAKw1D,EAGDA,EAAI5C,WAAW/3E,GACV,IAAIk5E,EAAgByB,EAAK36E,EAAMmlB,GAEjCo2D,EAAuBZ,EAAI7C,SAAU93E,EAAMmlB,GALzC,IAAI+zD,EAAgB,eAAgBl5E,EAAMmlB,EAMrD,CAGO,SAASq2D,EAAmCC,EAAW5sC,EAAU6sC,GACtE,OAAQ7sC,GACN,IAAK,IACH,OAAO4sC,EAAYC,EACrB,IAAK,IACH,OAAOD,EAAYC,EACrB,IAAK,IACH,OAAOD,EAAYC,EACrB,IAAK,IACH,OAAOD,EAAYC,EACrB,IAAK,IACH,OAAOD,EAAYC,EACrB,IAAK,KACH,OAAOD,GAAaC,EACtB,IAAK,KACH,OAAOD,GAAaC,EACtB,IAAK,MACH,OAAOD,IAAcC,EACvB,IAAK,KACH,OAAOD,GAAaC,EACtB,IAAK,MACH,OAAOD,IAAcC,EACvB,IAAK,IACH,OAAOD,EAAYC,EACrB,IAAK,IACH,OAAOD,EAAYC,EACrB,IAAK,KACH,OAAOD,GAAaC,EACtB,IAAK,KACH,OAAOD,GAAaC,EAExB,MAAM,IAAIjvE,YAAY,gCAAgC+lC,OAAO3D,EAAU,KACzE,CCpIA,IAAI8sC,EAAkB,IAAIC,QAAQ,CAElCC,SAEAxwE,OAEAwwE,SAASlkD,UAAWtsB,OAAOssB,UA5B3B,WAIE,GAAoB,oBAATmkD,KACT,OAAOA,KAET,GAAsB,oBAAXC,OACT,OAAOA,OAET,GAAsB,oBAAXvgB,OACT,OAAOA,OAET,MAAM,IAAIluB,MAAM,iCAClB,CAgBA0uC,KACO,SAASC,EAASzR,GAEvB,GAAImR,EAAgBr9D,IAAIksD,GACtB,MAAM,IAAIkN,UAAU,qDAExB,CACA,IAAIwE,EAAsB,IAAIN,QAAQ,CAAC7/D,MAAOjc,IAAKsa,IAAK+hE,gBAAiBC,QAASR,UCtC3E,SAASS,EAAKC,EAASC,GAC5B,IAAIC,GACA,MACFC,EAAK,gBACLC,EAAkB,CAAC,EAAC,MACpBC,EAAQ,CAAC,GACPt4D,UAAU9Y,OAAS,QAAsBnO,IAAjBinB,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACrEu4D,EAAkC,wBAAjBN,EAAQ5sE,KACzBmtE,EAAU,IAAIlE,EAAuB,MACrCmE,EAAc,IAAInF,EACtBmF,EAAYC,oBAAsBF,EAClCC,EAAYE,mBAAqBH,EACjC,IAAII,EAAwB,CAACH,GAC7B,IAAK,IAAK7xE,EAAK+B,KAAU3B,OAAO6xE,QAAQR,GACtCG,EAAQxE,uBAAuBptE,GAAK,GACpC4xE,EAAQvE,kBAAkBrtE,EAAK+B,GAEjC,IAAImwE,EAAc,IAAIf,QAqBtB,SAASgB,EAASlgE,EAAMmgE,GACtB,IAAIC,EAAuBC,EAAqBC,EAGhD,OAFmD,QAAlDF,EAAwBX,EAAMc,sBAAsD,IAA1BH,GAA4CA,EAAsB3rC,KAAKgrC,EAAOz/D,GAEjIA,EAAKxN,MACX,IAAK,kBAGD,IAAIguE,EAAQ,GACZ,IAAK,IAAIpuC,KAAWpyB,EAAK4F,SACvB,GAAKwsB,EAEE,GAAqB,kBAAjBA,EAAQ5/B,KAA0B,CAC3C,IAAIiuE,EAAe3C,EAASoC,EAAS9tC,EAAQzzB,WAC7C6hE,EAAM18E,QAAQ28E,EAChB,MACED,EAAM18E,KAAKg6E,EAASoC,EAAS9tC,UAL7BouC,EAAMnyE,QAAU,EAQpB,OAAO6sE,EAAiBsF,GAE5B,IAAK,0BAKD,OAFAE,GAAyB1gE,GAElBk7D,EA2iCCyF,GA5iCyC3gE,EA2iC3C4gE,IAAoBd,oBAC2B,IAziCzD,IAAK,mBAED,IACIvB,EAAYT,EADFoC,EAASlgE,EAAK4xB,OAExBivC,EAAWX,EAASlgE,EAAKm0B,OAAOmoC,MAChCkC,EAAaV,EAAS+C,GAC1B,GAAInB,GAAoC,OAAlB1/D,EAAK2xB,SAAmB,CAI5C,GAA0B,mBAAf6sC,EAA2B,CACpC,IAAIsC,EAAWzB,EAAWt/B,UAAU//B,EAAKm0B,MAAMplC,MAAOiR,EAAKm0B,MAAMnlC,KACjE,MAAM,IAAIwrE,UAAU,GAAGllC,OAAOwrC,EAAU,sBAC1C,CACA,IAAIC,EAMJ,OALIF,aAAoB7E,GAClBe,EAAoB8D,KACtBE,EAAYF,EAAS5E,MAGlBf,EAAiBsD,EAAW/pC,KAAKssC,EAAWxC,GACrD,CAGA,OAAOrD,EADMoD,EAAmCC,EAAWv+D,EAAK2xB,SAAU6sC,IAG9E,IAAK,iBAGD,IAAIwC,EAAMd,EAASlgE,EAAKm/B,OAAQghC,GAAkB7D,MAC9C2E,EAAOnD,EAASkD,GACpB,OAAI,MAACC,IAAyCjhE,EAAKi/B,UAAYkhC,SAA4DA,EAAiBe,UAC1If,EAAiBe,SAAU,EACpBhG,OAAiBh7E,KAE1B6+E,EAASkC,GACFE,GAAaF,EAAMD,EAAKhhE,EAAKmH,UAAWnH,EAAKm/B,SAExD,IAAK,kBAEH,OAAO+gC,EAASlgE,EAAK+wB,WAAY,CAAC,GACpC,IAAK,wBAEH,OAAOmqC,EAAiB4C,EAASoC,EAASpC,EAASoC,EAASlgE,EAAKU,OAASV,EAAKirC,WAAajrC,EAAKsrC,aACnG,IAAK,aAEH,OAAO4vB,EAAiBkG,EAAephE,EAAKld,OAC9C,IAAK,UAGD,GAAIkd,EAAK47B,MAAO,CACd,GAAmB,OAAf57B,EAAKlQ,MAEP,MAAM,IAAIP,YAAY,+BAA+B+lC,OAAOt1B,EAAK08B,MAEnE,GAAI18B,EAAK47B,MAAM95B,MAAM2Q,SAAS,KAE5B,MAAM,IAAIljB,YAAY,mDAAmD+lC,OAAOt1B,EAAK08B,KAEzF,CACA,OAAOw+B,EAAiBl7D,EAAKlQ,OAEjC,IAAK,oBAGD,IAAIuxE,EAAavD,EAASoC,EAASlgE,EAAK4xB,OACxC,OAAQ5xB,EAAK2xB,UACX,IAAK,KACH,OAAOupC,EAAiBmG,GAAcvD,EAASoC,EAASlgE,EAAKm0B,SAC/D,IAAK,KACH,OAAO+mC,EAAiBmG,GAAcvD,EAASoC,EAASlgE,EAAKm0B,SAC/D,IAAK,KACH,OAAO+mC,EAAiBmG,QAA+CA,EAAavD,EAASoC,EAASlgE,EAAKm0B,SAE7G,QACE,MAAM,IAAI5kC,YAEV,iCAAiC+lC,OAAOt1B,EAAK2xB,SAAU,MAG/D,IAAK,mBAGD,IACI2vC,EAAYxD,EADIoC,EAASlgE,EAAKnQ,OAAQswE,GAAkB7D,OAE5D,GAAI,MAACgF,IAAmDthE,EAAKi/B,UAAYkhC,SAA4DA,EAAiBe,SAEpJ,OADAf,EAAiBe,SAAU,EACpBhG,OAAiBh7E,GAE1B6+E,EAASuC,GACT,IAAIC,EAAUvhE,EAAKk6B,SA4sB3B,SAAiDonC,EAAWvwC,EAAY9oB,GACtE,IAEIu5D,EAAczD,EADMD,EADIoC,EAASnvC,KAGrC,OAAO,IAAIirC,EAAgBsF,EAAWE,GAhtBgE,EAitBxG,CAjtBsCC,CAAwCH,EAAWthE,EAAKoZ,UAotB9F,SAAiDkoD,EAAW9rC,EAAYvtB,GACtE,IAAIy5D,EAAqBlsC,EAAW1yC,KACpC,OAAO,IAAIk5E,EAAgBsF,EAAWI,GAttB0I,EAutBlL,CAvtBgHC,CAAwCL,EAAWthE,EAAKoZ,UAEhK,OADA2lD,EAASwC,GACFrG,EAAiBqG,GAE5B,IAAK,gBAEH,OA+vBN,SAAqBK,EAAet9D,GAClC,IACIljB,EAAc08E,EADRoC,EAAS0B,IAEfC,EAAUC,GAAuBx9D,GACrC,GAA2B,mBAAhBljB,IAA6D,IAA/BA,EAAY26E,GAA0B,CAC7E,IAAIgG,EAAkB1C,EAAWt/B,UAAU6hC,EAAc7yE,MAAO6yE,EAAc5yE,KAC9E,MAAM,IAAIwrE,UAAU,GAAGllC,OAAOysC,EAAiB,yBACjD,CACA,IDl4BG,SAA8B3gF,GAEnC,OAAO49E,EAAoB59D,IAAIhgB,IAAgBA,IAAgB4gF,IACjE,CC+3BSC,CAAqB7gF,GAAc,CACtC,IAAI8gF,EAAmB7C,EAAWt/B,UAAU6hC,EAAc7yE,MAAO6yE,EAAc5yE,KAC/E,MAAM,IAAIwrE,UAAU,GAAGllC,OAAO4sC,EAAkB,kCAClD,CACA,OAAOhH,EAAiB,IAAI95E,KAAeygF,GAC7C,CA5wBaM,CAAYniE,EAAKm/B,OAAQn/B,EAAKmH,WACvC,IAAK,mBAGD,IAAItX,EAAS,CAAC,EACd,IAAK,IAAIs9B,KAAQntB,EAAK/P,WACpB,GAAkB,kBAAdk9B,EAAK36B,KAEP2qE,EAAmBttE,EADHiuE,EAASoC,EAAS/yC,EAAKxuB,WACD,IAAIzB,SACrC,CACL,GAAkB,SAAdiwB,EAAKv6B,KACP,MAAM,IAAIrD,YAAY,oCAExB,IAAI6yE,EAAYj1C,EAAK+M,UAA8B,eAAlB/M,EAAKp/B,IAAIyE,KAAwC6vE,GAA6Bl1C,EAAKp/B,KAAlDo/B,EAAKp/B,IAAIjL,KAC3E,GAAiB,cAAbs/E,EACF,MAAM,IAAI5H,UAAU,+CAEtB3qE,EAAOuyE,GAAYtE,EAASoC,EAAS/yC,EAAKr9B,OAC5C,CAEF,OAAOorE,EAAiBrrE,GAE5B,IAAK,qBAGD,IAAIyyE,EACJ,IAAK,IAAI9vC,KAAQxyB,EAAKm6B,YACpBmoC,EAAWpH,EAAiB4C,EAASoC,EAAS1tC,KAEhD,OAAO8vC,EAEX,IAAK,kBAGD,IAAIC,EAAS,CAACviE,EAAKytD,OAAO,GAAG39D,MAAMw9D,QAC/B1+D,GAAQ,EACZ,IAAK,IAAI4zE,MAASxiE,EAAKm6B,YAAa,CAClC,IAAIjwB,GAAM4zD,EAASoC,EAASsC,KAC5BD,EAAOz+E,KAAK2O,OAAOyX,KACnBq4D,EAAOz+E,KAAKkc,EAAKytD,OAAO7+D,IAAS,GAAGkB,MAAMw9D,OAC5C,CACA,OAAO4N,EAAiBqH,EAAO/pE,KAAK,KAExC,IAAK,2BAGD,IAAIiqE,GAASvC,EAASlgE,EAAKqqD,KAAKiS,MAC5BoG,GAAU5E,EAAS2E,IAEvB,OADA1D,EAAS2D,IACFvB,GAAauB,GAASD,GAAQziE,EAAKsqD,MAAOtqD,EAAKqqD,KAE1D,IAAK,kBAGD,IAAIlsD,GAAO+hE,EAASlgE,EAAKrB,UAAU29D,MACnC,IAAKoD,GAAoC,WAAlB1/D,EAAK2xB,SAAuB,CAEjD,KAAMxzB,cAAgB69D,GACpB,OAAOd,GAAiB,GAG1B,GAAI6B,EAAoB5+D,IAEtB,OAAO+8D,SADmB/8D,GAAK89D,KAAK99D,GAAK+9D,eAI7C,CAEA,MAAsB,WAAlBl8D,EAAK2xB,SACHxzB,cAAgB69D,GAAiC,iBAAd79D,GAAK89D,KACnCf,EAAiB,aAEnBA,SAAwB4C,EAAS3/D,KAEnC+8D,EFhEV,SAA4BjtE,EAAQ0jC,GACzC,OAAQA,GACN,IAAK,IACH,OAAQ1jC,EACV,IAAK,IACH,OAAQA,EACV,IAAK,IACH,OAAQA,EACV,IAAK,OACH,OAEJ,MAAM,IAAIsB,YAAY,+BAA+B+lC,OAAO3D,EAAU,KACxE,CEoDkCgxC,CAAmB7E,EAAS3/D,IAAO6B,EAAK2xB,WAGtE,IAAK+tC,EAEH,OAAQ1/D,EAAKxN,MACX,IAAK,uBAGD,GAAsB,MAAlBwN,EAAK2xB,SAAkB,CACzB,GAAyB,iBAAnB3xB,EAAK4xB,KAAKp/B,MAA8C,kBAAnBwN,EAAK4xB,KAAKp/B,KAA2B,CAC9E,IAAIowE,GAAQ1C,EAASlgE,EAAK4xB,MAAM0qC,MAG5BuG,GAAQ/E,EADAoC,EAASlgE,EAAKm0B,QAG1B,OADA+pC,EAAS0E,GAAOC,IACT3H,EAAiB2H,GAC1B,CACA,IACIC,GAAShF,EADAoC,EAASlgE,EAAKm0B,QAG3B,OADA4uC,EAAkC/iE,EAAK4xB,KAAMkxC,IACtC5H,EAAiB4H,GAC1B,CAEA,IAAIE,GAAO9C,EAASlgE,EAAK4xB,MAAM0qC,MAC3B2G,GAAOnF,EAASkF,IAEhBE,GAAOpF,EADAoC,EAASlgE,EAAKm0B,QAErBgvC,GF1GT,SAAwC5E,EAAW5sC,EAAU6sC,GAClE,OAAQ7sC,GACN,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACH,OAAO2sC,EAAmCC,EAAW5sC,EAASyxC,OAAO,EAAGzxC,EAAStjC,OAAS,GAAImwE,GAElG,MAAM,IAAIjvE,YAAY,oCAAoC+lC,OAAO3D,EAAU,KAC7E,CE+FoB0xC,CAA+BJ,GAAMjjE,EAAK2xB,SAAUuxC,IAE5D,OADAhF,EAAS8E,GAAMG,IACRjI,EAAiBiI,IAE5B,IAAK,iBAGD,IAAKnjE,EAAK09B,KAAKrvC,OACb,OAAO6sE,EAAiBqB,GAE1B,IAAI+G,GAAS1C,IAAoBd,mBAC7ByD,GAAW,IAAI9H,EAAuB6H,IAC1CE,GAA8BxjE,EAAK09B,KAAM6lC,IACzC3C,IAAoBd,mBAAqByD,GACzC,IAAIE,GAAaC,GAAsB1jE,EAAK09B,MAE5C,OADAkjC,IAAoBd,mBAAqBwD,GAClCG,GAEX,IAAK,iBAEH,OAAO,IAAIrH,EAAiB,QAASG,GACvC,IAAK,oBAEH,OAAO,IAAIH,EAAiB,WAAYG,GAC1C,IAAK,iBAiBL,IAAK,sBAEH,OAAOrB,EAAiBqB,GAhB1B,IAAK,mBAEH,OAAOoH,EA4Pf,SAA+B3jE,GAG7B,IAFA,IAAIg9D,IAES,CACX,IAAI4G,EAAa1D,EAASlgE,EAAK09B,MAC/B,IAAKigC,EAAciG,GACjB,OAAO/F,EAAY+F,EAAY5G,GAMjC,GAJI4G,EAAWtH,QAAUC,IACvBS,EAAI4G,EAAWtH,QAEDwB,EAASoC,EAASlgE,EAAKU,OAErC,OAAOw6D,EAAiB8B,EAE5B,CACF,CA5Q0C6G,CAAsB7jE,IAC1D,IAAK,sBACL,IAAK,iBAEH,OAAOkgE,EAASlgE,EAAK+wB,YACvB,IAAK,iBACL,IAAK,iBAEH,OAAO4yC,EAwQf,SAA+B3jE,GAC7B,IAAI02C,EAAM12C,EAAK4xB,KAEXkyC,EADqC,wBAAbptB,EAAIlkD,KACmB,QAAbkkD,EAAI9jD,KAAiB,aAAe,iBAAmB,aACzFmxE,EAAsC,mBAAZD,EAA+BtH,EAAkB9lB,GAAO,GAClFstB,EAA8B,mBAAdhkE,EAAKxN,KAA4B,YAAc,UAC/DyxE,EASN,SAA+BF,EAAyBvxC,EAAMwxC,GAC5D,IAAIE,EAAiBtD,IACjB0C,EAASY,EAAepE,mBAC5B,GAAIiE,EAAwB11E,OAAS,EAAG,CACtC,IAAI81E,EAAS,IAAI1I,EAAuB6H,GACxC,IAAK,IAAIxgF,KAAQihF,EACfI,EAAOpJ,qBAAqBj4E,GAAM,GAEpCohF,EAAepE,mBAAqBqE,CACtC,CACA,IAAIC,EAAUlE,EAAS1tC,GACvB0xC,EAAepE,mBAAqBwD,EACpC,IAAIe,EAAYvG,EAASsG,GACzB,GAAsB,cAAlBJ,EAA+B,CACjC,GAAIK,QACF,OAAO,IAAIjI,EAAiB,QAASG,GAEvC,IAAI+H,EA4DR,UAAoCx0E,GAClC,IAAK,IAAIy0E,KAAQz0E,QACTy0E,CAEV,CAhEoBC,CAA0BH,GAC1C,OAAOnJ,EAAiBoJ,EAC1B,CAEA,OAAOpJ,EADQiD,EAAyBkG,GAE1C,CA/BkBI,CAAsBV,EAAyB/jE,EAAKm0B,MAAO6vC,GAC3E,MAAuB,WAAnBC,EAAU5H,KAEL4H,EA6BX,SAA+BjkE,EAAM48B,EAAM8nC,EAAgBV,EAAeF,GAWxE,IAVA,IAEI9G,EAFAtmB,EAAkB,eAAZotB,EAA2B9jE,EAAOA,EAAK+hD,aAAa,GAAG59C,GAC7Dm/D,EAAS1C,IAAoBd,mBAO7B6E,EAA6B,kBAAbjuB,EAAIlkD,MAAyC,iBAAbkkD,EAAIlkD,OAE3C,CACX,IAAI,KACFoyE,EACA90E,MAAO+0E,GACLH,EAAezgE,OACnB,GAAI2gE,EACF,OAAO1J,EAAiB8B,GAE1B,IAAI8H,OAAS,EACTC,OAAe,EACnB,GAAgB,mBAAZjB,GAIF,GAFAvG,EAAmCv9D,EADnC+kE,EAAe,IAAItJ,EAAuB6H,IAE1C1C,IAAoBd,mBAAqBiF,GACpCJ,EAAe,CAClB,IAAKK,GAAWxI,EAAkB9lB,GAClCouB,EAAS1D,EAAe4D,EAC1B,OACUL,IACVG,EAAS5E,EAASxpB,GAAK4lB,OAEzBqI,EAA4B,eAAZb,EAA2Bf,EAAkCrsB,EAAKmuB,GAAwCI,GAAsBvuB,EAAKmuB,EAA1C,eAAZf,OAAiE5jF,EAAmD6kF,GAA4B,mBAAZjB,EAA+B7G,EAA4B6H,EAAQD,GAAa3G,EAAS4G,EAAQD,GACpU,IAAI54B,EAASi0B,EAAStjC,GAEtB,GADAgkC,IAAoBd,mBAAqBwD,GACpC3F,EAAc1xB,GAAS,CAC1B,IAAIi5B,EAASrH,EAAY5xB,EAAQ+wB,GACjC,GAAwB,cAAlBgH,QAA2D9jF,IAA1BwkF,EAAeS,OAAuB,CAG3E,IAAIC,EAAcV,EAAeS,SACjC,IAAKC,IAAgB,CAAC,SAAU,YAAY3yD,gBAAgB2yD,GAC1D,MAAM,IAAI5K,UAAU,mCAExB,CACA,OAAO0K,CACT,CACIj5B,EAAOqwB,QAAUC,IACnBS,EAAI/wB,EAAOqwB,MAEf,CACF,CA9ES+I,CAAsB3uB,EAAK12C,EAAK09B,KAAMumC,EAAU3H,MAAO0H,EAAeF,EAC/E,CApR0CwB,CAAsBtlE,IAC1D,IAAK,eAEH,OAAO2jE,EAyWf,SAA2B3jE,GACzB,IAAIulE,EACJ,GAAgG,yBAA9D,QAA5BA,EAAavlE,EAAK+J,YAAiC,IAAfw7D,OAAwB,EAASA,EAAW/yE,MAAiC,CAErH,GAAuB,QAAnBwN,EAAK+J,KAAKnX,KAEZ,OADAstE,EAASlgE,EAAK+J,MACPy7D,EAAkBxlE,EAAKU,KAAMV,EAAK0pD,OAAQ1pD,EAAK09B,KAAM,IAG9D,IAAI4lC,EAAS1C,IAAoBd,mBAC7B2F,EAAU,IAAIhK,EAAuB6H,GACrC5F,EAA6B,UAAnB19D,EAAK+J,KAAKnX,KACpB8yE,EAAalJ,EAAkBx8D,EAAK+J,MACxC,IAAK,IAAI47D,KAAMD,EACThI,EACF+H,EAAQtK,uBAAuBwK,GAAI,GAEnCF,EAAQ1K,qBAAqB4K,GAAI,GAGrC/E,IAAoBd,mBAAqB2F,EACzCvF,EAASlgE,EAAK+J,MACd,IAAI67D,EAAmBlI,EAAU,GAAK7+D,MAAM8V,KAAK+wD,GAC7CG,EAAaL,EAAkBxlE,EAAKU,KAAMV,EAAK0pD,OAAQ1pD,EAAK09B,KAAMkoC,GAEtE,OADAhF,IAAoBd,mBAAqBwD,EAClCuC,CACT,CAMA,OAJI7lE,EAAK+J,MAEP+zD,EADcoC,EAASlgE,EAAK+J,OAGvBy7D,EAAkBxlE,EAAKU,KAAMV,EAAK0pD,OAAQ1pD,EAAK09B,KAAM,GAC9D,CA1Y0CooC,CAAkB9lE,IAItD,IAAK,qBAGH,OADA0gE,GAAyB1gE,GAClBk7D,EAkyBf,SAA+C6K,GAC7C,IAAIziE,EAAQs9D,IAAoBd,mBAChC,GAAIiG,EAAmB5hE,GAAI,CACzB,IAAIrhB,EAAOijF,EAAmB5hE,GAAGrhB,KAC7BkjF,EAAU,IAAIvK,EAAuBn4D,GACzC0iE,EAAQ7K,uBAAuBr4E,GAAM,GACrC,IAAImjF,EAAUtF,GAAuBoF,EAAoBC,GAAS,GAElE,OADAA,EAAQ5K,kBAAkBt4E,EAAMmjF,GACzBA,CACT,CAEE,OADetF,GAAuBoF,EAAoBziE,GAAO,EAGrE,CA/yBgC4iE,CAAsClmE,IAChE,IAAK,cAEH,OAAO89D,EAASoC,EAASlgE,EAAKU,QAAyD,QAA9C2/D,EAAsBZ,EAAM0G,oBAAkD,IAAxB9F,GAAkCA,EAAoB5rC,KAAKgrC,EAAOz/D,EAAM,MAAO69D,EAAYqC,EAASlgE,EAAKirC,iBAAa/qD,KAA+D,QAA/CogF,EAAuBb,EAAM0G,oBAAmD,IAAzB7F,GAAmCA,EAAqB7rC,KAAKgrC,EAAOz/D,EAAM,QAASA,EAAKsrC,UAAauyB,EAAYqC,EAASlgE,EAAKsrC,gBAAYprD,GAAag7E,OAAiBh7E,IACvc,IAAK,kBAGD,IAAIkmF,GAKJ,OAJIpmE,EAAKrB,WAEPynE,GAAItI,EADUoC,EAASlgE,EAAKrB,YAGvB,IAAIy9D,EAAiB,SAAUgK,IAE1C,IAAK,iBAEH,MAAMtI,EAASoC,EAASlgE,EAAKrB,WAC/B,IAAK,mBAGD,IAAI+3C,GAAMwpB,EAASlgE,EAAKrB,UAAU29D,MAC9B+J,GAAWj5D,OAAO0wD,EAASpnB,KAC3B4vB,GAA6B,OAAlBtmE,EAAK2xB,SAAoB00C,GAAW,EAAIA,GAAW,EAElE,OADAnI,EAASxnB,GAAK4vB,IACPpL,EAAiBl7D,EAAK9d,OAASokF,GAAWD,IAErD,IAAK,aACH,OAAO3C,GAAsB1jE,EAAKirC,YACpC,IAAK,kBAGD,IACIs7B,GAAczI,EADHoC,EAASlgE,EAAKuzD,eAEzBiT,GAAU5F,IAAoBd,mBAC9B2G,GAAY,IAAIhL,EAAuB+K,IAC3ChD,GAA8BxjE,EAAKwzD,MAAOiT,IAC1C7F,IAAoBd,mBAAqB2G,GACzC,IAAIC,GAwGd,SAA6BlT,EAAOvsD,GAClC,IAAI+1D,EACA2J,EAAmBnT,EAAMoT,WAAUC,IAAeA,EAAWnmE,OAC7DomE,EAAiBH,GAAoB,EACrCI,EAAID,EAAiBtT,EAAMrpD,MAAM,EAAGw8D,GAAoBnT,EACxDwT,GAAQ,EACZ,IAAK,IAAIC,KAAKF,EAIZ,GAHKC,IACHA,EAAQE,EAAqBD,EAAGhgE,IAE9B+/D,EAAO,CACT,IAAIG,EAAMjH,EAAS+G,GAInB,GAHIE,EAAI7K,QAAUC,IAChBS,EAAImK,EAAI7K,OAEO,WAAb6K,EAAI9K,KACN,OAAOwB,EAAYsJ,EAAKnK,EAE5B,CAEF,IAAK8J,EACH,OAAO5L,EAAiB8B,GAE1B,IAAIoK,GAAW,EACXC,EAAI7T,EAAMrpD,MAAMw8D,EAAmB,GACvC,IAAKK,EACH,IAAK,IAAIM,KAAMD,EAIb,GAHKD,IACHA,EAAWF,EAAqBI,EAAIrgE,IAElCmgE,EAAU,CACZ,IAAIG,EAAMrH,EAASoH,GAInB,GAHIC,EAAIjL,QAAUC,IAChBS,EAAIuK,EAAIjL,OAEO,WAAbiL,EAAIlL,KACN,OAAOwB,EAAY0J,EAAKvK,EAE5B,CAGJ,GAAIoK,EACF,OAAOlM,EAAiB8B,GAE1B,IAAI0J,EAAIxG,EAAS1M,EAAMmT,IAIvB,GAHID,EAAEpK,QAAUC,IACdS,EAAI0J,EAAEpK,OAEO,WAAXoK,EAAErK,KACJ,OAAOwB,EAAY6I,EAAG1J,GAIxB,IAAK,IAAIwK,KAAOH,EAAG,CACjB,IAAII,EAAMvH,EAASsH,GAInB,GAHIC,EAAInL,QAAUC,IAChBS,EAAIyK,EAAInL,OAEO,WAAbmL,EAAIpL,KACN,OAAOwB,EAAY4J,EAAKzK,EAE5B,CACA,OAAO9B,EAAiB8B,EAC1B,CAvKkB0K,CAAoB1nE,EAAKwzD,MAAO+S,IAExC,OADA3F,IAAoBd,mBAAqB0G,GAClC7C,EAA2B+C,IAEtC,IAAK,eAGD,IAAIiB,GACJ,IACEA,GAAKzH,EAASlgE,EAAK4zD,MACrB,CAAE,MAAO9/C,GACP,IAAI9T,EAAK6zD,QAKP,MAAM//C,EAJN,IAAI8zD,GACgD,QAAnDA,GAAyBnI,EAAMc,sBAAuD,IAA3BqH,IAA6CA,GAAuBnzC,KAAKgrC,EAAOz/D,EAAK6zD,SACjJ8T,GAkEd,SAA+B3nE,EAAM6nE,GACnC,IAAK7nE,EAAKi0B,MACR,OAAOisC,EAASlgE,EAAK09B,MAEvB,IAAI4lC,EAAS1C,IAAoBd,mBAC7BgI,EAAW,IAAIrM,EAAuB6H,GAC1C,IAAK,IAAIyE,KAAWvL,EAAkBx8D,EAAKi0B,OACzC6zC,EAAS/M,qBAAqBgN,GAAS,GAEzCnH,IAAoBd,mBAAqBgI,EACzC7C,GAAsBjlE,EAAKi0B,MAAO4zC,EAAaC,GAC/C,IAAIT,EAAInH,EAASlgE,EAAK09B,MAEtB,OADAkjC,IAAoBd,mBAAqBwD,EAClC+D,CACT,CAhFmBW,CAAsBhoE,EAAK6zD,QAAS//C,EAI7C,CAAE,QACA,GAAI9T,EAAK+zD,UAAW,CAClB,IAAIkU,GAAI/H,EAASlgE,EAAK+zD,WACP,WAAXkU,GAAE5L,OACJsL,GAAKM,GAET,CACF,CACA,OAAON,GAEX,IAAK,sBAGD,IAAIO,GACJ,IAAK,IAAIC,MAAcnoE,EAAK+hD,aAC1B,GAAKomB,GAAWp+D,KAQT,GAA2B,eAAvBo+D,GAAWhkE,GAAG3R,KAAuB,CAC9C,IACI41E,GAAQhH,EADI+G,GAAWhkE,GAAGrhB,MAI1BulF,GAASvK,EADHoC,EAASiI,GAAWp+D,OAE9Bm+D,GAAyB,QAAdloE,EAAKpN,KAAiBsrE,EAASkK,GAAOC,IAAUpL,EAA4BmL,GAAOC,GAChG,KAAO,CACL,IACIC,GAASxK,EADFoC,EAASiI,GAAWp+D,OAE/Bm+D,GAAWjD,GAAsBkD,GAAWhkE,GAAImkE,GAAsB,QAAdtoE,EAAKpN,UAAiB1S,EAAY0gF,IAAoBd,mBAChH,MAhBIoI,GADgB,QAAdloE,EAAKpN,KACIsoE,EAAiBqB,GAGjBU,EADAmE,EAAe+G,GAAWhkE,GAAGrhB,WACK5C,GAenD,OAAOgoF,GAEX,IAAK,iBAEH,OAAOvE,EAuHf,SAA6B3jE,GAG3B,IAFA,IAAIg9D,IAES,CAEX,IADgBc,EAASoC,EAASlgE,EAAKU,OAErC,OAAOw6D,EAAiB8B,GAE1B,IAAI4G,EAAa1D,EAASlgE,EAAK09B,MAC/B,IAAKigC,EAAciG,GACjB,OAAO/F,EAAY+F,EAAY5G,GAE7B4G,EAAWtH,QAAUC,IACvBS,EAAI4G,EAAWtH,MAEnB,CACF,CAvI0CiM,CAAoBvoE,IAI5D,MAAM,IAAIzQ,YAAY,0BAA0B+lC,OAAOt1B,EAAKxN,KAAM,KACpE,CAGA,SAASouE,IACP,OAAOb,EAAsBA,EAAsB1xE,OAAS,EAC9D,CAGA,SAAS+yE,EAAet+E,EAAM26E,GAI5B,OAHKA,IACHA,EAAMmD,IAAoBd,oBAErBzB,EAAuBZ,EAAK36E,GAAM,EAC3C,CAsBA,SAAS6gF,EAA2BC,GAClC,MAA2B,UAApBA,EAAWvH,KAAmBuH,EAAWtH,QAAUC,EAAQrB,OAAiBh7E,GAAag7E,EAAiB0I,EAAWtH,OAASsH,CACvI,CAsEA,SAASsD,EAAqBD,EAAGhgE,GAE/B,OAAOA,IADc62D,EAASoC,EAAS+G,EAAEvmE,MAE3C,CAoLA,SAAS8kE,EAAkB9kE,EAAM8nE,EAAW5rC,EAAM6rC,GAEhD,IAAIzL,EAEJ,IAHA0L,EAA8BD,KAGjB,CACX,GAAI/nE,IAEco9D,EADFoC,EAASx/D,IAGrB,OAAOw6D,EAAiB8B,GAG5B,IAAI/wB,EAASi0B,EAAStjC,GACtB,IAAK+gC,EAAc1xB,GACjB,OAAO4xB,EAAY5xB,EAAQ+wB,GAEzB/wB,EAAOqwB,QACTU,EAAI/wB,EAAOqwB,OAEboM,EAA8BD,GAC1BD,GAEF1K,EADaoC,EAASsI,GAG1B,CACF,CAGA,SAASE,EAA8BD,GACrC,GAAoC,IAAhCA,EAAqBp6E,OAAzB,CAGA,IAAIs6E,EAAmB/H,IAAoBd,mBACvCnF,EAAQgO,EAAiB/N,SACzBgO,EAAmB,IAAInN,EAAuBd,GAClD,IAAK,IAAIkO,KAAMJ,EAAsB,CACnCG,EAAiB7N,qBAAqB8N,GAAI,GAC1C,IAAIC,EAAYH,EAAiBnN,gBAAgBqN,GAAI,GACrDD,EAAiBxN,kBAAkByN,EAAIC,EACzC,CACAlI,IAAoBd,mBAAqB8I,CATzC,CAUF,CAIA,SAAS7F,EAAkCrwD,EAAS5iB,GAClD,GAAqB,kBAAjB4iB,EAAQlgB,KAKV,OAJA4rE,EAAuBtuE,GACnB4iB,EAAQziB,WAAW5B,OAAS,GAUpC,SAAmD4B,EAAYH,GAC7D,IAAIi5E,EAAgB,IAAI7rE,IACxB,IAAK,IAAIiwB,KAAQl9B,EACf,GAAkB,aAAdk9B,EAAK36B,KAAqB,CAC5B,IAAI4vE,EAAYj1C,EAAK+M,UAA8B,eAAlB/M,EAAKp/B,IAAIyE,KAAwC6vE,GAA6Bl1C,EAAKp/B,KAAlDo/B,EAAKp/B,IAAIjL,KACvEkmF,EAAkC,sBAApB77C,EAAKr9B,MAAM0C,KAA+B26B,EAAKr9B,MAAM8hC,KAAOzE,EAAKr9B,MACnF,GAAyB,eAArBk5E,EAAYx2E,KAAuB,CACrC,IAAIwwE,EAAO5B,EAAe4H,EAAYlmF,MAClCsjF,EAAIpI,EAAKluE,EAAOsyE,GACI,sBAApBj1C,EAAKr9B,MAAM0C,WAAsCtS,IAANkmF,IAG7CA,EAAItI,EADeoC,EAAS/yC,EAAKr9B,MAAMqkC,SAGzC+pC,EAAS8E,EAAMoD,GACf2C,EAAcrlE,IAAI0+D,EACpB,MACE6G,EAAuC97C,EAAKr9B,MAAOA,EAAOsyE,GAC1D2G,EAAcrlE,IAAI0+D,EAEtB,MACE8G,EAAsC/7C,EAAMr9B,EAAOi5E,EAGzD,CAjCMI,CAA0Cz2D,EAAQziB,WAAYH,GAEzDorE,EAAiBqB,GAE1B,IAAImI,EAAiBvG,EAAyBruE,GAC9C,OA6DF,SAAmD8V,EAAU8+D,GAC3D,IAAIQ,EAAShK,EAAiBqB,GAC9B,IAAK,IAAInqC,KAAWxsB,EAClB,GAAKwsB,EAAL,CAKA,IAAIg3C,EAAoC,gBAAjBh3C,EAAQ5/B,KAAyB4/B,EAAQzzB,SAA4B,sBAAjByzB,EAAQ5/B,KAA+B4/B,EAAQR,KAAOQ,EAC7Hi3C,EAA4C,iBAA1BD,EAAiB52E,MAAqD,kBAA1B42E,EAAiB52E,KAC/EwwE,OAAO,EACNqG,IACHrG,EAAO9C,EAASkJ,GAAkB9M,OAEpC,IAAI8J,OAAI,EACR,GAAqB,gBAAjBh0C,EAAQ5/B,KAAwB,CAClC,IAAI,KACFoyE,EACA90E,MAAO+0E,GACLH,EAAezgE,OACfqlE,EAAU1E,OAAO1kF,EAAY2kF,EAI/BuB,EAHmB,sBAAjBh0C,EAAQ5/B,WAA4CtS,IAAZopF,EAGtCxL,EADeoC,EAAS9tC,EAAQ+B,QAGhCm1C,CAER,KAAO,CAELlD,EAAI,GAGJ,IAFA,IAAI75D,EAAI,IAEK,CACX,IACEq4D,KAAM2E,EACNz5E,MAAO05E,GACL9E,EAAezgE,OACnB,GAAIslE,EACF,MAEFnD,EAAE75D,GAAKi9D,EACPj9D,GACF,CACF,CAEE24D,EADEmE,EACOtG,EAAkCqG,EAAkBhD,GAEpDlI,EAAS8E,EAAMoD,EAzC1B,MAHE1B,EAAezgE,OACfihE,EAAShK,EAAiBqB,GA8C9B,OAAO2I,CACT,CAjHSuE,CAA0C/2D,EAAQ9M,SAAU8+D,EACrE,CA8BA,SAASuE,EAAuCjpE,EAAMlQ,EAAOkmC,GAC3D,IAEIgtC,EAFAoG,EAAiC,sBAAdppE,EAAKxN,KAA+BwN,EAAK4xB,KAAO5xB,EACnEqpE,EAA4C,iBAA1BD,EAAiB52E,MAAqD,kBAA1B42E,EAAiB52E,KAE9E62E,IACHrG,EAAO9C,EAASkJ,GAAkB9M,OAEpC,IACIoN,EADAtD,EAAIpI,EAAKluE,EAAOkmC,GASpB,OAJE0zC,EAHgB,sBAAd1pE,EAAKxN,WAAsCtS,IAANkmF,EAG5BtI,EADQoC,EAASlgE,EAAKm0B,QAGtBiyC,EAETiD,EACKtG,EAAkCqG,EAAkBM,GAEtDxL,EAAS8E,EAAM0G,EACxB,CAGA,SAASR,EAAsCS,EAAc75E,EAAOi5E,GAGlE,OAAO7K,EAFIgC,EAASyJ,EAAahrE,UAAU29D,MAC7Ba,EAAmB,CAAC,EAAGrtE,EAAOi5E,GAE9C,CA0EA,SAASvF,GAA8B1yE,EAAM2sE,GAC3C,IAAI1b,EAAe8a,EAA0B/rE,EAAM,CACjDiR,KAAK,EACLs7B,UAAU,IAEZ,IAAK,IAAII,KAAKskB,EAAc,CAC1B,IAAI6nB,EAAmC,wBAAXnsC,EAAEjrC,MAA6C,UAAXirC,EAAE7qC,KAClE,IAAK,IAAI+yE,KAAMnJ,EAAkB/+B,GAC3BmsC,EACFnM,EAAItC,uBAAuBwK,GAAI,GAE/BlI,EAAI1C,qBAAqB4K,GAAI,GAGjC,GAAe,wBAAXloC,EAAEjrC,KAAgC,CACpC,IAAKq3E,GAAOrN,EAAkB/+B,GAC1BqsC,EAAMC,GAA0BtsC,EAAGggC,GACvCA,EAAIrC,kBAAkByO,EAAKC,EAC7B,CACF,CACF,CAIA,SAAS3I,GAAaF,EAAMD,EAAK18D,EAAM66B,GACrC,IAAI4hC,EACAC,aAAehF,GACbe,EAAoBiE,KACtBD,EAAYC,EAAI/E,MAGpB,IAAI4F,EAAUC,GAAuBx9D,GACrC,GAAoB,mBAAT28D,EAAqB,CAC9B,IAAIH,EAAWzB,EAAWt/B,UAAUZ,EAAOpwC,MAAOowC,EAAOnwC,KACzD,MAAM,IAAIwrE,UAAU,GAAGllC,OAAOwrC,EAAU,sBAC1C,CACA,IAAI70B,EAASg1B,EAAKrH,MAAMmH,EAAWc,GAEnC,OADA9C,EAAS9yB,GACFivB,EAAiBjvB,EAC1B,CAmBA,SAAS61B,GAAuBx9D,GAC9B,IAAIk8D,EAAQ,GACZ,GAAI3hE,MAAMC,QAAQwF,GAChB,IAAK,IAAIutB,KAAOvtB,EACd,GAAiB,kBAAbutB,EAAIr/B,KAA0B,CAChC,IAAIiuE,EAAe3C,EAASoC,EAASruC,EAAIlzB,WACzC6hE,EAAM18E,QAAQ28E,EAChB,MACED,EAAM18E,KAAKg6E,EAASoC,EAASruC,UAKjC,IAAK,IAAIW,KADTguC,EAAM18E,KAz6BV,SAA2BkmF,GACzB,IAAIC,EAAOhK,EAAYtwE,IAAIq6E,GAC3B,GAAIC,EACF,OAAOA,EAET,IAAIC,EAASF,EAAgBvc,OAAOt9D,KAAIm6D,GAASA,EAAMx6D,MAAM4sC,MACzD76C,EAAWmoF,EAAgBvc,OAAOt9D,KAAIm6D,GAASA,EAAMx6D,MAAMw9D,SAU/D,OATAn/D,OAAOg8E,OAAOD,GACd/7E,OAAOsC,eAAe5O,EAAU,MAAO,CACrCiO,MAAOo6E,EACP7Q,UAAU,EACV/oE,YAAY,EACZI,cAAc,IAEhBvC,OAAOg8E,OAAOtoF,GACdo+E,EAAYh9E,IAAI+mF,EAAiBnoF,GAC1BA,CACT,CAw5BeuoF,CAAkB9lE,IACZA,EAAK61B,aACpBqmC,EAAM18E,KAAKg6E,EAASoC,EAAS1tC,KAGjC,OAAOguC,CACT,CAyCA,SAASkD,GAAsB2G,GAC7B,IAAIp+B,EAASivB,EAAiBqB,GAC9B,IAAK,IAAI3/B,KAAQytC,EAAY,CAC3B,IAAIC,EAAIpK,EAAStjC,GACjB,GAAe,WAAX0tC,EAAEjO,KACJ,OAAOiO,EAETr+B,EAAS4xB,EAAY5xB,EAAQq+B,EAAEhO,MACjC,CACA,OAAOrwB,CACT,CA8FA,SAAS89B,GAA0B9I,EAAM39D,GACvC,OAAOq9D,GAAuBM,EAAM39D,GAAO,EAC7C,CA0BA,SAASq9D,GAAuB4J,EAAYjnE,EAAOu6B,GACjD,IAAIoqC,EAAI,WAEN,OA7KJ,SAAsBhC,EAAS3hE,GAC7B,IAAIkmE,EACuC,QAA1CA,EAAoB/K,EAAMgL,kBAA8C,IAAtBD,GAAwCA,EAAkB/1C,KAAKgrC,EAAOwG,EAAQtK,IAWnI,SAAgCsM,GAC9B,IAAIyC,EAAgB,IAAIjQ,EACxBiQ,EAAc/L,SAAWsJ,EACzB,IAAI0C,EAAW,IAAIjP,EAAoBuM,EAAEnM,IACzC4O,EAAc7K,oBAAsB8K,EACpCD,EAAc5K,mBAAqB6K,EACnC5K,EAAsBj8E,KAAK4mF,EAE7B,CAlBEE,CAAuB3E,GACvB,IAAIh6B,EAoBN,SAAkCg8B,EAAG3jE,GACnC,OAIF,SAA8Bo5B,EAAMuqC,EAAG3jE,GAErC,OAoBF,SAA0C28D,EAAM38D,GAgB9C,IAfA,IAAIomE,EAAgB9J,IAChB9vE,EAAOmwE,EAAKpF,GACZgP,EAAU5J,EAAKvvE,GACfo5E,EAAiBtO,EAAkBqO,GACnCE,EAA0BnO,EAAmBiO,GAC7CG,EAAkBnO,EAA0B/rE,EAAM,CACpDiR,KAAK,EACLs7B,UAAU,IAER4tC,EAAWzO,EAAkBwO,GAI7BE,EAAgB,GAChBC,EAAwB,GACnBn9E,EAAIg9E,EAAgB38E,OAAS,EAAGL,GAAK,EAAGA,IAAK,CACpD,IAAIyvC,EAAIutC,EAAgBh9E,GACxB,GAAe,wBAAXyvC,EAAEjrC,KAAgC,CACpCkuE,GAAyBjjC,GACzB,IAAK2tC,GAAQ5O,EAAkB/+B,GAC1BytC,EAAcz4D,SAAS24D,KAC1BF,EAAc1lE,QAAQ4lE,GACtBD,EAAsB3lE,QAAQi4B,GAElC,MAAO,GAAI8hC,SAAsCA,EAAM8L,MACrD,MAAM,IAAI97E,YAAY,mEAE1B,CACA,IAOI+7E,EAPA7N,EAAMiN,EAAc5K,mBACxB,IAAK,IAAIyL,KAAaT,EAEpBrN,EAAI1C,qBAAqBwQ,GAAW,GAKtC,GAFAC,GAA8BX,EADT1M,EAAyB75D,GACSm5D,GAElDsN,EAkBH,IAAK,IAAIU,KAHTH,EAAS,IAAI7P,EAAuBgC,GACpCiN,EAAc7K,oBAAsByL,EAErBL,GAAU,CACvBK,EAAOvQ,qBAAqB0Q,GAAI,GAChC,IAAIC,OAAe,EACfZ,EAAer4D,SAASg5D,KAAQP,EAAcz4D,SAASg5D,KACzDC,EAAejO,EAAIjC,gBAAgBiQ,GAAI,IAEzCH,EAAOlQ,kBAAkBqQ,EAAIC,EAG/B,KA3B4B,CAI5B,IAAK,IAAIn/D,KAAK0+D,EACPH,EAAer4D,SAASlG,KAC3BkxD,EAAI1C,qBAAqBxuD,GAAG,GAC5BkxD,EAAIrC,kBAAkB7uD,OAAGrsB,IAG7BorF,EAAS7N,CACX,CAmBA,IAAIkO,EAASL,EACbZ,EAAc5K,mBAAqB6L,EACnC,IAAIC,EAAkB/O,EAA0B/rE,EAAM,CACpDiR,KAAK,EACLs7B,UAAU,IAEZ,IAAK,IAAIwuC,KAAMD,EACb,IAAK,IAAIjG,KAAMnJ,EAAkBqP,GAEf,UAAZA,EAAGj5E,KACL+4E,EAAOxQ,uBAAuBwK,GAAI,GAElCgG,EAAO5Q,qBAAqB4K,GAAI,GAItC,IAAK,IAAI9mB,KAAKssB,EAAuB,CACnC,IAAKW,GAAQtP,EAAkB3d,GAC3BktB,EAAOhC,GAA0BlrB,EAAG8sB,GACxCL,EAAOhQ,kBAAkBwQ,EAAMC,GAAM,EACvC,CACF,CA7GEC,CAAiC/D,EAAG3jE,GAChCzF,MAAMC,QAAQ4+B,GACTgmC,GAAsBhmC,GAExB,IAAI0+B,EAAiB,SAAU0B,EAASoC,EAASxiC,IAC1D,CAVSuuC,CAAqBhE,EAAEpM,GAAiBoM,EAAG3jE,EACpD,CAtBe4nE,CAAyBjG,EAAS3hE,GAE/C,GADAy7D,EAAsBvxE,MACF,WAAhBy9C,EAAOowB,KACT,OAAOpwB,EAAOqwB,KAGlB,CAmKW6P,CAAalE,EAAG9gE,UACzB,EAkBA,OAjBAhZ,OAAO4rE,iBAAiBkO,EAAG,CACzB,CAACtM,GAAa,CACZ7rE,MAAOy6E,GAET,CAAC74E,GAAmB,CAClB5B,MAAOy6E,EAAWnjE,QAEpB,CAACy0D,GAAiB,CAChB/rE,MAAgC,mBAAzBy6E,EAAW7sC,KAAKlrC,KAA4B+3E,EAAW7sC,KAAKA,KAAO6sC,EAAW7sC,MAEvF,CAACo+B,GAAc,CACbhsE,MAAOwT,GAET,CAACy4D,GAAgB,CACfjsE,MAAO+tC,KAGJoqC,CACT,CAIA,SAAShD,GAAsBjlE,EAAMlQ,EAAOs8E,GAC1C,OAAQpsE,EAAKxN,MACX,IAAK,aACH,OAwKN,SAA6B1P,EAAMgN,EAAOs8E,GAGxC,OADAA,EAAYhR,kBAAkBt4E,EAAMgN,GAC7BorE,EAAiBqB,EAC1B,CA5Ka8P,CAAoBrsE,EAAKld,KAAMgN,EAAOs8E,GAC/C,IAAK,gBAEH,OADAhO,EAAuBtuE,GAW7B,SAAuCG,EAAYH,EAAOs8E,GACxD,IAAIrD,EAAgB,IAAI7rE,IACxB,IAAK,IAAIiwB,KAAQl9B,EAAY,CAC3B,GAAkB,gBAAdk9B,EAAK36B,KACP,OAAO85E,GAA0Bn/C,EAAMr9B,EAAOs8E,EAAarD,GAE7D,GAAK57C,EAAK+M,UAA8B,eAAlB/M,EAAKp/B,IAAIyE,KAGxB,CACL,IAAIyrE,EAAIoE,GAA6Bl1C,EAAKp/B,KAC1Cw+E,GAA2Bp/C,EAAKr9B,MAAOA,EAAOs8E,EAAanO,GAC3D8K,EAAcrlE,IAAIu6D,EACpB,MANEsO,GAA2Bp/C,EAAKr9B,MAAOA,EAAOs8E,EAAaj/C,EAAKp/B,IAAIjL,MACpEimF,EAAcrlE,IAAIypB,EAAKp/B,IAAIjL,KAM/B,CACA,OAAOo4E,EAAiBqB,EAC1B,CA1BaiQ,CAA8BxsE,EAAK/P,WAAYH,EAAOs8E,GAC/D,IAAK,eAED,IAAI1H,EAAiBvG,EAAyBruE,GAC9C,OAAO07E,GAA8BxrE,EAAK4F,SAAU8+D,EAAgB0H,GAG5E,CAsBA,SAAS/J,GAA6BriE,GAEpC,OAAO+9D,EADQD,EAASoC,EAASlgE,IAEnC,CAGA,SAASssE,GAA0B3C,EAAc75E,EAAOs8E,EAAarD,GACnE,IAAIryB,EAAM0qB,EAAeuI,EAAahrE,SAAS7b,KAAMspF,GACjDK,EAAUtP,EAAmB,CAAC,EAAGrtE,EAAOi5E,GAC5C,OAAKqD,EAGEnP,EAA4BvmB,EAAK+1B,GAF/BvO,EAASxnB,EAAK+1B,EAGzB,CAGA,SAASjB,GAA8B5lE,EAAU8+D,EAAgB0H,GAC/D,GAAwB,IAApBxmE,EAASvX,OACX,OAAO6sE,EAAiBqB,GAE1B,IAAItwB,EACJ,IAAK,IAAIygC,KAAS9mE,EAChB,GAAK8mE,EAIE,GAAmB,gBAAfA,EAAMl6E,KAEf,GAA4B,eAAxBk6E,EAAM/tE,SAASnM,KAKjB,IAJA,IAAIkkD,EAAM0qB,EAAesL,EAAM/tE,SAAS7b,KAAMspF,GAC1CrF,EAAI,GACJx6D,EAAI,IAEK,CACX,IAAI,KACFq4D,EACA90E,MAAO68E,GACLjI,EAAezgE,OACnB,GAAI2gE,EAAM,CACR34B,EAASmgC,EAAcnP,EAA4BvmB,EAAKqwB,GAAK7I,EAASxnB,EAAKqwB,GAC3E,KACF,CACAA,EAAEx6D,GAAKogE,EACPpgE,GACF,MAKA,IAHA,IAAIqgE,EAAK,GACLC,EAAM,IAEG,CACX,IACEjI,KAAMkI,EACNh9E,MAAOi9E,GACLrI,EAAezgE,OACnB,GAAI6oE,EAAQ,CACV7gC,EAASg5B,GAAsByH,EAAM/tE,SAAUiuE,EAAIR,GACnD,KACF,CACAQ,EAAGC,GAAOE,EACVF,GACF,KAEG,CAEL,IAAIG,EAAgC,sBAAfN,EAAMl6E,KAA+Bk6E,EAAM96C,KAAO86C,EACvE,OAAQM,EAAex6E,MACrB,IAAK,gBACL,IAAK,eAED,IAAI4zE,OAAI,GAENxB,KAAMqI,EACNn9E,MAAOo9E,GACLxI,EAAezgE,OACdgpE,IACH7G,EAAI8G,GAEa,sBAAfR,EAAMl6E,WAAsCtS,IAANkmF,IAExCA,EAAItI,EADeoC,EAASwM,EAAMv4C,SAGpC8X,EAASg5B,GAAsB+H,EAAgB5G,EAAGgG,GAClD,MAEJ,IAAK,aAED,IACIe,EAAQ/L,EADI4L,EAAelqF,KACOspF,GAClCgB,OAAK,GAEPxI,KAAMyI,EACNv9E,MAAOw9E,GACL5I,EAAezgE,OACdopE,IACHD,EAAKE,GAEY,sBAAfZ,EAAMl6E,WAAuCtS,IAAPktF,IAGxCA,EAAKtP,EADeoC,EAASwM,EAAMv4C,SAGrC8X,EAASmgC,EAAcnP,EAA4BkQ,EAAOC,GAAMlP,EAASiP,EAAOC,GAIxF,MAjFE1I,EAAezgE,OACfgoC,EAASivB,EAAiBqB,GAkF9B,OAAOtwB,CACT,CAGA,SAASsgC,GAA2BvsE,EAAMlQ,EAAOs8E,EAAap2C,GAE5D,GADiC,eAAdh2B,EAAKxN,MAAuC,sBAAdwN,EAAKxN,MAAmD,eAAnBwN,EAAK4xB,KAAKp/B,KAC9E,CAChB,IACIkkD,EAAM0qB,EADoB,eAAdphE,EAAKxN,KAAwBwN,EAAKld,KAAOkd,EAAK4xB,KAAK9uC,KAC/BspF,GAChCmB,EAAMvP,EAAKluE,EAAOkmC,GAMtB,MALkB,sBAAdh2B,EAAKxN,WAAwCtS,IAARqtF,IAGvCA,EAAMzP,EADaoC,EAASlgE,EAAKm0B,SAG9Bi4C,EAGEnP,EAA4BvmB,EAAK62B,GAF/BrP,EAASxnB,EAAK62B,EAGzB,CACA,IAAInH,EAAIpI,EAAKluE,EAAOkmC,GAKpB,MAJkB,sBAAdh2B,EAAKxN,WAAsCtS,IAANkmF,IAEvCA,EAAItI,EADiBoC,EAASlgE,EAAKm0B,SAG9B8wC,GAAoC,sBAAdjlE,EAAKxN,KAA+BwN,EAAK4xB,KAAO5xB,EAAMomE,EAAGgG,EACxF,CAQA,SAAS1L,GAAyBO,GAChC,GAAIA,EAAK5wB,OAAS4wB,EAAKjT,UACrB,MAAM,IAAIz+D,YAAY,GAAG+lC,OAAO2rC,EAAK5wB,MAAQ,QAAU,YAAa,6BAEtE,GAAIqvB,IAAmBuB,EAAKlwC,WAC1B,MAAM,IAAIxhC,YAAY,sEAE1B,CACA,GAAImwE,EACF,OAAO5B,EAASoC,EAASd,IAEyB,QAAnDE,EAAyBG,EAAMc,sBAAuD,IAA3BjB,GAA6CA,EAAuB7qC,KAAKgrC,EAAOL,GAC5IsB,GAAyBtB,GACzB,IAAKjnD,IAAMqkD,EAAkB4C,GAE7BO,EAAQxE,uBAAuBhjD,IAAI,GACnC,IAAIq1D,GAAKzD,GAA0B3K,EAASO,GAE5C,OADAA,EAAQvE,kBAAkBjjD,GAAIq1D,IACvBA,EACT,C,cCj1CO,MAAMC,EACXrsF,eACE,OAAgBG,KAAM,2BAAuB,IAC7C,OAAgBA,KAAM,0BAAsB,EAC9C,EAIK,MAAMmsF,EACXtsF,YAAYu5E,IACV,OAAgBp5E,KAAM,gBAAY,IAClC,OAAgBA,KAAM,aAAc,IAAI2b,KACxC3b,KAAKq5E,SAAWD,CAClB,CACAE,WAAW/3E,GACT,OAAOvB,KAAKosF,WAAWvsE,IAAIte,EAC7B,CACA8qF,cAAc9qF,GACZvB,KAAKosF,WAAWjqE,IAAI5gB,EACtB,ECVK,SAAS+qF,EAAQzO,GACtB,IAAI,eACFM,EAAc,SACdoO,EAAQ,WACRC,EAAU,MACVtO,EAAQ,CAAC,GACPt4D,UAAU9Y,OAAS,QAAsBnO,IAAjBinB,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACrE6mE,EAAwB,IAAI9wE,IAC5B+wE,EAAuB,GACvBtO,EAAU,IAAI+N,EAAoB,MAClC9N,EAAc,IAAI6N,EAItB,SAAS7M,IACP,OAAOqN,EAAqBA,EAAqB5/E,OAAS,EAC5D,CAMA,SAAS6/E,EAAiBluE,EAAM5R,EAAM+/E,GACpC,IAAK,IAAIpgF,KAAOK,EACd8xE,EAASlgE,EAAKjS,GAAMogF,aAAuC,EAASA,EAAO74C,OAAO,CAChFt1B,OACAjS,QAGN,CACA,SAASmyE,EAASlgE,EAAMmuE,GACtB,GAAItvE,MAAMC,QAAQkB,GAChBA,EAAK0P,SAAQ,CAACnD,EAAG3d,KACfsxE,EAAS3zD,EAAG4hE,EAASA,EAAOhkE,MAAM,GAAI,GAAGmrB,QAAO,QAAc,OAAc,CAAC,EAAG64C,EAAOA,EAAO9/E,OAAS,IAAK,CAAC,EAAG,CAC9GO,WACIu/E,EAAO,SAEV,GAAInuE,EAAM,CACf,IAAIouE,EAAoBC,EAKxB,OAH6C,QAA5CD,EAAqB3O,EAAM6O,mBAAgD,IAAvBF,GAAyCA,EAAmB35C,KAAKgrC,EAAOz/D,EAAMmuE,GAvBvI,SAAenuE,GC5BV,IAAwBnQ,EAAQupB,ED6B/B00D,IC7BuBj+E,ED6BIi+E,EC7BI10D,ED6BMpZ,EAAKxN,KC5BzCrE,OAAOssB,UAAU+Z,eAAeC,KAAK5kC,EAAQupB,KD6BhD00D,EAAS9tE,EAAKxN,MAAMwN,EAExB,CAoBIuuE,CAAMvuE,GAEEA,EAAKxN,MACX,IAAK,aAED,IAAIg8E,EAIN,OA4MgB1rF,EAjNIkd,EAAKld,UAmNxBu7E,EADGuC,IAAoBd,mBACKh9E,KAjN2B,QAArD0rF,EAAwB/O,EAAMgP,yBAAyD,IAA1BD,GAA4CA,EAAsB/5C,KAAKgrC,EAAOz/D,EAAMmuE,GAClJH,EAAsBtqE,IAAI1D,EAAKld,QAGnC,IAAK,kBACL,IAAK,eAEH,YADAorF,EAAiBluE,EAAM,CAAC,YAAamuE,GAEvC,IAAK,0BAKD,YADAhC,EADcxL,EAAuB3gE,EAD3B4gE,IAAoBd,oBAERqO,GAG1B,IAAK,oBACL,IAAK,mBACL,IAAK,oBAEH,YADAD,EAAiBluE,EAAM,CAAC,OAAQ,SAAUmuE,GAE5C,IAAK,iBACL,IAAK,gBAEH,YADAD,EAAiBluE,EAAM,CAAC,SAAU,aAAcmuE,GAElD,IAAK,kBAEH,YADAD,EAAiBluE,EAAM,CAAC,cAAemuE,GAEzC,IAAK,wBAEH,YADAD,EAAiBluE,EAAM,CAAC,OAAQ,aAAc,aAAcmuE,GAE9D,IAAK,mBAKH,OAJAD,EAAiBluE,EAAM,CAAC,UAAWmuE,QAC/BnuE,EAAKk6B,UACPg0C,EAAiBluE,EAAM,CAAC,YAAamuE,IAGzC,IAAK,mBACL,IAAK,gBAEH,YADAD,EAAiBluE,EAAM,CAAC,cAAemuE,GAEzC,IAAK,WAKH,OAJInuE,EAAKk6B,UACPg0C,EAAiBluE,EAAM,CAAC,OAAQmuE,QAElCD,EAAiBluE,EAAM,CAAC,SAAUmuE,GAEpC,IAAK,cACL,IAAK,gBACL,IAAK,kBAEH,YADAD,EAAiBluE,EAAM,CAAC,YAAamuE,GAEvC,IAAK,qBACL,IAAK,kBAEH,YADAD,EAAiBluE,EAAM,CAAC,eAAgBmuE,GAE1C,IAAK,2BAEH,YADAD,EAAiBluE,EAAM,CAAC,MAAO,SAAUmuE,GAE3C,IAAK,UACH,OAEJ,IAAKzO,EAEH,OAAQ1/D,EAAKxN,MACX,IAAK,uBAEH,YADA07E,EAAiBluE,EAAM,CAAC,QAAS,QAASmuE,GAE5C,IAAK,iBAED,IAAKnuE,EAAK09B,KAAKrvC,OACb,OAEF,IAAI61E,EAAiBtD,IACjB0C,EAASY,EAAepE,mBACxByD,EAAW,IAAImK,EAAoBpK,GAKvC,OAJAE,EAA8BxjE,EAAK09B,KAAM6lC,GACzCW,EAAepE,mBAAqByD,EACpC2K,EAAiBluE,EAAM,CAAC,QAASmuE,QACjCjK,EAAepE,mBAAqBwD,GAGxC,IAAK,iBACL,IAAK,oBACL,IAAK,iBACH,OACF,IAAK,cAED,IAAIoL,EAAkB9N,IAClB4F,EAAUkI,EAAgB5O,mBAC1BgI,EAAW,IAAI4F,EAAoBlH,GAKvC,OAJAmI,EAAwB3uE,EAAKi0B,MAAO6zC,GACpC4G,EAAgB5O,mBAAqBgI,EACrCoG,EAAiBluE,EAAM,CAAC,QAAS,QAASmuE,QAC1CO,EAAgB5O,mBAAqB0G,GAGzC,IAAK,mBAEH,YADA0H,EAAiBluE,EAAM,CAAC,OAAQ,QAASmuE,GAE3C,IAAK,sBACL,IAAK,iBAEH,YADAD,EAAiBluE,EAAM,CAAC,cAAemuE,GAEzC,IAAK,iBACL,IAAK,iBAGD,IAAIS,EAAoC,wBAAnB5uE,EAAK4xB,KAAKp/B,MAAqD,QAAnBwN,EAAK4xB,KAAKh/B,KACvEi8E,EAAmBjO,IACnBkO,EAAWD,EAAiB/O,mBAChC,GAAI8O,EAAgB,CAClB,IAAIzK,EAAS,IAAIuJ,EAAoBoB,GACrCH,EAAwB3uE,EAAK4xB,KAAMuyC,GACnC0K,EAAiB/O,mBAAqBqE,CACxC,CAKA,GAJA+J,EAAiBluE,EAAM,CAAC,SAAUmuE,GAClCU,EAAiB/O,mBAAqBgP,EAGlCF,EAAgB,CAClB,IAAI7J,EAAe,IAAI2I,EAAoBoB,GAC3CH,EAAwB3uE,EAAK4xB,KAAMmzC,GACnC8J,EAAiB/O,mBAAqBiF,CACxC,CAGA,OAFAmJ,EAAiBluE,EAAM,CAAC,OAAQ,QAASmuE,QACzCU,EAAiB/O,mBAAqBgP,GAG1C,IAAK,eAED,IAAIvJ,EACAwJ,EAA8G,yBAA9D,QAA5BxJ,EAAavlE,EAAK+J,YAAiC,IAAfw7D,OAAwB,EAASA,EAAW/yE,OAAsD,QAAnBwN,EAAK+J,KAAKnX,KACjJo8E,EAAmBpO,IACnBqO,EAAWD,EAAiBlP,mBAChC,GAAIiP,EAAiB,CACnB,IAAItJ,EAAU,IAAIiI,EAAoBuB,GACtCN,EAAwB3uE,EAAK+J,KAAM07D,GACnCuJ,EAAiBlP,mBAAqB2F,CACxC,CAGA,OAFAyI,EAAiBluE,EAAM,CAAC,OAAQ,OAAQ,OAAQ,UAAWmuE,QAC3Da,EAAiBlP,mBAAqBmP,GAG1C,IAAK,sBAED,IAAK92D,GAAMqkD,EAAkBx8D,GACzBkvE,EAAOtO,IAAoBd,mBAC3B0N,EAAK7M,EAAuB3gE,EAAMkvE,GAGtC,OAFAA,EAAKtB,cAAcz1D,QACnBg0D,EAAaqB,EAAIW,GAGrB,IAAK,qBAID,YADAhC,EA+HZ,SAA+CpG,GAC7C,IAAIziE,EAAQs9D,IAAoBd,mBAChC,IAAKiG,EAAmB5hE,GACtB,OAAOw8D,EAAuBoF,EAAoBziE,GAEpD,IAAIxgB,EAAOijF,EAAmB5hE,GAAGrhB,KAC7BkjF,EAAU,IAAI0H,EAAoBpqE,GAEtC,OADA0iE,EAAQ4H,cAAc9qF,GACf69E,EAAuBoF,EAAoBC,EACpD,CAzI2BE,CAAsClmE,GAC9BmuE,GAG3B,IAAK,cAEH,YADAD,EAAiBluE,EAAM,CAAC,OAAQ,aAAc,aAAcmuE,GAE9D,IAAK,kBACL,IAAK,iBACL,IAAK,mBAEH,YADAD,EAAiBluE,EAAM,CAAC,YAAamuE,GAEvC,IAAK,aAEH,YADAD,EAAiBluE,EAAM,CAAC,OAAQ,cAAemuE,GAEjD,IAAK,kBAEDD,EAAiBluE,EAAM,CAAC,gBAAiBmuE,GACzC,IAAIgB,EAAmBvO,IACnBwO,EAAWD,EAAiBrP,mBAC5B2G,EAAY,IAAIiH,EAAoB0B,GAKxC,OAJA5L,EAA8BxjE,EAAKwzD,MAAOiT,GAC1C0I,EAAiBrP,mBAAqB2G,EACtCyH,EAAiBluE,EAAM,CAAC,SAAUmuE,QAClCgB,EAAiBrP,mBAAqBsP,GAG1C,IAAK,eAEH,YADAlB,EAAiBluE,EAAM,CAAC,QAAS,UAAW,aAAcmuE,GAE5D,IAAK,sBAEH,YADAD,EAAiBluE,EAAM,CAAC,gBAAiBmuE,GAE3C,IAAK,qBAEH,YADAD,EAAiBluE,EAAM,CAAC,KAAM,QAASmuE,GAEzC,IAAK,iBAEH,YADAD,EAAiBluE,EAAM,CAAC,OAAQ,QAASmuE,IAIqB,QAAtDE,EAAwB5O,EAAM4P,0BAA0D,IAA1BhB,OAAmC,EAASA,EAAsB55C,KAAKgrC,EAAOz/D,EAAMmuE,KAG9JmB,QAAQC,KAAK,0BAA0Bj6C,OAAOt1B,EAAKxN,KAAM,KAE7D,CAOF,IAAwB1P,CANxB,CACA,SAAS6rF,EAAwB5sB,EAAc0b,GAC7C,IAAK,IAAI36E,KAAQ05E,EAAkBza,GACjC0b,EAAImQ,cAAc9qF,EAEtB,CAKA,SAASu7E,EAAuBZ,EAAK36E,GACnC,QAAS26E,IAAQA,EAAI5C,WAAW/3E,IAASu7E,EAAuBZ,EAAI7C,SAAU93E,GAChF,CACA,SAAS0gF,EAA8B1yE,EAAM2sE,GAK3CkR,EAJmB9R,EAA0B/rE,EAAM,CACjDiR,KAAK,EACLs7B,UAAU,IAE0BogC,EACxC,CACA,SAAS0O,EAAalG,EAASkI,GAY/B,IAA6BlG,EACvByC,EACAC,EAFuB1C,EAXPhC,EAYhByE,EAAgB,IAAI+C,EACpB9C,EAAW,IAAI+C,EAAoBzF,EAAEnM,aACzC4O,EAAc7K,oBAAsB8K,EACpCD,EAAc5K,mBAAqB6K,EACnCsD,EAAqBnqF,KAAK4mF,GAE5B,SAA0CzJ,EAAMkN,GAC9C,IAeI7C,EAfAZ,EAAgB9J,IAChB9vE,EAAOmwE,EAAKpF,eACZgP,EAAU5J,EAAKvvE,iBACfq5E,EAA0BnO,EAAmBiO,GAK7CI,EAAWzO,EAJOK,EAA0B/rE,EAAM,CACpDiR,KAAK,EACLs7B,UAAU,KAGRogC,EAAMiN,EAAc5K,mBAOxB,GANA6O,EAAwB9D,EAASpN,GACjCyC,EAAS2K,EAASsD,aAAuC,EAASA,EAAO74C,OAAO,CAC9Et1B,KAAMihE,EAAKtC,SACX5wE,IAAK,YAGFg9E,EAaH,IAAK,IAAIU,KAFTH,EAAS,IAAIoC,EAAoBjQ,GACjCiN,EAAc7K,oBAAsByL,EACrBL,GACbK,EAAOsC,cAAcnC,OAdK,CAG5B,IAAK,IAAIl/D,KAAK0+D,EACZxN,EAAImQ,cAAcrhE,GAEpB++D,EAAS7N,CACX,CAUA,IAAIkO,EAASL,EACbZ,EAAc5K,mBAAqB6L,EAKnCgD,EAJsB9R,EAA0B/rE,EAAM,CACpDiR,KAAK,EACLs7B,UAAU,IAE6BsuC,EAC3C,CA1DEK,CAAiC/F,EAASkI,GAC1CjO,EAAS+F,EAAQpK,eAAgBsS,aAAuC,EAASA,EAAO74C,OAAO,CAC7Ft1B,KAAMimE,EAAQtH,SACd5wE,IAAK,SACJunC,OAAsC,mBAA/B2wC,EAAQtH,SAASjhC,KAAKlrC,KAA4B,CAC1DwN,KAAMimE,EAAQtH,SAASjhC,KACvB3vC,IAAK,QACH,KACJkgF,EAAqBz/E,KACvB,CA4DA,SAASmyE,EAAuBM,EAAM39D,GACpC,MAAO,CACLq7D,SAAUsC,EACVvvE,iBAAkBuvE,EAAK75D,OACvBy0D,eAAmC,mBAAnBoF,EAAKvjC,KAAKlrC,KAA4ByuE,EAAKvjC,KAAKA,KAAOujC,EAAKvjC,KAC5Eo+B,YAAax4D,EAEjB,CAEA,OAjVAs8D,EAAYC,oBAAsBF,EAClCC,EAAYE,mBAAqBH,EACjCsO,EAAqBnqF,KAAK87E,GA8U1BM,EAASd,EAAS2O,EAAa,QAAK7tF,GAC7B8tF,CACT,C,wBEvWIvgE,EAAY,CAAC,cAGV,SAAS+hE,EAAgB3hF,GAC9B,IAAIsQ,EAAOgJ,UAAU9Y,OAAS,QAAsBnO,IAAjBinB,UAAU,GAAmBA,UAAU,GAAK,CAAC,GAC9E,WACE2sC,GACE31C,EACJsxE,GAAc,OAAyBtxE,EAAMsP,GAC3CwzD,ECDC,SAAuBpzE,GAC5B,IAAI,WACFimD,GACE3sC,UAAU9Y,OAAS,QAAsBnO,IAAjBinB,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAMrEu2B,GALO,QAAM7vC,EAAQ,CACvBlN,QAAS,CAAC,SAAUmzD,GAAc,cAAc1jD,OAAOs/E,SACvD9uF,YAAY,EACZK,eAAe,IAEDswD,QAAQ7T,KACpBiyC,EAAU77B,EAAa,GAAKpW,EAChC,GAAIoW,EACF,IAAK,IAAI9zC,KAAQ09B,EACf,GAAI19B,EAAKxN,KAAKo0D,WAAW,OACvB,GAAI,qBAAqBlmD,KAAKV,EAAKxN,MACjC,MAAM,IAAIjD,YAAY,kCAAkC+lC,OAAOt1B,EAAKxN,YAGtEm9E,EAAQ7rF,KAAKkc,GAInB,GAAuB,IAAnB2vE,EAAQthF,OACV,MAAM,IAAIkB,YAAY,kCAExB,GAAIogF,EAAQthF,OAAS,GAAyB,wBAApBshF,EAAQ,GAAGn9E,KACnC,MAAM,IAAIjD,YAAY,oEAAoE+lC,OAAOq6C,EAAQx/E,KAAI6P,GAAQ,IAAKs1B,OAAOt1B,EAAKxN,KAAM,OAAOgG,KAAK,QAE1J,OAAOm3E,EAAQ,EACjB,CD5BaC,CAAc/hF,EAAQ,CAC/BimD,eAGF,MAAO,CACL+7B,SAAU5O,EACV+M,sBAH0BH,EAAQ5M,EAAMwO,GAK5C,CEdO,SAASK,EAAYpzC,EAAK35C,GAC/B,IAAIgtF,EAAQ,GACRliF,EAAS6uC,EAAI9pB,QAAQ,wBAAwBo9D,IAC/CD,EAAMjsF,KAAKksF,GACJ,MAELj/C,EDTC,SAAiCljC,GACtC,OAAO,QAAgBA,EAAQ,CAC7BlN,QAAS,CAAC,SAAU,CAAC,mBAAoB,CACvC0wB,SAAU,aAEZpwB,eAAe,GAEnB,CCEmBgvF,CAAwBpiF,GAIzC,MAAO,CACLkjC,aACAi9C,sBAL0BH,EAAQ98C,GAAY,QAAc,OAAc,CAAC,EAAGhuC,GAAU,CAAC,EAAG,CAC5F28E,gBAAgB,KAKhB7xE,SACA3L,OAAQ6tF,EAAM,GACdG,OAAQH,EAAM,GAElB,CACO,SAASI,EAAYzzC,GAC1B,MAAO,aAAah8B,KAAKg8B,IAAQ,WAAWh8B,KAAKg8B,EACnD,CACO,SAAS0zC,EAAgC1zC,GAC9C,MAAO,YAAYh8B,KAAKg8B,EAC1B,C","sources":["webpack:///../../node_modules/@babel/parser/lib/index.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///../../node_modules/@next-core/cook/dist/esm/ExecutionContext.js","webpack:///../../node_modules/@next-core/cook/dist/esm/traverse.js","webpack:///../../node_modules/@next-core/cook/dist/esm/context-free.js","webpack:///../../node_modules/@next-core/cook/dist/esm/sanitize.js","webpack:///../../node_modules/@next-core/cook/dist/esm/cook.js","webpack:///../../node_modules/@next-core/cook/dist/esm/AnalysisContext.js","webpack:///../../node_modules/@next-core/cook/dist/esm/precook.js","webpack:///../../node_modules/@next-core/cook/dist/esm/hasOwnProperty.js","webpack:///../../node_modules/@next-core/cook/dist/esm/precookFunction.js","webpack:///../../node_modules/@next-core/cook/dist/esm/parse.js","webpack:///../../node_modules/@next-core/cook/dist/esm/preevaluate.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowNewTargetOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true,\n  annexB: true\n};\nfunction getOptions(opts) {\n  if (opts && opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n  const options = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n}\nconst keywords$1 = new Map();\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  doubleCaret: createToken(\"^^\", {\n    startsExpr\n  }),\n  doubleAt: createToken(\"@@\", {\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _using: createKeywordLike(\"using\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _satisfies: createKeywordLike(\"satisfies\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 93 && token <= 130;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 92;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 58 && token <= 130;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 58 && token <= 134;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 127 && token <= 129;\n}\nfunction tokenIsLoop(token) {\n  return token >= 90 && token <= 92;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 58 && token <= 92;\n}\nfunction tokenIsOperator(token) {\n  return token >= 39 && token <= 59;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 119 && token <= 121;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 122 && token <= 128;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 57;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n  tokenTypes[140].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nclass Position {\n  constructor(line, col, index) {\n    this.line = void 0;\n    this.column = void 0;\n    this.index = void 0;\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column,\n    index\n  } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\nvar ParseErrorCode = {\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n};\nconst reflect = (keys, last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n  set(value) {\n    keys.reduce((item, key, i) => i === last ? item[key] = value : item[key], this);\n  }\n});\nconst instantiate = (constructor, properties, descriptors) => Object.keys(descriptors).map(key => [key, descriptors[key]]).filter(([, descriptor]) => !!descriptor).map(([key, descriptor]) => [key, typeof descriptor === \"function\" ? {\n  value: descriptor,\n  enumerable: false\n} : typeof descriptor.reflect === \"string\" ? Object.assign({}, descriptor, reflect(descriptor.reflect.split(\".\"))) : descriptor]).reduce((instance, [key, descriptor]) => Object.defineProperty(instance, key, Object.assign({\n  configurable: true\n}, descriptor)), Object.assign(new constructor(), properties));\nvar ModuleErrors = {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  }\n};\nconst NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\"\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\"\n};\nconst toNodeDescription = ({\n  type,\n  prefix\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\nvar StandardErrors = {\n  AccessorIsGenerator: ({\n    kind\n  }) => `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitInUsingBinding: \"'await' is not allowed to be used as a name in 'using' declarations.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport: \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({\n    exportName\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: ({\n    type\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: ({\n    type\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({\n    importName\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({\n    maxArgumentCount\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding: 'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({\n    radix\n  }) => `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({\n    reservedWord\n  }) => `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({\n    identifierName\n  }) => `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({\n    ancestor\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({\n    ancestor\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({\n    unexpected\n  }) => `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({\n    labelName\n  }) => `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingOneOfPlugins: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({\n    key\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\n  ModuleExportUndefined: ({\n    localName\n  }) => `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({\n    identifierName\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({\n    identifierName\n  }) => `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({\n    keyword\n  }) => `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({\n    reservedWord\n  }) => `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration: \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern: \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({\n    identifierName\n  }) => `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n};\nvar StrictModeErrors = {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: ({\n    referenceName\n  }) => `Assigning to '${referenceName}' in strict mode.`,\n  StrictEvalArgumentsBinding: ({\n    bindingName\n  }) => `Binding '${bindingName}' in strict mode.`,\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\"\n};\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\nvar PipelineOperatorErrors = {\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({\n    token\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({\n    type\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n    type\n  })}; please wrap it in parentheses.`,\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\n};\nconst _excluded$1 = [\"toMessage\"],\n  _excluded2$1 = [\"message\"];\nfunction toParseErrorConstructor(_ref) {\n  let {\n      toMessage\n    } = _ref,\n    properties = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  return function constructor({\n    loc,\n    details\n  }) {\n    return instantiate(SyntaxError, Object.assign({}, properties, {\n      loc\n    }), {\n      clone(overrides = {}) {\n        const loc = overrides.loc || {};\n        return constructor({\n          loc: new Position(\"line\" in loc ? loc.line : this.loc.line, \"column\" in loc ? loc.column : this.loc.column, \"index\" in loc ? loc.index : this.loc.index),\n          details: Object.assign({}, this.details, overrides.details)\n        });\n      },\n      details: {\n        value: details,\n        enumerable: false\n      },\n      message: {\n        get() {\n          return `${toMessage(this.details)} (${this.loc.line}:${this.loc.column})`;\n        },\n        set(value) {\n          Object.defineProperty(this, \"message\", {\n            value\n          });\n        }\n      },\n      pos: {\n        reflect: \"loc.index\",\n        enumerable: true\n      },\n      missingPlugin: \"missingPlugin\" in details && {\n        reflect: \"details.missingPlugin\",\n        enumerable: true\n      }\n    });\n  };\n}\nfunction ParseErrorEnum(argument, syntaxPlugin) {\n  if (Array.isArray(argument)) {\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n  const ParseErrorConstructors = {};\n  for (const reasonCode of Object.keys(argument)) {\n    const template = argument[reasonCode];\n    const _ref2 = typeof template === \"string\" ? {\n        message: () => template\n      } : typeof template === \"function\" ? {\n        message: template\n      } : template,\n      {\n        message\n      } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);\n    const toMessage = typeof message === \"string\" ? () => message : message;\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage\n    }, syntaxPlugin ? {\n      syntaxPlugin\n    } : {}, rest));\n  }\n  return ParseErrorConstructors;\n}\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\nconst {\n  defineProperty\n} = Object;\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\n  enumerable: false,\n  value: object[key]\n});\nfunction toESTreeLocation(node) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n  return node;\n}\nvar estree = superClass => class ESTreeParserMixin extends superClass {\n  parse() {\n    const file = toESTreeLocation(super.parse());\n    if (this.options.tokens) {\n      file.tokens = file.tokens.map(toESTreeLocation);\n    }\n    return file;\n  }\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n  parseBigIntLiteral(value) {\n    let bigInt;\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  directiveToStmt(directive) {\n    const expression = directive.value;\n    delete directive.value;\n    expression.type = \"Literal\";\n    expression.raw = expression.extra.raw;\n    expression.value = expression.extra.expressionValue;\n    const stmt = directive;\n    stmt.type = \"ExpressionStatement\";\n    stmt.expression = expression;\n    stmt.directive = expression.extra.rawValue;\n    delete expression.extra;\n    return stmt;\n  }\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n    classBody.body.push(method);\n  }\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n    return this.finishNode(node, \"MethodDefinition\");\n  }\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") {\n        node.kind = \"init\";\n      }\n      node.shorthand = false;\n    }\n    return node;\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n    return node;\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n    return super.isAssignable(node, isBinding);\n  }\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      const {\n        key,\n        value\n      } = node;\n      if (this.isPrivateName(key)) {\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n      }\n      this.toAssignable(value, isLHS);\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(Errors.PatternHasAccessor, {\n        at: prop.key\n      });\n    } else if (prop.method) {\n      this.raise(Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n    }\n  }\n  finishCallExpression(unfinished, optional) {\n    const node = super.finishCallExpression(unfinished, optional);\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n      delete node.arguments;\n      delete node.callee;\n    }\n    return node;\n  }\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n    super.toReferencedArguments(node);\n  }\n  parseExport(unfinished, decorators) {\n    const exportStartLoc = this.state.lastTokStartLoc;\n    const node = super.parseExport(unfinished, decorators);\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n      case \"ExportDefaultDeclaration\":\n        {\n          var _declaration$decorato;\n          const {\n            declaration\n          } = node;\n          if ((declaration == null ? void 0 : declaration.type) === \"ClassDeclaration\" && ((_declaration$decorato = declaration.decorators) == null ? void 0 : _declaration$decorato.length) > 0 && declaration.start === node.start) {\n            this.resetStartLocation(node, exportStartLoc);\n          }\n        }\n        break;\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startLoc, noCalls, state);\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n    return node;\n  }\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n    return super.hasPropertyAsPrivateName(node);\n  }\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n  finishNodeAt(node, type, endLoc) {\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n  }\n  resetStartLocation(node, startLoc) {\n    super.resetStartLocation(node, startLoc);\n    toESTreeLocation(node);\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    super.resetEndLocation(node, endLoc);\n    toESTreeLocation(node);\n  }\n};\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\nfunction isIteratorStart(current, next, next2) {\n  return current === 64 && next === 64 && isIdentifierStart(next2);\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\nconst SCOPE_OTHER = 0b000000000,\n  SCOPE_PROGRAM = 0b000000001,\n  SCOPE_FUNCTION = 0b000000010,\n  SCOPE_ARROW = 0b000000100,\n  SCOPE_SIMPLE_CATCH = 0b000001000,\n  SCOPE_SUPER = 0b000010000,\n  SCOPE_DIRECT_SUPER = 0b000100000,\n  SCOPE_CLASS = 0b001000000,\n  SCOPE_STATIC_BLOCK = 0b010000000,\n  SCOPE_TS_MODULE = 0b100000000,\n  SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_STATIC_BLOCK | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b0000000000001,\n  BIND_KIND_TYPE = 0b0000000000010,\n  BIND_SCOPE_VAR = 0b0000000000100,\n  BIND_SCOPE_LEXICAL = 0b0000000001000,\n  BIND_SCOPE_FUNCTION = 0b0000000010000,\n  BIND_FLAGS_NONE = 0b00000001000000,\n  BIND_FLAGS_CLASS = 0b00000010000000,\n  BIND_FLAGS_TS_ENUM = 0b00000100000000,\n  BIND_FLAGS_TS_CONST_ENUM = 0b00001000000000,\n  BIND_FLAGS_TS_EXPORT_ONLY = 0b00010000000000,\n  BIND_FLAGS_FLOW_DECLARE_FN = 0b00100000000000,\n  BIND_FLAGS_TS_IMPORT = 0b01000000000000,\n  BIND_FLAGS_NO_LET_IN_LEXICAL = 0b10000000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_CATCH_PARAM = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n  BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n  BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n  BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n  BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n  BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n  BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_TS_TYPE_IMPORT = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_TS_IMPORT,\n  BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n  CLASS_ELEMENT_KIND_GETTER = 0b010,\n  CLASS_ELEMENT_KIND_SETTER = 0b001,\n  CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n  CLASS_ELEMENT_OTHER = 0;\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n}\nclass ScopeHandler {\n  constructor(parser, inModule) {\n    this.parser = void 0;\n    this.scopeStack = [];\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n  get inTopLevel() {\n    return (this.currentScope().flags & SCOPE_PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n  createScope(flags) {\n    return new Scope(flags);\n  }\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n  exit() {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) || !this.parser.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n  declareName(name, bindingType, loc) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  maybeExportDefined(scope, name) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n}\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n  declareName(name, bindingType, loc) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n    return false;\n  }\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n}\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n    const {\n      start: nodeStart\n    } = node;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        break;\n      }\n    }\n  }\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n    default:\n      return false;\n  }\n}\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.inDisallowConditionalTypesContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 137;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.firstInvalidTemplateEscapePos = null;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n      state[key] = val;\n    }\n    return state;\n  }\n}\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = {\n          pos,\n          lineStart,\n          curLine\n        };\n      } else {\n        out += res.ch;\n      }\n      ({\n        pos,\n        lineStart,\n        curLine\n      } = res);\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n    containsInvalid: !!firstInvalidLoc\n  };\n}\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n  return ch === (type === \"double\" ? 34 : 39);\n}\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n    case 114:\n      return res(\"\\r\");\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n    case 116:\n      return res(\"\\t\");\n    case 98:\n      return res(\"\\b\");\n    case 118:\n      return res(\"\\u000b\");\n    case 102:\n      return res(\"\\f\");\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n    case 10:\n      lineStart = pos;\n      ++curLine;\n    case 8232:\n    case 8233:\n      return res(\"\");\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n        return res(String.fromCharCode(octal));\n      }\n      return res(String.fromCharCode(ch));\n  }\n}\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return {\n    code: n,\n    pos\n  };\n}\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n      if (!allowNumSeparator) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n      ++pos;\n      continue;\n    }\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      if (val <= 9 && bailOnError) {\n        return {\n          n: null,\n          pos\n        };\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n  return {\n    n: total,\n    pos\n  };\n}\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n  return {\n    code,\n    pos\n  };\n}\nconst _excluded = [\"at\"],\n  _excluded2 = [\"at\"];\nfunction buildPosition(pos, lineStart, curLine) {\n  return new Position(curLine, pos - lineStart, pos);\n}\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n}\nclass Tokenizer extends CommentsParser {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.errorHandlers_readInt = {\n      invalidDigit: (pos, lineStart, curLine, radix) => {\n        if (!this.options.errorRecovery) return false;\n        this.raise(Errors.InvalidDigit, {\n          at: buildPosition(pos, lineStart, curLine),\n          radix\n        });\n        return true;\n      },\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\n    };\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\n    });\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: (pos, lineStart, curLine) => {\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      },\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedString, {\n          at: buildPosition(pos - 1, lineStart, curLine)\n        });\n      }\n    });\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      }\n    });\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n  next() {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  match(type) {\n    return this.state.type === type;\n  }\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition\n    };\n  }\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n  nextTokenInLineStart() {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n  nextTokenInLineStartSince(pos) {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input) ? skipWhiteSpaceInLine.lastIndex : pos;\n  }\n  lookaheadInLineCharCode() {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n  setStrict(strict) {\n    this.state.strict = strict;\n    if (strict) {\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, {\n        at\n      }));\n      this.state.strictErrors.clear();\n    }\n  }\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(137);\n      return;\n    }\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n  skipBlockComment(commentEnd) {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment(\"*/\");\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            default:\n              break loop;\n          }\n          break;\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= 48 && next <= 57) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition()\n      });\n    }\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, {\n          at: this.state.curPosition()\n        });\n      }\n      this.state.pos += 2;\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(56, 1);\n    }\n  }\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 55 : 54;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 57;\n    }\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n    this.finishOp(type, width);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 41 : 42, 2);\n      }\n      return;\n    }\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(39, 2);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n    this.finishOp(code === 124 ? 43 : 45, 1);\n  }\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"^^\"\n    }])) {\n      this.finishOp(37, 2);\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === 94) {\n        this.unexpected();\n      }\n    } else {\n      this.finishOp(44, 1);\n    }\n  }\n  readToken_atSign() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"@@\"\n    }])) {\n      this.finishOp(38, 2);\n    } else {\n      this.finishOp(26, 1);\n    }\n  }\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(53, 1);\n    }\n  }\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n      this.finishOp(51, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(47, 1);\n  }\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n      this.finishOp(52, size);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(48, 1);\n  }\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(40, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n        return;\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n        return;\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n        return;\n      case 63:\n        this.readToken_question();\n        return;\n      case 96:\n        this.readTemplateToken();\n        return;\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n      case 47:\n        this.readToken_slash();\n        return;\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n      case 94:\n        this.readToken_caret();\n        return;\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n      case 60:\n        this.readToken_lt();\n        return;\n      case 62:\n        this.readToken_gt();\n        return;\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n      case 126:\n        this.finishOp(36, 1);\n        return;\n      case 64:\n        this.readToken_atSign();\n        return;\n      case 35:\n        this.readToken_numberSign();\n        return;\n      case 92:\n        this.readWord();\n        return;\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code)\n    });\n  }\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n  readRegexp() {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n        escaped = ch === 92;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === 118) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        } else if (cp === 117) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, {\n            at: nextPos()\n          });\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(Errors.MalformedRegExpFlags, {\n          at: nextPos()\n        });\n      } else {\n        break;\n      }\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n    this.finishToken(135, {\n      pattern: content,\n      flags: mods\n    });\n  }\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\n    const {\n      n,\n      pos\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\n    this.state.pos = pos;\n    return n;\n  }\n  readRadixNumber(radix) {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(Errors.InvalidDecimal, {\n        at: startLoc\n      });\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    if (isBigInt) {\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(133, str);\n      return;\n    }\n    this.finishToken(132, val);\n  }\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, {\n        at: this.state.curPosition()\n      });\n    }\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, {\n        at: startLoc\n      });\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos)\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, {\n          at: startLoc\n        });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n    if (isBigInt) {\n      this.finishToken(133, str);\n      return;\n    }\n    if (isDecimal) {\n      this.finishToken(134, str);\n      return;\n    }\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(132, val);\n  }\n  readCodePoint(throwOnInvalid) {\n    const {\n      code,\n      pos\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\n    this.state.pos = pos;\n    return code;\n  }\n  readString(quote) {\n    const {\n      str,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(131, str);\n  }\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(null, 8);\n    }\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n  readTemplateToken() {\n    const opening = this.input[this.state.pos];\n    const {\n      str,\n      firstInvalidLoc,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\n    }\n    if (this.input.codePointAt(pos) === 96) {\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\n    } else {\n      this.state.pos++;\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\n    }\n  }\n  recordStrictModeErrors(toParseError, {\n    at\n  }) {\n    const index = at.index;\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, {\n        at\n      });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition()\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, {\n              at: escStart\n            });\n          }\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(130, word);\n    }\n  }\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type)\n      });\n    }\n  }\n  raise(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({\n      loc,\n      details\n    });\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n    return error;\n  }\n  raiseOverwrite(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded2);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return errors[i] = toParseError({\n          loc,\n          details\n        });\n      }\n      if (error.loc.index < pos) break;\n    }\n    return this.raise(toParseError, raiseProperties);\n  }\n  updateContext(prevType) {}\n  unexpected(loc, type) {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc\n    });\n  }\n  expectPlugin(pluginName, loc) {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName]\n    });\n  }\n  expectOnePlugin(pluginNames) {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames\n      });\n    }\n  }\n  errorBuilder(error) {\n    return (pos, lineStart, curLine) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine)\n      });\n    };\n  }\n}\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n}\nclass ClassScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.parser = parser;\n  }\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name\n        });\n      }\n    }\n  }\n  declarePrivateName(name, elementType, loc) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n  usePrivateName(name, loc) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n}\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.declarationErrors = new Map();\n  }\n  recordDeclarationError(ParsingErrorClass, {\n    at\n  }) {\n    const index = at.index;\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(iterator) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\nclass ExpressionScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [new ExpressionScope()];\n    this.parser = parser;\n  }\n  enter(scope) {\n    this.stack.push(scope);\n  }\n  exit() {\n    this.stack.pop();\n  }\n  recordParameterInitializerError(toParseError, {\n    at: node\n  }) {\n    const origin = {\n      at: node.loc.start\n    };\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n  recordArrowParameterBindingError(error, {\n    at: node\n  }) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n    const origin = {\n      at: node.loc.start\n    };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n  recordAsyncArrowParametersError({\n    at\n  }) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, {\n          at\n        });\n      }\n      scope = stack[--i];\n    }\n  }\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, {\n        at: loc\n      });\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\nconst PARAM = 0b0000,\n  PARAM_YIELD = 0b0001,\n  PARAM_AWAIT = 0b0010,\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n  exit() {\n    this.stacks.pop();\n  }\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, value, enumerable = true) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, {\n        enumerable,\n        value\n      });\n    }\n  }\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n    return false;\n  }\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  expectContextual(token, toParseError) {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, {\n          at: this.state.startLoc\n        });\n      }\n      this.unexpected(null, token);\n    }\n  }\n  canInsertSemicolon() {\n    return this.match(137) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\n  }\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(Errors.MissingSemicolon, {\n      at: this.state.lastTokEndLoc\n    });\n  }\n  expect(type, loc) {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n      throw error;\n    }\n  }\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc\n    } = refExpressionErrors;\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\n    if (!andThrow) {\n      return hasErrors;\n    }\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc\n      });\n    }\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, {\n        at: doubleProtoLoc\n      });\n    }\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, {\n        at: privateKeyLoc\n      });\n    }\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n  checkDestructuringPrivate(refExpressionErrors) {\n    const {\n      privateKeyLoc\n    } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssignLoc = null;\n    this.doubleProtoLoc = null;\n    this.privateKeyLoc = null;\n    this.optionalParametersLoc = null;\n  }\n}\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n}\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n    return newNode;\n  };\n}\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n  startNodeAt(loc) {\n    return new Node(this, loc.index, loc);\n  }\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.loc.start);\n  }\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n  finishNodeAt(node, type, endLoc) {\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n  resetStartLocation(node, startLoc) {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: ({\n    reservedType\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({\n    enumName\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: Object.assign({\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\n  }, {\n    reasonCode: \"OptionalBindingPattern\"\n  }),\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({\n    reservedType\n  }) => `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n});\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 97;\n}\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = superClass => class FlowParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n  finishToken(type, val) {\n    if (type !== 131 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n    super.finishToken(type, val);\n  }\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n      if (!matches) ;else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n    super.addComment(comment);\n  }\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    this.next();\n    this.expectContextual(108);\n    if (this.state.lastTokStart > moduloLoc.index + 1) {\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n        at: moduloLoc\n      });\n    }\n    if (this.eat(10)) {\n      node.value = super.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n    if (this.match(54)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n      if (this.match(54)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n    return [type, predicate];\n  }\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n    if (this.match(47)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.loc.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n  flowParseDeclare(node, insideModule) {\n    if (this.match(80)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(74)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(125)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(FlowErrors.NestedDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(128)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(129)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(127)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(82)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      this.unexpected();\n    }\n  }\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n    if (this.match(131)) {\n      node.id = super.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n      if (this.match(83)) {\n        this.next();\n        if (!this.isContextual(128) && !this.match(87)) {\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        super.parseImport(bodyNode);\n      } else {\n        this.expectContextual(123, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n      body.push(bodyNode);\n    }\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n            at: bodyElement\n          });\n        }\n        if (kind === \"ES\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(82);\n    if (this.eat(65)) {\n      if (this.match(68) || this.match(80)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(75) || this.isLet() || (this.isContextual(128) || this.isContextual(127)) && !insideModule) {\n        const label = this.state.value;\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n          at: this.state.startLoc,\n          unsupportedExportKind: label,\n          suggestion: exportSuggestions[label]\n        });\n      }\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(129)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(55) || this.match(5) || this.isContextual(127) || this.isContextual(128) || this.isContextual(129)) {\n        node = this.parseExport(node, null);\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n    this.unexpected();\n  }\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(109);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    const finished = this.flowParseTypeAlias(node);\n    finished.type = \"DeclareTypeAlias\";\n    return finished;\n  }\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    const finished = this.flowParseOpaqueType(node, true);\n    finished.type = \"DeclareOpaqueType\";\n    return finished;\n  }\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n  flowParseInterfaceish(node, isClass) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n    if (isClass) {\n      if (this.eatContextual(115)) {\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n      if (this.eatContextual(111)) {\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n        at: this.state.startLoc\n      });\n    }\n  }\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, {\n      at: startLoc,\n      reservedType: word\n    });\n  }\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\n    return this.parseIdentifier(liberal);\n  }\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(128);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.supertype = null;\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n    node.impltype = null;\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStartLoc = this.state.startLoc;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(FlowErrors.MissingTypeParamDefault, {\n          at: nodeStartLoc\n        });\n      }\n    }\n    return this.finishNode(node, \"TypeParameter\");\n  }\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    let defaultRequired = false;\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    } while (!this.match(48));\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n    while (!this.match(48)) {\n      node.params.push(this.flowParseType());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    while (!this.match(48)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(127);\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n  flowParseObjectPropertyKey() {\n    return this.match(132) || this.match(131) ? super.parseExprAtom() : this.parseIdentifier(true);\n  }\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n    if (this.match(47) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n    } else {\n      node.method = false;\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n      node.value = this.flowParseTypeInitialiser();\n    }\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    this.expect(10);\n    if (this.match(78)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n    nodeStart.exact = exact;\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStartLoc = null;\n      let inexactStartLoc = null;\n      const node = this.startNode();\n      if (allowProto && this.isContextual(116)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStartLoc = this.state.startLoc;\n          allowStatic = false;\n        }\n      }\n      if (allowStatic && this.isContextual(104)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n      const variance = this.flowParseVariance();\n      if (this.eat(0)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(47)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n        if (this.isContextual(98) || this.isContextual(103)) {\n          const lookahead = this.lookahead();\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStartLoc = this.state.lastTokStartLoc;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n      this.flowObjectTypeSemicolon();\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n          at: inexactStartLoc\n        });\n      }\n    }\n    this.expect(endDelim);\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(FlowErrors.InexactInsideNonObject, {\n            at: this.state.lastTokStartLoc\n          });\n        } else if (!allowInexact) {\n          this.raise(FlowErrors.InexactInsideExact, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        if (variance) {\n          this.raise(FlowErrors.InexactVariance, {\n            at: variance\n          });\n        }\n        return null;\n      }\n      if (!allowSpread) {\n        this.raise(FlowErrors.UnexpectedSpreadType, {\n          at: this.state.lastTokStartLoc\n        });\n      }\n      if (protoStartLoc != null) {\n        this.unexpected(protoStartLoc);\n      }\n      if (variance) {\n        this.raise(FlowErrors.SpreadVariance, {\n          at: variance\n        });\n      }\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStartLoc != null;\n      node.kind = kind;\n      let optional = false;\n      if (this.match(47) || this.match(10)) {\n        node.method = true;\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, {\n            at: node.value.this\n          });\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n        if (this.eat(17)) {\n          optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n    if (property.value.this) {\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, {\n        at: property.value.this\n      });\n    }\n    if (length !== paramCount) {\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: property\n      });\n    }\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: property\n      });\n    }\n  }\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n  flowParseQualifiedTypeIdentifier(startLoc, id) {\n    var _startLoc;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n    return node;\n  }\n  flowParseGenericType(startLoc, id) {\n    const node = this.startNodeAt(startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(87);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 78;\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node\n        });\n      }\n      name = this.parseIdentifier(isThis);\n      if (this.eat(17)) {\n        optional = true;\n        if (isThis) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n            at: node\n          });\n        }\n      }\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n    if (this.match(78)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n  flowIdentToTypeAnnotation(startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startLoc, id);\n    }\n  }\n  flowParsePrimaryType() {\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n      case 47:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 10:\n        this.next();\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 131:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n      case 85:\n      case 86:\n        node.value = this.match(85);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n      case 53:\n        if (this.state.value === \"-\") {\n          this.next();\n          if (this.match(132)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n          if (this.match(133)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n            at: this.state.startLoc\n          });\n        }\n        this.unexpected();\n        return;\n      case 132:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n      case 133:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n      case 88:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n      case 84:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n      case 78:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n      case 55:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n      case 87:\n        return this.flowParseTypeofType();\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(127)) {\n            return this.flowParseInterfaceType();\n          }\n          return this.flowIdentToTypeAnnotation(startLoc, node, this.parseIdentifier());\n        }\n    }\n    this.unexpected();\n  }\n  flowParsePostfixType() {\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n    return type;\n  }\n  flowParsePrefixType() {\n    const node = this.startNode();\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n    return param;\n  }\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(45);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n    while (this.eat(45)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n    while (this.eat(43)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 130 && this.state.value === \"_\") {\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n    return ident;\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  flowParseVariance() {\n    let variance = null;\n    if (this.match(53)) {\n      variance = this.startNode();\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n      this.next();\n      return this.finishNode(variance, \"Variance\");\n    }\n    return variance;\n  }\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      return;\n    }\n    super.parseFunctionBody(node, false, isMethod);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  parseStatementLike(flags) {\n    if (this.state.strict && this.isContextual(127)) {\n      const lookahead = this.lookahead();\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    const stmt = super.parseStatementLike(flags);\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n    return stmt;\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n    return super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return !this.state.containsEsc;\n    }\n    return super.shouldParseExportDeclaration();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return this.state.containsEsc;\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n      if (failed && valid.length > 1) {\n        this.raise(FlowErrors.AmbiguousConditionalArrow, {\n          at: state.startLoc\n        });\n      }\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n    while (stack.length !== 0) {\n      const node = stack.pop();\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n  finishArrowValidation(node) {\n    var _node$extra;\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n    return result;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n    return node;\n  }\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n    super.assertModuleNodeAllowed(node);\n  }\n  parseExport(node, decorators) {\n    const decl = super.parseExport(node, decorators);\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n    return decl;\n  }\n  parseExportDeclaration(node) {\n    if (this.isContextual(128)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        super.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(129)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(127)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n  eatExportStar(node) {\n    if (super.eatExportStar(node)) return true;\n    if (this.isContextual(128) && this.lookahead().type === 55) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    const {\n      startLoc\n    } = this.state;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(startLoc);\n    }\n    return hasNamespace;\n  }\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n  parseClassMember(classBody, member, state) {\n    const {\n      startLoc\n    } = this.state;\n    if (this.isContextual(123)) {\n      if (super.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      member.declare = true;\n    }\n    super.parseClassMember(classBody, member, state);\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(FlowErrors.DeclareClassElement, {\n          at: startLoc\n        });\n      } else if (member.value) {\n        this.raise(FlowErrors.DeclareClassFieldInitializer, {\n          at: member.value\n        });\n      }\n    }\n  }\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(Errors.InvalidIdentifier, {\n        at: this.state.curPosition(),\n        identifierName: fullWord\n      });\n    }\n    this.finishToken(130, fullWord);\n  }\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 123 && next === 124) {\n      this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      this.finishOp(code === 62 ? 48 : 47, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        this.finishOp(18, 2);\n      } else {\n        this.finishOp(17, 1);\n      }\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\n      this.state.pos += 2;\n      this.readIterator();\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\n      node.left = this.typeCastToParameter(node.left);\n    }\n    super.toAssignable(node, isLHS);\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n      const expr = exprList[i];\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(FlowErrors.TypeCastInPattern, {\n          at: expr.typeAnnotation\n        });\n      }\n    }\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n    return node;\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassPrivateProperty(node);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    if (method.params && isConstructor) {\n      const params = method.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    }\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && this.match(47)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    if (this.isContextual(111)) {\n      this.next();\n      const implemented = node.implements = [];\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n        if (this.match(47)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length > 0) {\n      const param = params[0];\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, {\n          at: param\n        });\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, {\n          at: param\n        });\n      }\n    }\n  }\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.loc.start);\n    }\n    delete prop.variance;\n    let typeParameters;\n    if (this.match(47) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n    const result = super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    if (typeParameters) {\n      (result.value || result).typeParameters = typeParameters;\n    }\n    return result;\n  }\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(FlowErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n      if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n          at: param\n        });\n      }\n      param.optional = true;\n    }\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamAnnotationRequired, {\n        at: param\n      });\n    }\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamNoDefault, {\n        at: param\n      });\n    }\n    this.resetEndLocation(param);\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(FlowErrors.TypeBeforeInitializer, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n    return isMaybeDefaultImport(this.state.type);\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(FlowErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n    if (this.match(87)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(128)) {\n      kind = \"type\";\n    }\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n      if (kind === \"type\" && type === 55) {\n        this.unexpected(null, lh.type);\n      }\n      if (isMaybeDefaultImport(type) || type === 5 || type === 55) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n    let isBinding = false;\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(Errors.ImportBindingIsString, {\n            at: specifier,\n            importName: firstIdent.value\n          });\n        }\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n      if (this.eatContextual(93)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n        at: specifier\n      });\n    }\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\n    }\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseFunctionParams(node, isConstructor) {\n    const kind = node.kind;\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n    let state = null;\n    let jsx;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\n      var _jsx2, _jsx3;\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, {\n              at: typeParameters\n            });\n          }\n          return arrow.node;\n        }\n        arrowExpression = arrow.node;\n      }\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n        at: typeParameters\n      });\n    }\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n    return super.parseArrow(node);\n  }\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node.params[i]\n        });\n      }\n    }\n    super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startLoc.index) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.arguments = super.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n      throw arrow.error || result.error;\n    }\n    return super.parseSubscripts(base, startLoc, noCalls);\n  }\n  parseSubscript(base, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = super.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) {\n          node.optional = false;\n        }\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, subscriptState);\n  }\n  parseNewCallee(node) {\n    super.parseNewCallee(node);\n    let targs = null;\n    if (this.shouldParseTypes() && this.match(47)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n    node.typeArguments = targs;\n  }\n  parseAsyncArrowWithTypeParameters(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.parseFunctionParams(node, false);\n    if (!this.parseArrow(node)) return;\n    return super.parseArrowExpression(node, undefined, true);\n  }\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n    super.readToken_mult_modulo(code);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n    super.readToken_pipe_amp(code);\n  }\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n    if (this.state.hasFlowComment) {\n      this.raise(FlowErrors.UnterminatedFlowComment, {\n        at: this.state.curPosition()\n      });\n    }\n    return fileNode;\n  }\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        throw this.raise(FlowErrors.NestedFlowComment, {\n          at: this.state.startLoc\n        });\n      }\n      this.hasFlowCommentCompletion();\n      const commentSkip = this.skipFlowComment();\n      if (commentSkip) {\n        this.state.pos += commentSkip;\n        this.state.hasFlowComment = true;\n      }\n      return;\n    }\n    return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n  }\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n    return false;\n  }\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n  }\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n      at: loc,\n      memberName,\n      enumName\n    });\n  }\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, Object.assign({\n      at: loc\n    }, enumContext));\n  }\n  flowEnumErrorNumberMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n      at: loc,\n      enumName,\n      memberName\n    });\n  }\n  flowEnumErrorStringMemberInconsistentlyInitailized(node, {\n    enumName\n  }) {\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n      at: node,\n      enumName\n    });\n  }\n  flowEnumMemberInit() {\n    const startLoc = this.state.startLoc;\n    const endOfInit = () => this.match(12) || this.match(8);\n    switch (this.state.type) {\n      case 132:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 131:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 85:\n      case 86:\n        {\n          const literal = this.parseBooleanLiteral(this.match(85));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      default:\n        return {\n          type: \"invalid\",\n          loc: startLoc\n        };\n    }\n  }\n  flowEnumMemberRaw() {\n    const loc = this.state.startLoc;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      loc\n    };\n    return {\n      id,\n      init\n    };\n  }\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n    if (explicitType === null) {\n      return;\n    }\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\n    }\n  }\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n      if (memberName === \"\") {\n        continue;\n      }\n      if (/^[a-z]/.test(memberName)) {\n        this.raise(FlowErrors.EnumInvalidMemberName, {\n          at: id,\n          memberName,\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n          enumName\n        });\n      }\n      if (seenNames.has(memberName)) {\n        this.raise(FlowErrors.EnumDuplicateMemberName, {\n          at: id,\n          memberName,\n          enumName\n        });\n      }\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return initializedMembers;\n    }\n  }\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (!this.eatContextual(101)) return null;\n    if (!tokenIsIdentifier(this.state.type)) {\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n        at: this.state.startLoc,\n        enumName\n      });\n    }\n    const {\n      value\n    } = this.state;\n    this.next();\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n      this.raise(FlowErrors.EnumInvalidExplicitType, {\n        at: this.state.startLoc,\n        enumName,\n        invalidEnumType: value\n      });\n    }\n    return value;\n  }\n  flowEnumBody(node, id) {\n    const enumName = id.name;\n    const nameLoc = id.loc.start;\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), id);\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n    return false;\n  }\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n};\nconst entities = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({\n    openingTagName\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\nvar jsx = superClass => class JSXParserMixin extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(JsxErrors.UnterminatedJsxContent, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              this.finishToken(140);\n            } else {\n              super.getTokenFromCode(ch);\n            }\n            return;\n          }\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(139, out);\n          return;\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n        case 62:\n        case 125:\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n      }\n    }\n  }\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(131, out);\n  }\n  jsxReadEntity() {\n    const startPos = ++this.state.pos;\n    if (this.codePointAtPos(this.state.pos) === 35) {\n      ++this.state.pos;\n      let radix = 10;\n      if (this.codePointAtPos(this.state.pos) === 120) {\n        radix = 16;\n        ++this.state.pos;\n      }\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\n        ++this.state.pos;\n        return String.fromCodePoint(codePoint);\n      }\n    } else {\n      let count = 0;\n      let semi = false;\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\n        ++this.state.pos;\n      }\n      if (semi) {\n        const desc = this.input.slice(startPos, this.state.pos);\n        const entity = entities[desc];\n        ++this.state.pos;\n        if (entity) {\n          return entity;\n        }\n      }\n    }\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n    this.finishToken(138, this.input.slice(start, this.state.pos));\n  }\n  jsxParseIdentifier() {\n    const node = this.startNode();\n    if (this.match(138)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n  jsxParseNamespacedName() {\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n  jsxParseElementName() {\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n    return node;\n  }\n  jsxParseAttributeValue() {\n    let node;\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(JsxErrors.AttributeIsEmpty, {\n            at: node\n          });\n        }\n        return node;\n      case 140:\n      case 131:\n        return this.parseExprAtom();\n      default:\n        throw this.raise(JsxErrors.UnsupportedJsxValue, {\n          at: this.state.startLoc\n        });\n    }\n  }\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n  }\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_expr);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n    this.setContext(previousContext);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n  jsxParseAttribute() {\n    const node = this.startNode();\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n  jsxParseOpeningElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n    while (!this.match(56) && !this.match(141)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n    node.attributes = attributes;\n    node.selfClosing = this.eat(56);\n    this.expect(141);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n  jsxParseClosingElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    this.expect(141);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n  jsxParseElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startLoc);\n    let closingElement = null;\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 140:\n            startLoc = this.state.startLoc;\n            this.next();\n            if (this.eat(56)) {\n              closingElement = this.jsxParseClosingElementAt(startLoc);\n              break contents;\n            }\n            children.push(this.jsxParseElementAt(startLoc));\n            break;\n          case 139:\n            children.push(this.parseExprAtom());\n            break;\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\n        this.raise(JsxErrors.MissingClosingTagFragment, {\n          at: closingElement\n        });\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(JsxErrors.MissingClosingTagElement, {\n          at: closingElement,\n          openingTagName: getQualifiedJSXName(openingElement.name)\n        });\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name)\n          });\n        }\n      }\n    }\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n    node.children = children;\n    if (this.match(47)) {\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n        at: this.state.startLoc\n      });\n    }\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n  jsxParseElement() {\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startLoc);\n  }\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(139)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(140)) {\n      return this.jsxParseElement();\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(140);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n  getTokenFromCode(code) {\n    const context = this.curContext();\n    if (context === types.j_expr) {\n      this.jsxReadToken();\n      return;\n    }\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        this.jsxReadWord();\n        return;\n      }\n      if (code === 62) {\n        ++this.state.pos;\n        this.finishToken(141);\n        return;\n      }\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        this.jsxReadString(code);\n        return;\n      }\n    }\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      this.finishToken(140);\n      return;\n    }\n    super.getTokenFromCode(code);\n  }\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n    if (type === 56 && prevType === 140) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 140) {\n      context.push(types.j_oTag);\n    } else if (type === 141) {\n      const out = context[context.length - 1];\n      if (out === types.j_oTag && prevType === 56 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n};\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n}\nclass TypeScriptScopeHandler extends ScopeHandler {\n  constructor(...args) {\n    super(...args);\n    this.importsStack = [];\n  }\n  createScope(flags) {\n    this.importsStack.push(new Set());\n    return new TypeScriptScope(flags);\n  }\n  enter(flags) {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n    super.enter(flags);\n  }\n  exit() {\n    const flags = super.exit();\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n    return flags;\n  }\n  hasImport(name, allowShadow) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n  declareName(name, bindingType, loc) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    if (this.hasImport(name)) return;\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n    super.checkLocalExport(id);\n  }\n}\nconst getOwn$1 = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, {\n          at: node\n        });\n      }\n    }\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc\n            });\n          }\n        }\n        break;\n      case \"ObjectProperty\":\n        {\n          const {\n            key,\n            value\n          } = node;\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n          this.toAssignable(value, isLHS);\n          break;\n        }\n      case \"SpreadElement\":\n        {\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\n        }\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, {\n            at: node.left.loc.end\n          });\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, false);\n      this.toAssignable(arg, isLHS);\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, {\n          at: prop\n        });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    const end = exprList.length - 1;\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, {\n            at: elt\n          });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, {\n            at: trailingCommaLoc\n          });\n        }\n      }\n    }\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n      default:\n        return false;\n    }\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n  parseSpread(refExpressionErrors) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, 1);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n    return this.parseIdentifier();\n  }\n  parseBindingList(close, closeCharCode, flags) {\n    const allowEmpty = flags & 1;\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(), flags));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc\n          });\n        }\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      startLoc\n    } = this.state;\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === 136) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(prop, startLoc, false, false, true, false);\n  }\n  parseAssignableListItem(flags, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  parseAssignableListItemTypes(param, flags) {\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    var _startLoc, _left;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn$1({\n      AssignmentPattern: \"left\",\n      RestElement: \"argument\",\n      ObjectProperty: \"value\",\n      ParenthesizedExpression: \"expression\",\n      ArrayPattern: \"elements\",\n      ObjectPattern: \"properties\"\n    }, type);\n  }\n  checkLVal(expression, {\n    in: ancestor,\n    binding = BIND_NONE,\n    checkClashes = false,\n    strictModeChanged = false,\n    hasParenthesizedAncestor = false\n  }) {\n    var _expression$extra;\n    const type = expression.type;\n    if (this.isObjectMethod(expression)) return;\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, {\n          at: expression\n        });\n      }\n      return;\n    }\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n      const {\n        name\n      } = expression;\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, {\n            at: expression\n          });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n      return;\n    }\n    const validity = this.isValidLVal(type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass = binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor\n      });\n      return;\n    }\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor = type === \"ArrayPattern\" || type === \"ObjectPattern\" || type === \"ParenthesizedExpression\" ? {\n      type\n    } : ancestor;\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression\n        });\n      }\n    }\n  }\n  checkIdentifier(at, bindingType, strictModeChanged = false) {\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, {\n          at,\n          referenceName: at.name\n        });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name\n        });\n      }\n    }\n    if (bindingType & BIND_FLAGS_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, {\n        at\n      });\n    }\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n  declareNameFromIdentifier(identifier, binding) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, {\n          at: node\n        });\n    }\n  }\n  checkCommaAfterRest(close) {\n    if (!this.match(12)) {\n      return false;\n    }\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, {\n      at: this.state.startLoc\n    });\n    return true;\n  }\n}\nconst getOwn = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({\n    methodName\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional: \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({\n    kind\n  }) => `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: ({\n    modifier\n  }) => `Accessibility modifier already seen.`,\n  DuplicateModifier: ({\n    modifier\n  }) => `Duplicate modifier: '${modifier}'.`,\n  EmptyHeritageClauseType: ({\n    token\n  }) => `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType: \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({\n    type\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\n});\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\nfunction tsIsVarianceAnnotations(modifier) {\n  return modifier === \"in\" || modifier === \"out\";\n}\nvar typescript = superClass => class TypeScriptParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\"const\", \"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n    this.tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n    this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n  }\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(136) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58 && this.state.type !== 75) {\n      return undefined;\n    }\n    const modifier = this.state.value;\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n    return undefined;\n  }\n  tsParseModifiers({\n    allowedModifiers,\n    disallowedModifiers,\n    stopOnStartOfClassStaticBlock,\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\n  }, modified) {\n    const enforceOrder = (loc, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(TSErrors.InvalidModifiersOrder, {\n          at: loc,\n          orderedModifiers: [before, after]\n        });\n      }\n    };\n    const incompatible = (loc, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(TSErrors.IncompatibleModifiers, {\n          at: loc,\n          modifiers: [mod1, mod2]\n        });\n      }\n    };\n    for (;;) {\n      const {\n        startLoc\n      } = this.state;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(TSErrors.DuplicateAccessibilityModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, modifier, \"override\");\n          enforceOrder(startLoc, modifier, modifier, \"static\");\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else if (tsIsVarianceAnnotations(modifier)) {\n        if (modified[modifier]) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        }\n        modified[modifier] = true;\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n          incompatible(startLoc, modifier, \"declare\", \"override\");\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\n        }\n        modified[modifier] = true;\n      }\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(errorTemplate, {\n          at: startLoc,\n          modifier\n        });\n      }\n    }\n  }\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n      case \"HeritageClauseElement\":\n        return this.match(5);\n      case \"TupleElementTypes\":\n        return this.match(3);\n      case \"TypeParametersOrArguments\":\n        return this.match(48);\n    }\n  }\n  tsParseList(kind, parseElement) {\n    const result = [];\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n    return result;\n  }\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      trailingCommaPos = -1;\n      const element = parseElement();\n      if (element == null) {\n        return undefined;\n      }\n      result.push(element);\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      if (expectSuccess) {\n        this.expect(12);\n      }\n      return undefined;\n    }\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n    return result;\n  }\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(47);\n      }\n    }\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(48);\n    }\n    return result;\n  }\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(83);\n    this.expect(10);\n    if (!this.match(131)) {\n      this.raise(TSErrors.UnsupportedImportTypeArgument, {\n        at: this.state.startLoc\n      });\n    }\n    node.argument = super.parseExprAtom();\n    this.expect(11);\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName();\n    }\n    if (this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSImportType\");\n  }\n  tsParseEntityName(allowReservedWords = true) {\n    let entity = this.parseIdentifier(allowReservedWords);\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n    return entity;\n  }\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName();\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(87);\n    if (this.match(83)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName();\n    }\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n  tsParseTypeParameter(parseModifiers) {\n    const node = this.startNode();\n    parseModifiers(node);\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(81);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsTryParseTypeParameters(parseModifiers) {\n    if (this.match(47)) {\n      return this.tsParseTypeParameters(parseModifiers);\n    }\n  }\n  tsParseTypeParameters(parseModifiers) {\n    const node = this.startNode();\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeParameters, {\n        at: node\n      });\n    }\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    const paramsKey = \"parameters\";\n    const returnTypeKey = \"typeAnnotation\";\n    signature.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    this.expect(10);\n    signature[paramsKey] = this.tsParseBindingListForSignature();\n    if (returnTokenRequired) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n  tsParseBindingListForSignature() {\n    return super.parseBindingList(11, 41, 2).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n          at: pattern,\n          type: pattern.type\n        });\n      }\n      return pattern;\n    });\n  }\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n    return false;\n  }\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n    if (this.match(10) || this.match(47)) {\n      if (readonly) {\n        this.raise(TSErrors.ReadonlyForMethodSignature, {\n          at: node\n        });\n      }\n      const method = nodeAny;\n      if (method.kind && this.match(47)) {\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n          at: this.state.curPosition()\n        });\n      }\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n      const paramsKey = \"parameters\";\n      const returnTypeKey = \"typeAnnotation\";\n      if (method.kind === \"get\") {\n        if (method[paramsKey].length > 0) {\n          this.raise(Errors.BadGetterArity, {\n            at: this.state.curPosition()\n          });\n          if (this.isThisParam(method[paramsKey][0])) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method[paramsKey].length !== 1) {\n          this.raise(Errors.BadSetterArity, {\n            at: this.state.curPosition()\n          });\n        } else {\n          const firstParameter = method[paramsKey][0];\n          if (this.isThisParam(firstParameter)) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n        if (method[returnTypeKey]) {\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n            at: method[returnTypeKey]\n          });\n        }\n      } else {\n        method.kind = \"method\";\n      }\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n  tsParseTypeMember() {\n    const node = this.startNode();\n    if (this.match(10) || this.match(47)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n    if (this.match(77)) {\n      const id = this.startNode();\n      this.next();\n      if (this.match(10) || this.match(47)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n    this.tsParseModifiers({\n      allowedModifiers: [\"readonly\"],\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\n    }, node);\n    const idx = this.tsTryParseIndexSignature(node);\n    if (idx) {\n      return idx;\n    }\n    super.parsePropertyName(node);\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      super.parsePropertyName(node);\n    }\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n  tsIsStartOfMappedType() {\n    this.next();\n    if (this.eat(53)) {\n      return this.isContextual(120);\n    }\n    if (this.isContextual(120)) {\n      this.next();\n    }\n    if (!this.match(0)) {\n      return false;\n    }\n    this.next();\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n    this.next();\n    return this.match(58);\n  }\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(58);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n    if (this.match(53)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(120);\n    } else if (this.eatContextual(120)) {\n      node.readonly = true;\n    }\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\n    this.expect(3);\n    if (this.match(53)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n      const {\n        type\n      } = elementNode;\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(TSErrors.OptionalTypeBeforeRequired, {\n          at: elementNode\n        });\n      }\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\n      let checkType = type;\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        checkType = elementNode.type;\n      }\n      const isLabeled = checkType === \"TSNamedTupleMember\";\n      (_labeledElements = labeledElements) != null ? _labeledElements : labeledElements = isLabeled;\n      if (labeledElements !== isLabeled) {\n        this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n          at: elementNode\n        });\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n  tsParseTupleElementType() {\n    const {\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let labeled;\n    let label;\n    let optional;\n    let type;\n    const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n    const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n    if (chAfterWord === 58) {\n      labeled = true;\n      optional = false;\n      label = this.parseIdentifier(true);\n      this.expect(14);\n      type = this.tsParseType();\n    } else if (chAfterWord === 63) {\n      optional = true;\n      const startLoc = this.state.startLoc;\n      const wordName = this.state.value;\n      const typeOrLabel = this.tsParseNonArrayType();\n      if (this.lookaheadCharCode() === 58) {\n        labeled = true;\n        label = this.createIdentifier(this.startNodeAt(startLoc), wordName);\n        this.expect(17);\n        this.expect(14);\n        type = this.tsParseType();\n      } else {\n        labeled = false;\n        type = typeOrLabel;\n        this.expect(17);\n      }\n    } else {\n      type = this.tsParseType();\n      optional = this.eat(17);\n      labeled = this.eat(14);\n    }\n    if (labeled) {\n      let labeledNode;\n      if (label) {\n        labeledNode = this.startNodeAtNode(label);\n        labeledNode.optional = optional;\n        labeledNode.label = label;\n        labeledNode.elementType = type;\n        if (this.eat(17)) {\n          labeledNode.optional = true;\n          this.raise(TSErrors.TupleOptionalAfterType, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n      } else {\n        labeledNode = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n        this.raise(TSErrors.InvalidTupleMemberLabel, {\n          at: type\n        });\n        labeledNode.label = type;\n        labeledNode.elementType = this.tsParseType();\n      }\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n    if (rest) {\n      const restNode = this.startNodeAt(startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n    return type;\n  }\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\n    return this.finishNode(node, type);\n  }\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 132:\n        case 133:\n        case 131:\n        case 85:\n        case 86:\n          return super.parseExprAtom();\n        default:\n          this.unexpected();\n      }\n    })();\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = super.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 131:\n      case 132:\n      case 133:\n      case 85:\n      case 86:\n        return this.tsParseLiteralTypeNode();\n      case 53:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n          if (nextToken.type !== 132 && nextToken.type !== 133) {\n            this.unexpected();\n          }\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n        break;\n      case 78:\n        return this.tsParseThisTypeOrThisTypePredicate();\n      case 87:\n        return this.tsParseTypeQuery();\n      case 83:\n        return this.tsParseImportType();\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n      case 0:\n        return this.tsParseTupleType();\n      case 10:\n        return this.tsParseParenthesizedType();\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n      default:\n        {\n          const {\n            type\n          } = this.state;\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n    this.unexpected();\n  }\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n    return type;\n  }\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n      default:\n        this.raise(TSErrors.UnexpectedReadonly, {\n          at: node\n        });\n    }\n  }\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(113);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n  tsParseConstraintForInferType() {\n    if (this.eat(81)) {\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\n        return constraint;\n      }\n    }\n  }\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(113) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\n  }\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\n  }\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\n  }\n  tsIsStartOfFunctionType() {\n    if (this.match(47)) {\n      return true;\n    }\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n      this.next();\n      return true;\n    }\n    if (this.match(5)) {\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        this.parseObjectLike(8, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused) {\n        return false;\n      }\n    }\n    if (this.match(0)) {\n      this.next();\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        super.parseBindingList(3, 93, 1);\n        return errors.length === previousErrorCount;\n      } catch (_unused2) {\n        return false;\n      }\n    }\n    return false;\n  }\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n      if (this.match(11)) {\n        this.next();\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n      if (asserts && this.match(78)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 107) {\n      return false;\n    }\n    const containsEsc = this.state.containsEsc;\n    this.next();\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\n      return false;\n    }\n    if (containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.lastTokStartLoc,\n        reservedWord: \"asserts\"\n      });\n    }\n    return true;\n  }\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\n      return type;\n    }\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\n    this.expect(17);\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    this.expect(14);\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n  isAbstractConstructorSignature() {\n    return this.isContextual(122) && this.lookahead().type === 77;\n  }\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n    if (this.match(77)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n    return this.tsParseUnionTypeOrHigher();\n  }\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedTypeAssertion, {\n        at: this.state.startLoc\n      });\n    }\n    const node = this.startNode();\n    node.typeAnnotation = this.tsInType(() => {\n      this.next();\n      return this.match(75) ? this.tsParseTypeReference() : this.tsParseType();\n    });\n    this.expect(48);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n  tsParseHeritageClause(token) {\n    const originalStartLoc = this.state.startLoc;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\n      const node = this.startNode();\n      node.expression = this.tsParseEntityName();\n      if (this.match(47)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    });\n    if (!delimitedList.length) {\n      this.raise(TSErrors.EmptyHeritageClauseType, {\n        at: originalStartLoc,\n        token\n      });\n    }\n    return delimitedList;\n  }\n  tsParseInterfaceDeclaration(node, properties = {}) {\n    if (this.hasFollowingLineBreak()) return null;\n    this.expectContextual(127);\n    if (properties.declare) node.declare = true;\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(TSErrors.MissingInterfaceName, {\n        at: this.state.startLoc\n      });\n    }\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (this.eat(81)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_TS_TYPE);\n    node.typeAnnotation = this.tsInType(() => {\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers);\n      this.expect(29);\n      if (this.isContextual(112) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n  tsInDisallowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsInAllowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = false;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(131) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\n    if (this.eat(29)) {\n      node.initializer = super.parseMaybeAssignAllowIn();\n    }\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n  tsParseEnumDeclaration(node, properties = {}) {\n    if (properties.const) node.const = true;\n    if (properties.declare) node.declare = true;\n    this.expectContextual(124);\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n    if (!nested) {\n      this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n    }\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(110)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(131)) {\n      node.id = super.parseStringLiteral(this.state.value);\n    } else {\n      this.unexpected();\n    }\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(TSErrors.ImportAliasHasImportType, {\n        at: moduleReference\n      });\n    }\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n  tsIsExternalModuleReference() {\n    return this.isContextual(117) && this.lookaheadCharCode() === 40;\n  }\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(117);\n    this.expect(10);\n    if (!this.match(131)) {\n      this.unexpected();\n    }\n    node.expression = super.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n    let starttype = this.state.type;\n    let kind;\n    if (this.isContextual(99)) {\n      starttype = 74;\n      kind = \"let\";\n    }\n    return this.tsInAmbientContext(() => {\n      if (starttype === 68) {\n        nany.declare = true;\n        return super.parseFunctionStatement(nany, false, false);\n      }\n      if (starttype === 80) {\n        nany.declare = true;\n        return this.parseClass(nany, true, false);\n      }\n      if (starttype === 124) {\n        return this.tsParseEnumDeclaration(nany, {\n          declare: true\n        });\n      }\n      if (starttype === 110) {\n        return this.tsParseAmbientExternalModuleDeclaration(nany);\n      }\n      if (starttype === 75 || starttype === 74) {\n        if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\n          nany.declare = true;\n          return this.parseVarStatement(nany, kind || this.state.value, true);\n        }\n        this.expect(75);\n        return this.tsParseEnumDeclaration(nany, {\n          const: true,\n          declare: true\n        });\n      }\n      if (starttype === 127) {\n        const result = this.tsParseInterfaceDeclaration(nany, {\n          declare: true\n        });\n        if (result) return result;\n      }\n      if (tokenIsIdentifier(starttype)) {\n        return this.tsParseDeclaration(nany, this.state.value, true, null);\n      }\n    });\n  }\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true, null);\n  }\n  tsParseExpressionStatement(node, expr, decorators) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n        break;\n      default:\n        return this.tsParseDeclaration(node, expr.name, false, decorators);\n    }\n  }\n  tsParseDeclaration(node, value, next, decorators) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node, decorators);\n        }\n        break;\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(131)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n        break;\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n        break;\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n        break;\n    }\n  }\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n    return !this.isLineTerminator();\n  }\n  tsTryParseGenericAsyncArrowFunction(startLoc) {\n    if (!this.match(47)) {\n      return undefined;\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startLoc);\n      node.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    if (!res) {\n      return undefined;\n    }\n    return super.parseArrowExpression(res, null, true);\n  }\n  tsParseTypeArgumentsInExpression() {\n    if (this.reScan_lt() !== 47) {\n      return undefined;\n    }\n    return this.tsParseTypeArguments();\n  }\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(47);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeArguments, {\n        at: node\n      });\n    }\n    this.expect(48);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n  parseAssignableListItem(flags, decorators) {\n    const startLoc = this.state.startLoc;\n    const modified = {};\n    this.tsParseModifiers({\n      allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\n    }, modified);\n    const accessibility = modified.accessibility;\n    const override = modified.override;\n    const readonly = modified.readonly;\n    if (!(flags & 4) && (accessibility || readonly || override)) {\n      this.raise(TSErrors.UnexpectedParameterModifier, {\n        at: startLoc\n      });\n    }\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startLoc);\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, {\n          at: pp\n        });\n      }\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  isSimpleParameter(node) {\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\n  }\n  tsDisallowOptionalPattern(node) {\n    for (const param of node.params) {\n      if (param.type !== \"Identifier\" && param.optional && !this.state.isAmbientContext) {\n        this.raise(TSErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n    }\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    this.tsDisallowOptionalPattern(node);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      return this.finishNode(node, bodilessType);\n    }\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(TSErrors.DeclareFunctionHasImplementation, {\n        at: node\n      });\n      if (node.declare) {\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n      }\n    }\n    this.tsDisallowOptionalPattern(node);\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(node);\n    }\n  }\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(TSErrors.UnexpectedTypeAnnotation, {\n          at: node.typeAnnotation\n        });\n      }\n    });\n  }\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n    let isOptionalCall = false;\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n    if (this.match(47) || this.match(51)) {\n      let missingParenErrorLoc;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startLoc);\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n        if (!typeArguments) return;\n        if (isOptionalCall && !this.match(10)) {\n          missingParenErrorLoc = this.state.curPosition();\n          return;\n        }\n        if (tokenIsTemplate(this.state.type)) {\n          const result = super.parseTaggedTemplateExpression(base, startLoc, state);\n          result.typeParameters = typeArguments;\n          return result;\n        }\n        if (!noCalls && this.eat(10)) {\n          const node = this.startNodeAt(startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          this.tsCheckForInvalidTypeCasts(node.arguments);\n          node.typeParameters = typeArguments;\n          if (state.optionalChainMember) {\n            node.optional = isOptionalCall;\n          }\n          return this.finishCallExpression(node, state.optionalChainMember);\n        }\n        const tokenType = this.state.type;\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\n          return;\n        }\n        const node = this.startNodeAt(startLoc);\n        node.expression = base;\n        node.typeParameters = typeArguments;\n        return this.finishNode(node, \"TSInstantiationExpression\");\n      });\n      if (missingParenErrorLoc) {\n        this.unexpected(missingParenErrorLoc, 10);\n      }\n      if (result) {\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, {\n            at: this.state.startLoc\n          });\n        }\n        return result;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, state);\n  }\n  parseNewCallee(node) {\n    var _callee$extra;\n    super.parseNewCallee(node);\n    const {\n      callee\n    } = node;\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\n      node.typeParameters = callee.typeParameters;\n      node.callee = callee.expression;\n    }\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    let isSatisfies;\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (isSatisfies = this.isContextual(118)))) {\n      const node = this.startNodeAt(leftStartLoc);\n      node.expression = left;\n      node.typeAnnotation = this.tsInType(() => {\n        this.next();\n        if (this.match(75)) {\n          if (isSatisfies) {\n            this.raise(Errors.UnexpectedKeyword, {\n              at: this.state.startLoc,\n              keyword: \"const\"\n            });\n          }\n          return this.tsParseTypeReference();\n        }\n        return this.tsParseType();\n      });\n      this.finishNode(node, isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartLoc, minPrec);\n    }\n    return super.parseExprOp(left, leftStartLoc, minPrec);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (!this.state.isAmbientContext) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(TSErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  checkDuplicateExports() {}\n  parseImport(node) {\n    node.importKind = \"value\";\n    if (tokenIsIdentifier(this.state.type) || this.match(55) || this.match(5)) {\n      let ahead = this.lookahead();\n      if (this.isContextual(128) && ahead.type !== 12 && ahead.type !== 97 && ahead.type !== 29) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n    const importNode = super.parseImport(node);\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n        at: importNode\n      });\n    }\n    return importNode;\n  }\n  parseExport(node, decorators) {\n    if (this.match(83)) {\n      this.next();\n      if (this.isContextual(128) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = super.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(93)) {\n      const decl = node;\n      this.expectContextual(126);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      node.exportKind = \"value\";\n      if (this.isContextual(128)) {\n        const ch = this.lookaheadCharCode();\n        if (ch === 123 || ch === 42) {\n          this.next();\n          node.exportKind = \"type\";\n        }\n      }\n      return super.parseExport(node, decorators);\n    }\n  }\n  isAbstractClass() {\n    return this.isContextual(122) && this.lookahead().type === 80;\n  }\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      return this.parseClass(cls, true, true);\n    }\n    if (this.match(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    const {\n      isAmbientContext\n    } = this.state;\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\n    if (!isAmbientContext) return declaration;\n    for (const {\n      id,\n      init\n    } of declaration.declarations) {\n      if (!init) continue;\n      if (kind !== \"const\" || !!id.typeAnnotation) {\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n          at: init\n        });\n      } else if (!isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))) {\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, {\n          at: init\n        });\n      }\n    }\n    return declaration;\n  }\n  parseStatementContent(flags, decorators) {\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\n      const node = this.startNode();\n      this.expect(75);\n      return this.tsParseEnumDeclaration(node, {\n        const: true\n      });\n    }\n    if (this.isContextual(124)) {\n      return this.tsParseEnumDeclaration(this.startNode());\n    }\n    if (this.isContextual(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseStatementContent(flags, decorators);\n  }\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n      return !!member[modifier];\n    });\n  }\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(104) && this.lookaheadCharCode() === 123;\n  }\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers({\n      allowedModifiers: modifiers,\n      disallowedModifiers: [\"in\", \"out\"],\n      stopOnStartOfClassStaticBlock: true,\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    }, member);\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n            at: this.state.curPosition()\n          });\n        }\n        super.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n    if (idx) {\n      classBody.body.push(idx);\n      if (member.abstract) {\n        this.raise(TSErrors.IndexSignatureHasAbstract, {\n          at: member\n        });\n      }\n      if (member.accessibility) {\n        this.raise(TSErrors.IndexSignatureHasAccessibility, {\n          at: member,\n          modifier: member.accessibility\n        });\n      }\n      if (member.declare) {\n        this.raise(TSErrors.IndexSignatureHasDeclare, {\n          at: member\n        });\n      }\n      if (member.override) {\n        this.raise(TSErrors.IndexSignatureHasOverride, {\n          at: member\n        });\n      }\n      return;\n    }\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n        at: member\n      });\n    }\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(TSErrors.OverrideNotInSubClass, {\n          at: member\n        });\n      }\n    }\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasReadonly, {\n        at: methodOrProp\n      });\n    }\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasDeclare, {\n        at: methodOrProp\n      });\n    }\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr, decorators) : undefined;\n    return decl || super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\n    }\n    const result = this.tryParse(() => super.parseConditional(expr, startLoc));\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n      return expr;\n    }\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n    return node;\n  }\n  parseExportDeclaration(node) {\n    if (!this.state.isAmbientContext && this.isContextual(123)) {\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n    }\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(123);\n    if (isDeclare && (this.isContextual(123) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n        at: this.state.startLoc\n      });\n    }\n    const isIdentifier = tokenIsIdentifier(this.state.type);\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\n    if (!declaration) return null;\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\n      node.exportKind = \"type\";\n    }\n    if (isDeclare) {\n      this.resetStartLocation(declaration, startLoc);\n      declaration.declare = true;\n    }\n    return declaration;\n  }\n  parseClassId(node, isStatement, optionalId, bindingType) {\n    if ((!isStatement || optionalId) && this.isContextual(111)) {\n      return;\n    }\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional) {\n      if (this.eat(35)) {\n        node.definite = true;\n      } else if (this.eat(17)) {\n        node.optional = true;\n      }\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n        at: this.state.startLoc\n      });\n    }\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(TSErrors.AbstractPropertyHasInitializer, {\n        at: this.state.startLoc,\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n      });\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(TSErrors.PrivateElementHasAbstract, {\n        at: node\n      });\n    }\n    if (node.accessibility) {\n      this.raise(TSErrors.PrivateElementHasAccessibility, {\n        at: node,\n        modifier: node.accessibility\n      });\n    }\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n  parseClassAccessorProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (node.optional) {\n      this.raise(TSErrors.AccessorCannotBeOptional, {\n        at: node\n      });\n    }\n    return super.parseClassAccessorProperty(node);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters && isConstructor) {\n      this.raise(TSErrors.ConstructorHasTypeParameters, {\n        at: typeParameters\n      });\n    }\n    const {\n      declare = false,\n      kind\n    } = method;\n    if (declare && (kind === \"get\" || kind === \"set\")) {\n      this.raise(TSErrors.DeclareAccessor, {\n        at: method,\n        kind\n      });\n    }\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && (this.match(47) || this.match(51))) {\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n    }\n    if (this.eatContextual(111)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) prop.typeParameters = typeParameters;\n    return super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n  }\n  parseFunctionParams(node, isConstructor) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\n      decl.definite = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n    let state;\n    let jsx;\n    let typeCast;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n    if (!state || state === this.state) state = this.state.clone();\n    let typeParameters;\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n      typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n    if (node.params.length === 1 && !node.params[0].constraint && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedArrowTypeParam, {\n        at: node\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n    return super.parseArrow(node);\n  }\n  parseAssignableListItemTypes(param, flags) {\n    if (!(flags & 2)) return param;\n    if (this.eat(17)) {\n      param.optional = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n      case \"TSParameterProperty\":\n        return true;\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.toAssignableParenthesizedExpression(node, isLHS);\n        break;\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        if (isLHS) {\n          this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        } else {\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        }\n        this.toAssignable(node.expression, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n          node.left = this.typeCastToParameter(node.left);\n        }\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isLHS);\n        break;\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSTypeAssertion\":\n      case \"TSNonNullExpression\":\n        this.checkToRestConversion(node.expression, false);\n        break;\n      default:\n        super.checkToRestConversion(node, allowPattern);\n    }\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn({\n      TSTypeCastExpression: true,\n      TSParameterProperty: \"parameter\",\n      TSNonNullExpression: \"expression\",\n      TSAsExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSSatisfiesExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSTypeAssertion: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true]\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n      this.unexpected(null, 10);\n    }\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n      return false;\n    } else {\n      return super.checkCommaAfterRest(close);\n    }\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(TSErrors.TypeAnnotationAfterAssign, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        this.finishOp(48, 1);\n        return;\n      }\n      if (code === 60) {\n        this.finishOp(47, 1);\n        return;\n      }\n    }\n    super.getTokenFromCode(code);\n  }\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n    if (type === 47) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 48) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n  reScan_lt() {\n    const {\n      type\n    } = this.state;\n    if (type === 51) {\n      this.state.pos -= 2;\n      this.finishOp(47, 1);\n      return 47;\n    }\n    return type;\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n    return super.shouldParseArrow(params);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n    return param;\n  }\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n  parseClass(node, isStatement, optionalId) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n    try {\n      return super.parseClass(node, isStatement, optionalId);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n  tsParseAbstractDeclaration(node, decorators) {\n    if (this.match(80)) {\n      node.abstract = true;\n      return this.maybeTakeDecorators(decorators, this.parseClass(node, true, false));\n    } else if (this.isContextual(127)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n          at: node\n        });\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 80);\n    }\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(TSErrors.AbstractMethodHasImplementation, {\n          at: method,\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n        });\n      }\n    }\n    return method;\n  }\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.parse();\n  }\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.getExpression();\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n  }\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const loc = leftOfAs.loc.start;\n    if (this.isContextual(93)) {\n      const firstAs = this.parseIdentifier();\n      if (this.isContextual(93)) {\n        const secondAs = this.parseIdentifier();\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      if (isImport) {\n        leftOfAs = this.parseIdentifier(true);\n        if (!this.isContextual(93)) {\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\n        }\n      } else {\n        leftOfAs = this.parseModuleExportName();\n      }\n    }\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, {\n        at: loc\n      });\n    }\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n    if (canParseAsKeyword && this.eatContextual(93)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n    if (isImport) {\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n    }\n  }\n};\nfunction isPossiblyLiteralEnum(expression) {\n  if (expression.type !== \"MemberExpression\") return false;\n  const {\n    computed,\n    property\n  } = expression;\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nfunction isValidAmbientConstInitializer(expression, estree) {\n  var _expression$extra;\n  const {\n    type\n  } = expression;\n  if ((_expression$extra = expression.extra) != null && _expression$extra.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const {\n        value\n      } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\nfunction isNumber(expression, estree) {\n  if (estree) {\n    return expression.type === \"Literal\" && (typeof expression.value === \"number\" || \"bigint\" in expression);\n  } else {\n    return expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\";\n  }\n}\nfunction isNegativeNumber(expression, estree) {\n  if (expression.type === \"UnaryExpression\") {\n    const {\n      operator,\n      argument\n    } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUncomputedMemberExpressionChain(expression) {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\n});\nvar placeholders = superClass => class PlaceholdersParserMixin extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(142)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace();\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace();\n      this.expect(142);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      this.finishOp(142, 2);\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\n  }\n  parseIdentifier(liberal) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word !== undefined) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  toAssignable(node, isLHS) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (super.chStartsBindingIdentifier(ch, pos)) {\n      return true;\n    }\n    const nextToken = this.lookahead();\n    if (nextToken.type === 142) {\n      return true;\n    }\n    return false;\n  }\n  verifyBreakContinue(node, isBreak) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(node, isBreak);\n  }\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(node, expr);\n    }\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\n  }\n  parseFunctionId(requireId) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\n  }\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (placeholder) {\n      if (this.match(81) || this.match(142) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n          at: this.state.startLoc\n        });\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n    super.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n  parseExport(node, decorators) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(node, decorators);\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node, decorators);\n  }\n  isExportDefaultSpecifier() {\n    if (this.match(65)) {\n      const next = this.nextTokenStart();\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(142), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n    return super.maybeParseExportDefaultSpecifier(node);\n  }\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(node);\n    node.specifiers = [];\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n    this.expectContextual(97);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\n  }\n  assertNoSpace() {\n    if (this.state.start > this.state.lastTokEndLoc.index) {\n      this.raise(PlaceholderErrors.UnexpectedSpace, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n  }\n};\nvar v8intrinsic = superClass => class V8IntrinsicMixin extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(54)) {\n      const v8IntrinsicStartLoc = this.state.startLoc;\n      const node = this.startNode();\n      this.next();\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName();\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n      this.unexpected(v8IntrinsicStartLoc);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\n  }\n};\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return plugin[1][option];\n  }\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean, if specified.\");\n    }\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, {\n          at: key\n        });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, {\n            at: key\n          });\n        }\n      }\n      protoRef.used = true;\n    }\n  }\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(137)) {\n      this.unexpected();\n    }\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n  parseExpressionBase(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(12)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$loc;\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(106)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const {\n      type\n    } = this.state;\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      if (this.match(29)) {\n        this.toAssignable(left, true);\n        node.left = left;\n        const startIndex = startLoc.index;\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startIndex) {\n          refExpressionErrors.doubleProtoLoc = null;\n        }\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startIndex) {\n          refExpressionErrors.shorthandAssignLoc = null;\n        }\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startIndex) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null;\n        }\n      } else {\n        node.left = left;\n      }\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\")\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    return left;\n  }\n  parseMaybeConditional(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(136) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n  parseExprOps(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value\n        });\n      }\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === 39) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 41 || op === 42;\n        const coalesce = op === 40;\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(42);\n        }\n        this.next();\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc\n            });\n          }\n        }\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n  parseExprOpRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case 39:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(106)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startLoc);\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n  parseExprOpBaseRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n  parseHackPipeBody() {\n    var _body$extra;\n    const {\n      startLoc\n    } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipeTopicUnused, {\n        at: startLoc\n      });\n    }\n    return body;\n  }\n  checkExponentialAfterUnary(node) {\n    if (this.match(57)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(96);\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(34);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n      if (this.match(72)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(89);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, {\n            at: node\n          });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, {\n            at: node\n          });\n        }\n      }\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, {\n          at: startLoc\n        });\n        return this.parseAwait(startLoc);\n      }\n    }\n    return expr;\n  }\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      const updateExpressionNode = node;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\n      });\n      return node;\n    }\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: expr = this.finishNode(node, \"UpdateExpression\")\n      });\n    }\n    return expr;\n  }\n  parseExprSubscripts(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseSubscripts(expr, startLoc);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n    let optional = false;\n    if (type === 18) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc\n        });\n        if (this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n  parseMember(base, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(136)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, {\n          at: startLoc\n        });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n  parseBind(base, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startLoc, noCalls);\n  }\n  parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    const node = this.startNodeAt(startLoc);\n    node.callee = base;\n    const {\n      maybeAsyncArrow,\n      optionalChainMember\n    } = state;\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc), finishedNode);\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return finishedNode;\n  }\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n  parseTaggedTemplateExpression(base, startLoc, state) {\n    const node = this.startNodeAt(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, {\n        at: startLoc\n      });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount: this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, {\n              at: arg\n            });\n          }\n        }\n      }\n    }\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n  parseNoCallExpr() {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    let decorators = null;\n    const {\n      type\n    } = this.state;\n    switch (type) {\n      case 79:\n        return this.parseSuper();\n      case 83:\n        node = this.startNode();\n        this.next();\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n        if (!this.match(10)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case 78:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n      case 90:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n      case 56:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n      case 132:\n        return this.parseNumericLiteral(this.state.value);\n      case 133:\n        return this.parseBigIntLiteral(this.state.value);\n      case 134:\n        return this.parseDecimalLiteral(this.state.value);\n      case 131:\n        return this.parseStringLiteral(this.state.value);\n      case 84:\n        return this.parseNullLiteral();\n      case 85:\n        return this.parseBooleanLiteral(true);\n      case 86:\n        return this.parseBooleanLiteral(false);\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n      case 68:\n        return this.parseFunctionOrFunctionSent();\n      case 26:\n        decorators = this.parseDecorators();\n      case 80:\n        return this.parseClass(this.maybeTakeDecorators(decorators, this.startNode()), false);\n      case 77:\n        return this.parseNewOrNewTarget();\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(Errors.UnsupportedBind, {\n              at: callee\n            });\n          }\n        }\n      case 136:\n        {\n          this.raise(Errors.PrivateInExpectedIn, {\n            at: this.state.startLoc,\n            identifierName: this.state.value\n          });\n          return this.parsePrivateName();\n        }\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\n        }\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\n        }\n      case 37:\n      case 38:\n        {\n          return this.parseTopicReference(\"hack\");\n        }\n      case 44:\n      case 54:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          }\n          this.unexpected();\n          break;\n        }\n      case 47:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          } else {\n            this.unexpected();\n          }\n          break;\n        }\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(125) && this.lookaheadInLineCharCode() === 123) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n            if (type === 68) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 90) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, {\n          at: startLoc\n        });\n      }\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType)\n      });\n    }\n  }\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n      case \"smart\":\n        return tokenType === 27;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, {\n          at: startLoc\n        });\n    }\n  }\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition()\n      });\n    }\n    this.expect(19);\n    return this.parseArrowExpression(node, params, true);\n  }\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.SuperNotAllowed, {\n        at: node\n      });\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.UnexpectedSuper, {\n        at: node\n      });\n    }\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(Errors.UnsupportedSuper, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"Super\");\n  }\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc, 1));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      if (this.match(102)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName\n      });\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n    if (this.isContextual(100)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, {\n          at: id\n        });\n      }\n      this.sawUnambiguousESM = true;\n    }\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\n        if (this.match(11)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n      if (this.match(21)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc));\n        if (!this.checkCommaAfterRest(41)) {\n          break;\n        }\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startLoc);\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n    return this.wrapParenthesis(startLoc, val);\n  }\n  wrapParenthesis(startLoc, expression) {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n      this.takeSurroundingComments(expression, startLoc.index, this.state.lastTokEndLoc.index);\n      return expression;\n    }\n    const parenExpression = this.startNodeAt(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n  parseParenItem(node, startLoc) {\n    return node;\n  }\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction) {\n        this.raise(Errors.UnexpectedNewTarget, {\n          at: metaProp\n        });\n      }\n      return metaProp;\n    }\n    return this.parseNew(node);\n  }\n  parseNew(node) {\n    this.parseNewCallee(node);\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n    return this.finishNode(node, \"NewExpression\");\n  }\n  parseNewCallee(node) {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, {\n        at: node.callee\n      });\n    }\n  }\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      startLoc,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(createPositionWithColumnOffset(startLoc, 1));\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          at: createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1)\n        });\n      }\n    }\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return finishedNode;\n  }\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(Errors.InvalidRecordProperty, {\n          at: prop\n        });\n      }\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n      node.properties.push(prop);\n    }\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n  addTrailingCommaExtraToNode(node) {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\n  }\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc\n        });\n      }\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n    prop.method = false;\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n    let isGenerator = this.eat(55);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(55);\n        this.parsePropertyName(prop);\n      }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(55)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n    return this.parseObjPropValue(prop, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n  checkGetterSetterParams(method) {\n    var _params;\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length !== paramCount) {\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: method\n      });\n    }\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: method\n      });\n    }\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc\n          });\n        }\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n  parsePropertyName(prop, refExpressionErrors) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 132:\n            key = this.parseNumericLiteral(value);\n            break;\n          case 131:\n            key = this.parseStringLiteral(value);\n            break;\n          case 133:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case 134:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case 136:\n            {\n              const privateKeyLoc = this.state.startLoc;\n              if (refExpressionErrors != null) {\n                if (refExpressionErrors.privateKeyLoc === null) {\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\n                }\n              } else {\n                this.raise(Errors.UnexpectedPrivateField, {\n                  at: privateKeyLoc\n                });\n              }\n              key = this.parsePrivateName();\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      prop.key = key;\n      if (type !== 136) {\n        prop.computed = false;\n      }\n    }\n    return prop.key;\n  }\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return finishedNode;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    if (!this.match(5) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n        if (hasStrictModeDirective && nonSimple) {\n          this.raise(Errors.IllegalLanguageModeDirective, {\n            at: (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node\n          });\n        }\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n        if (this.state.strict && node.id) {\n          this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n  isSimpleParameter(node) {\n    return node.type === \"Identifier\";\n  }\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = !allowDuplicates && new Set();\n    const formalParameters = {\n      type: \"FormalParameters\"\n    };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged\n      });\n    }\n  }\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\"\n        });\n      }\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n    return elt;\n  }\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(liberal);\n    return this.createIdentifier(node, name);\n  }\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n  parseIdentifierName(liberal) {\n    let name;\n    const {\n      startLoc,\n      type\n    } = this.state;\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(130);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n    this.next();\n    return name;\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word\n      });\n      return;\n    }\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc\n        });\n        return;\n      }\n      this.expressionScope.recordAsyncArrowParametersError({\n        at: startLoc\n      });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, {\n          at: startLoc\n        });\n        return;\n      }\n    }\n  }\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n  parseAwait(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, {\n      at: node\n    });\n    if (this.eat(55)) {\n      this.raise(Errors.ObsoleteAwaitStar, {\n        at: node\n      });\n    }\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 101 && !this.state.containsEsc || type === 135 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\n  }\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, {\n      at: node\n    });\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(55);\n      switch (this.state.type) {\n        case 13:\n        case 137:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc\n        });\n      }\n    }\n  }\n  parseSmartPipelineBodyInStyle(childExpr, startLoc) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\n    if (this.match(19)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, {\n        at: this.state.startLoc\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, {\n        at: startLoc\n      });\n    }\n  }\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n  parseFSharpPipelineBody(prec) {\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    if (!this.match(5)) {\n      this.unexpected(null, 5);\n    }\n    const program = this.startNodeAt(this.state.endLoc);\n    this.next();\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n  parsePropertyNamePrefixOperator(prop) {}\n}\nconst loopLabel = {\n    kind: \"loop\"\n  },\n  switchLabel = {\n    kind: \"switch\"\n  };\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n    if (typeof type === \"number\") {\n      {\n        if (type === 136) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(130),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n    return this.finishNode(file, \"File\");\n  }\n  parseProgram(program, end = 137, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, {\n          at,\n          localName\n        });\n      }\n    }\n    let finishedProgram;\n    if (end === 137) {\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      finishedProgram = this.finishNodeAt(program, \"Program\", createPositionWithColumnOffset(this.state.startLoc, -1));\n    }\n    return finishedProgram;\n  }\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n  isLet() {\n    if (!this.isContextual(99)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === 92) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  chStartsBindingPattern(ch) {\n    return ch === 91 || ch === 123;\n  }\n  hasFollowingBindingAtom() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingPattern(nextCh) || this.chStartsBindingIdentifier(nextCh, next);\n  }\n  hasInLineFollowingBindingIdentifier() {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n  startsUsingForOf() {\n    const {\n      type,\n      containsEsc\n    } = this.lookahead();\n    if (type === 101 && !containsEsc) {\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n  parseModuleItem() {\n    return this.parseStatementLike(1 | 2 | 4 | 8);\n  }\n  parseStatementListItem() {\n    return this.parseStatementLike(2 | 4 | (!this.options.annexB || this.state.strict ? 0 : 8));\n  }\n  parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction = false) {\n    let flags = 0;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= 4;\n      if (allowLabeledFunction) {\n        flags |= 8;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n  parseStatement() {\n    return this.parseStatementLike(0);\n  }\n  parseStatementLike(flags) {\n    let decorators = null;\n    if (this.match(26)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n  parseStatementContent(flags, decorators) {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & 2);\n    const allowFunctionDeclaration = !!(flags & 4);\n    const topLevel = flags & 1;\n    switch (starttype) {\n      case 60:\n        return this.parseBreakContinueStatement(node, true);\n      case 63:\n        return this.parseBreakContinueStatement(node, false);\n      case 64:\n        return this.parseDebuggerStatement(node);\n      case 90:\n        return this.parseDoWhileStatement(node);\n      case 91:\n        return this.parseForStatement(node);\n      case 68:\n        if (this.lookaheadCharCode() === 46) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(this.state.strict ? Errors.StrictFunction : this.options.annexB ? Errors.SloppyFunctionAnnexB : Errors.SloppyFunction, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseFunctionStatement(node, false, !allowDeclaration && allowFunctionDeclaration);\n      case 80:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(this.maybeTakeDecorators(decorators, node), true);\n      case 69:\n        return this.parseIfStatement(node);\n      case 70:\n        return this.parseReturnStatement(node);\n      case 71:\n        return this.parseSwitchStatement(node);\n      case 72:\n        return this.parseThrowStatement(node);\n      case 73:\n        return this.parseTryStatement(node);\n      case 105:\n        if (this.state.containsEsc || !this.hasInLineFollowingBindingIdentifier()) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseVarStatement(node, \"using\");\n      case 99:\n        {\n          if (this.state.containsEsc) {\n            break;\n          }\n          const next = this.nextTokenStart();\n          const nextCh = this.codePointAtPos(next);\n          if (nextCh !== 91) {\n            if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n            if (!this.chStartsBindingIdentifier(nextCh, next) && nextCh !== 123) {\n              break;\n            }\n          }\n        }\n      case 75:\n        {\n          if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: this.state.startLoc\n            });\n          }\n        }\n      case 74:\n        {\n          const kind = this.state.value;\n          return this.parseVarStatement(node, kind);\n        }\n      case 92:\n        return this.parseWhileStatement(node);\n      case 76:\n        return this.parseWithStatement(node);\n      case 5:\n        return this.parseBlock();\n      case 13:\n        return this.parseEmptyStatement(node);\n      case 83:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n      case 82:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(Errors.UnexpectedImportExport, {\n              at: this.state.startLoc\n            });\n          }\n          this.next();\n          let result;\n          if (starttype === 83) {\n            result = this.parseImport(node);\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node, decorators);\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n          this.assertModuleNodeAllowed(result);\n          return result;\n        }\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (!allowDeclaration) {\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n                at: this.state.startLoc\n              });\n            }\n            this.next();\n            return this.parseFunctionStatement(node, true, !allowDeclaration && allowFunctionDeclaration);\n          }\n        }\n    }\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, flags);\n    } else {\n      return this.parseExpressionStatement(node, expr, decorators);\n    }\n  }\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, {\n        at: node\n      });\n    }\n  }\n  decoratorsEnabledBeforeExport() {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false;\n  }\n  maybeTakeDecorators(maybeDecorators, classNode, exportNode) {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        if (typeof this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== \"boolean\") {\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0]\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n  canHaveLeadingDecorator() {\n    return this.match(80);\n  }\n  parseDecorators(allowExport) {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(26));\n    if (this.match(82)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, {\n          at: this.state.startLoc\n        });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    return decorators;\n  }\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n    const node = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr;\n      if (this.match(10)) {\n        const startLoc = this.state.startLoc;\n        this.next();\n        expr = this.parseExpression();\n        this.expect(11);\n        expr = this.wrapParenthesis(startLoc, expr);\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(136)) {\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n    return expr;\n  }\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n  verifyBreakContinue(node, isBreak) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, {\n        at: node,\n        type\n      });\n    }\n  }\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n  parseDoWhileStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    this.expect(92);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = null;\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n    if (this.match(13)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n    const startsWithLet = this.isContextual(99);\n    const startsWithUsing = this.isContextual(105);\n    const isLetOrUsing = startsWithLet && this.hasFollowingBindingAtom() || startsWithUsing && this.startsUsingForOf();\n    if (this.match(74) || this.match(75) || isLetOrUsing) {\n      const initNode = this.startNode();\n      const kind = this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n      const isForIn = this.match(58);\n      if (isForIn && startsWithUsing) {\n        this.raise(Errors.ForInUsing, {\n          at: init\n        });\n      }\n      if ((isForIn || this.isContextual(101)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n    const startsWithAsync = this.isContextual(95);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(101);\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, {\n          at: init\n        });\n      }\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(Errors.ForOfAsync, {\n          at: init\n        });\n      }\n    }\n    if (isForOf || this.match(58)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, {\n        in: {\n          type\n        }\n      });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n  parseFunctionStatement(node, isAsync, isHangingDeclaration) {\n    this.next();\n    return this.parseFunction(node, 1 | (isHangingDeclaration ? 2 : 0) | (isAsync ? 8 : 0));\n  }\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(61) || this.match(65)) {\n        const isCase = this.match(61);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n  parseThrowStatement(node) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    this.scope.enter(this.options.annexB && param.type === \"Identifier\" ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: {\n        type: \"CatchClause\"\n      },\n      binding: BIND_CATCH_PARAM\n    });\n    return param;\n  }\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.match(62)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"TryStatement\");\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    return this.finishNode(node, \"WithStatement\");\n  }\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n  parseLabeledStatement(node, maybeName, expr, flags) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName\n        });\n      }\n    }\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(71) ? \"switch\" : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = flags & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true) : this.parseStatement();\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(5);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n    while (!this.match(end)) {\n      const stmt = topLevel ? this.parseModuleItem() : this.parseStatementListItem();\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n          continue;\n        }\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n    this.next();\n  }\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(58);\n    this.next();\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || !this.options.annexB || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\n      });\n    }\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: {\n          type: \"ForStatement\"\n        }\n      });\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\n    const declarations = node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      if (decl.init === null && !allowMissingInitializer) {\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(101)))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\"\n          });\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(101))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\"\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n    return node;\n  }\n  parseVarId(decl, kind) {\n    if (kind === \"using\" && !this.inModule && this.match(96)) {\n      this.raise(Errors.AwaitInUsingBinding, {\n        at: this.state.startLoc\n      });\n    }\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: {\n        type: \"VariableDeclarator\"\n      },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL\n    });\n    decl.id = id;\n  }\n  parseAsyncFunctionExpression(node) {\n    return this.parseFunction(node, 8);\n  }\n  parseFunction(node, flags = 0) {\n    const hangingDeclaration = flags & 2;\n    const isDeclaration = !!(flags & 1);\n    const requireId = isDeclaration && !(flags & 4);\n    const isAsync = !!(flags & 8);\n    this.initFunction(node, isAsync);\n    if (this.match(55)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc\n        });\n      }\n      this.next();\n      node.generator = true;\n    }\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n    if (isDeclaration && !hangingDeclaration) {\n      this.registerFunctionStatementId(node);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n  parseFunctionParams(node, isConstructor) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, 2 | (isConstructor ? 4 : 0));\n    this.expressionScope.exit();\n  }\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, !this.options.annexB || this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.loc.start);\n  }\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n  isClassMethod() {\n    return this.match(10);\n  }\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc\n            });\n          }\n          continue;\n        }\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n        const member = this.startNode();\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n        this.parseClassMember(classBody, member, state);\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(Errors.DecoratorConstructor, {\n            at: member\n          });\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(104);\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const accessorProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n    if (this.eat(55)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(136);\n      this.parseClassElementName(method);\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key\n        });\n      }\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(136);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n    this.parsePostMemberNameModifiers(publicMember);\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, {\n            at: key\n          });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, {\n            at: key\n          });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(55);\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n      method.kind = \"method\";\n      const isPrivate = this.match(136);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicMethod);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n      this.checkGetterSetterParams(publicMethod);\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n  parseClassElementName(member) {\n    const {\n      type,\n      value\n    } = this.state;\n    if ((type === 130 || type === 131) && member.static && value === \"prototype\") {\n      this.raise(Errors.StaticPrototype, {\n        at: this.state.startLoc\n      });\n    }\n    if (type === 136) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n    return this.parsePropertyName(member);\n  }\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(Errors.DecoratorStaticBlock, {\n        at: member\n      });\n    }\n  }\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(Errors.ConstructorClassField, {\n        at: prop.key\n      });\n    }\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n  }\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\n    if (!isPrivate && !prop.computed) {\n      const key = prop.key;\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        this.raise(Errors.ConstructorClassField, {\n          at: key\n        });\n      }\n    }\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n    if (isPrivate) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n    }\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {}\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n  parseClassAccessorProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, {\n          at: this.state.startLoc\n        });\n      }\n    }\n  }\n  parseClassSuper(node) {\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\n  }\n  parseExport(node, decorators) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, 5);\n    }\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, 97);\n    }\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      var _node2$declaration;\n      const node2 = node;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (((_node2$declaration = node2.declaration) == null ? void 0 : _node2$declaration.type) === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n    if (this.eat(65)) {\n      const node2 = node;\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.checkExport(node2, true, true);\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n    this.unexpected(null, 5);\n  }\n  eatExportStar(node) {\n    return this.eat(55);\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(93)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n  isAsyncFunction() {\n    if (!this.isContextual(95)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    if (this.match(68)) {\n      this.next();\n      return this.parseFunction(expr, 1 | 4);\n    } else if (this.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(expr, 1 | 4 | 8);\n    }\n    if (this.match(80)) {\n      return this.parseClass(expr, true, true);\n    }\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n        this.raise(Errors.DecoratorBeforeExport, {\n          at: this.state.startLoc\n        });\n      }\n      return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false), this.startNode()), true, true);\n    }\n    if (this.match(75) || this.match(74) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc\n      });\n    }\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n  parseExportDeclaration(node) {\n    if (this.match(80)) {\n      const node = this.parseClass(this.startNode(), true, false);\n      return node;\n    }\n    return this.parseStatementListItem();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if (type === 95 && !this.state.containsEsc || type === 99) {\n        return false;\n      }\n      if ((type === 128 || type === 127) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n        if (tokenIsIdentifier(nextType) && nextType !== 97 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(65)) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n    if (this.match(65) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n    return false;\n  }\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(97)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n    this.semicolon();\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc\n          });\n        }\n        return true;\n      }\n    }\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\n  }\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n          const declaration = node.declaration;\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName\n              });\n            } else {\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n  checkDuplicateExports(node, exportName) {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, {\n          at: node\n        });\n      } else {\n        this.raise(Errors.DuplicateExport, {\n          at: node,\n          exportName\n        });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(128);\n      const isString = this.match(131);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n    return nodes;\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(93)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n  parseModuleExportName() {\n    if (this.match(131)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0)\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n  isJSONModuleImport(node) {\n    if (node.assertions != null) {\n      return node.assertions.some(({\n        key,\n        value\n      }) => {\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\n      });\n    }\n    return false;\n  }\n  checkImportReflection(node) {\n    if (node.module) {\n      var _node$assertions;\n      if (node.specifiers.length !== 1 || node.specifiers[0].type !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n      if (((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n    }\n  }\n  checkJSONModuleImport(node) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const {\n        specifiers\n      } = node;\n      if (specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start\n          });\n        }\n      }\n    }\n  }\n  parseMaybeImportReflection(node) {\n    let isImportReflection = false;\n    if (this.isContextual(125)) {\n      const lookahead = this.lookahead();\n      const nextType = lookahead.type;\n      if (tokenIsIdentifier(nextType)) {\n        if (nextType !== 97) {\n          isImportReflection = true;\n        } else {\n          const nextNextTokenFirstChar = this.input.charCodeAt(this.nextTokenStartSince(lookahead.end));\n          if (nextNextTokenFirstChar === 102) {\n            isImportReflection = true;\n          }\n        }\n      } else if (nextType !== 12) {\n        isImportReflection = true;\n      }\n    }\n    if (isImportReflection) {\n      this.expectPlugin(\"importReflection\");\n      this.next();\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n  }\n  parseImport(node) {\n    node.specifiers = [];\n    if (!this.match(131)) {\n      this.parseMaybeImportReflection(node);\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(97);\n    }\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    if (!this.match(131)) this.unexpected();\n    return this.parseExprAtom();\n  }\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  finishImportSpecifier(specifier, type, bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      in: {\n        type\n      },\n      binding: bindingType\n    });\n    return this.finishNode(specifier, type);\n  }\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n    do {\n      if (this.match(8)) {\n        break;\n      }\n      const node = this.startNode();\n      const keyName = this.state.value;\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(131)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseModuleAttributes() {\n    if (this.match(76) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key\n        });\n      }\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseImportAssertions() {\n    if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(55)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(93);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc\n          });\n        }\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const specifier = this.startNode();\n      const importedIsString = this.match(131);\n      const isMaybeTypeOnly = this.isContextual(128);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (this.eatContextual(93)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\n  }\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\nfunction parse(input, options) {\n  var _options;\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\nconst tokTypes = generateExportedTokenTypes(tt);\nfunction getParser(options, input) {\n  let cls = Parser;\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n  return new cls(options, input);\n}\nconst parserClassCache = {};\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n// https://tc39.es/ecma262/#sec-execution-contexts\nexport class ExecutionContext {\n  constructor() {\n    _defineProperty(this, \"VariableEnvironment\", void 0);\n    _defineProperty(this, \"LexicalEnvironment\", void 0);\n    _defineProperty(this, \"Function\", void 0);\n  }\n}\n// https://tc39.es/ecma262/#sec-environment-records\nexport class EnvironmentRecord {\n  constructor(outer) {\n    _defineProperty(this, \"OuterEnv\", void 0);\n    _defineProperty(this, \"bindingMap\", new Map());\n    this.OuterEnv = outer;\n  }\n  HasBinding(name) {\n    return this.bindingMap.has(name);\n  }\n  CreateMutableBinding(name, deletable) {\n    // Assert: binding does not exist.\n    this.bindingMap.set(name, {\n      mutable: true,\n      deletable\n    });\n    return NormalCompletion(undefined);\n  }\n\n  /**\n   * Create an immutable binding.\n   *\n   * @param name - The binding name.\n   * @param strict - For named function expressions, strict is false, otherwise it's true.\n   * @returns CompletionRecord.\n   */\n  CreateImmutableBinding(name, strict) {\n    // Assert: binding does not exist.\n    this.bindingMap.set(name, {\n      strict\n    });\n    return NormalCompletion(undefined);\n  }\n  InitializeBinding(name, value) {\n    var binding = this.bindingMap.get(name);\n    // Assert: binding exists and uninitialized.\n    Object.assign(binding, {\n      initialized: true,\n      value\n    });\n    return NormalCompletion(undefined);\n  }\n\n  /**\n   * Update a mutable binding value, including function declarations.\n   *\n   * @param name - The binding name.\n   * @param value - The binding value.\n   * @param strict - For functions, strict is always false, otherwise it depends on strict-mode.\n   * @returns\n   */\n  SetMutableBinding(name, value, strict) {\n    var binding = this.bindingMap.get(name);\n    // Assert: binding exists.\n    if (!binding.initialized) {\n      throw new ReferenceError(\"\".concat(name, \" is not initialized\"));\n    } else if (binding.mutable) {\n      binding.value = value;\n    } else {\n      throw new TypeError(\"Assignment to constant variable\");\n    }\n    return NormalCompletion(undefined);\n  }\n  GetBindingValue(name, strict) {\n    var binding = this.bindingMap.get(name);\n    // Assert: binding exists.\n    if (!binding.initialized) {\n      throw new ReferenceError(\"\".concat(name, \" is not initialized\"));\n    }\n    return binding.value;\n  }\n}\nexport class DeclarativeEnvironment extends EnvironmentRecord {}\nexport class FunctionEnvironment extends EnvironmentRecord {}\nexport var SourceNode = Symbol.for(\"SourceNode\");\nexport var FormalParameters = Symbol.for(\"FormalParameters\");\nexport var ECMAScriptCode = Symbol.for(\"ECMAScriptCode\");\nexport var Environment = Symbol.for(\"Environment\");\nexport var IsConstructor = Symbol.for(\"IsConstructor\");\n// https://tc39.es/ecma262/#sec-reference-record-specification-type\nexport class ReferenceRecord {\n  /** Whether the reference is in strict mode. */\n\n  constructor(base, referenceName, strict) {\n    _defineProperty(this, \"Base\", void 0);\n    _defineProperty(this, \"ReferenceName\", void 0);\n    _defineProperty(this, \"Strict\", void 0);\n    this.Base = base;\n    this.ReferenceName = referenceName;\n    this.Strict = strict;\n  }\n}\n\n// https://tc39.es/ecma262/#sec-completion-record-specification-type\nexport class CompletionRecord {\n  constructor(type, value) {\n    _defineProperty(this, \"Type\", void 0);\n    _defineProperty(this, \"Value\", void 0);\n    this.Type = type;\n    this.Value = value;\n  }\n}\n// https://tc39.es/ecma262/#sec-normalcompletion\nexport function NormalCompletion(value) {\n  return new CompletionRecord(\"normal\", value);\n}\nexport var Empty = Symbol(\"empty completion\");\n//# sourceMappingURL=ExecutionContext.js.map","export function collectBoundNames(root) {\n  var names = new Set();\n  var collect = node => {\n    if (Array.isArray(node)) {\n      for (var n of node) {\n        collect(n);\n      }\n    } else if (node) {\n      // `node` maybe `null` in some cases.\n      switch (node.type) {\n        case \"Identifier\":\n          names.add(node.name);\n          return;\n        case \"VariableDeclaration\":\n          return collect(node.declarations);\n        case \"VariableDeclarator\":\n          return collect(node.id);\n        case \"ArrayPattern\":\n          return collect(node.elements);\n        case \"AssignmentPattern\":\n          return collect(node.left);\n        case \"ObjectPattern\":\n          return collect(node.properties);\n        case \"Property\":\n          return collect(node.value);\n        case \"RestElement\":\n          return collect(node.argument);\n        case \"FunctionDeclaration\":\n          return collect(node.id);\n      }\n    }\n  };\n  collect(root);\n  return Array.from(names);\n}\nexport function containsExpression(root) {\n  var collect = node => {\n    if (Array.isArray(node)) {\n      return node.some(collect);\n    } else if (node) {\n      // `node` maybe `null` in some cases.\n      switch (node.type) {\n        case \"ArrayPattern\":\n          return collect(node.elements);\n        case \"AssignmentPattern\":\n          return true;\n        case \"ObjectPattern\":\n          return collect(node.properties);\n        case \"Property\":\n          return node.computed || collect(node.value);\n        case \"RestElement\":\n          return collect(node.argument);\n      }\n    }\n  };\n  return collect(root);\n}\nexport function collectScopedDeclarations(root, options) {\n  var declarations = [];\n  var nextOptions = {\n    var: options.var\n  };\n  var collect = (node, options) => {\n    if (Array.isArray(node)) {\n      for (var n of node) {\n        collect(n, options);\n      }\n    } else if (node) {\n      // `node` maybe `null` in some cases.\n      switch (node.type) {\n        case \"FunctionDeclaration\":\n          // At the top level of a function, or script, function declarations are\n          // treated like var declarations rather than like lexical declarations.\n          // See https://tc39.es/ecma262/#sec-static-semantics-toplevellexicallydeclarednames\n          if (Number(!options.var) ^ Number(options.topLevel)) {\n            declarations.push(node);\n          }\n          return;\n        case \"VariableDeclaration\":\n          if (Number(!options.var) ^ Number(node.kind === \"var\")) {\n            declarations.push(node);\n          }\n          return;\n        case \"SwitchCase\":\n          collect(node.consequent, nextOptions);\n          return;\n        case \"CatchClause\":\n          collect(node.body, nextOptions);\n          return;\n      }\n      if (options.var) {\n        switch (node.type) {\n          case \"BlockStatement\":\n            collect(node.body, nextOptions);\n            return;\n          case \"IfStatement\":\n            collect(node.consequent, nextOptions);\n            collect(node.alternate, nextOptions);\n            return;\n          case \"DoWhileStatement\":\n          case \"WhileStatement\":\n            collect(node.body, nextOptions);\n            return;\n          case \"ForStatement\":\n            collect(node.init, nextOptions);\n            collect(node.body, nextOptions);\n            return;\n          case \"ForInStatement\":\n          case \"ForOfStatement\":\n            collect(node.left, nextOptions);\n            collect(node.body, nextOptions);\n            return;\n          case \"SwitchStatement\":\n            collect(node.cases, nextOptions);\n            return;\n          case \"TryStatement\":\n            collect(node.block, nextOptions);\n            collect(node.handler, nextOptions);\n            collect(node.finalizer, nextOptions);\n            return;\n        }\n      }\n    }\n  };\n  collect(root, options);\n  return declarations;\n}\n//# sourceMappingURL=traverse.js.map","import { CompletionRecord, Empty, EnvironmentRecord, NormalCompletion, ReferenceRecord } from \"./ExecutionContext.js\";\nimport { collectBoundNames } from \"./traverse.js\";\n\n// https://tc39.es/ecma262/#sec-ispropertyreference\nexport function IsPropertyReference(V) {\n  return V.Base !== \"unresolvable\" && !(V.Base instanceof EnvironmentRecord);\n}\n\n// https://tc39.es/ecma262/#sec-initializereferencedbinding\nexport function InitializeReferencedBinding(V, W) {\n  var base = V.Base;\n  return base.InitializeBinding(V.ReferenceName, W);\n}\n\n// https://tc39.es/ecma262/#sec-copydataproperties\nexport function CopyDataProperties(target, source, excludedItems) {\n  if (source === undefined || source === null) {\n    return target;\n  }\n  var keys = Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source));\n  for (var nextKey of keys) {\n    if (!excludedItems.has(nextKey)) {\n      var desc = Object.getOwnPropertyDescriptor(source, nextKey);\n      if (desc !== null && desc !== void 0 && desc.enumerable) {\n        target[nextKey] = source[nextKey];\n      }\n    }\n  }\n  return target;\n}\n\n// https://tc39.es/ecma262/#sec-runtime-semantics-fordeclarationbindinginstantiation\nexport function ForDeclarationBindingInstantiation(forDeclaration, env) {\n  var isConst = forDeclaration.kind === \"const\";\n  for (var name of collectBoundNames(forDeclaration)) {\n    if (isConst) {\n      env.CreateImmutableBinding(name, true);\n    } else {\n      env.CreateMutableBinding(name, false);\n    }\n  }\n}\n\n// https://tc39.es/ecma262/#sec-loopcontinues\nexport function LoopContinues(completion) {\n  return completion.Type === \"normal\" || completion.Type == \"continue\";\n}\n\n// https://tc39.es/ecma262/#sec-updateempty\nexport function UpdateEmpty(completion, value) {\n  if (completion.Value !== Empty) {\n    return completion;\n  }\n  return new CompletionRecord(completion.Type, value);\n}\n\n// https://tc39.es/ecma262/#sec-getvalue\nexport function GetValue(V) {\n  if (V instanceof CompletionRecord) {\n    // Assert: V.Type is normal.\n    V = V.Value;\n  }\n  if (!(V instanceof ReferenceRecord)) {\n    return V;\n  }\n  if (V.Base === \"unresolvable\") {\n    throw new ReferenceError(\"\".concat(V.ReferenceName, \" is not defined\"));\n  }\n  if (V.Base instanceof EnvironmentRecord) {\n    var base = V.Base;\n    return base.GetBindingValue(V.ReferenceName, V.Strict);\n  }\n  return V.Base[V.ReferenceName];\n}\n\n// https://tc39.es/ecma262/#sec-topropertykey\nexport function ToPropertyKey(arg) {\n  if (typeof arg === \"symbol\") {\n    return arg;\n  }\n  return String(arg);\n}\n\n// https://tc39.es/ecma262/#sec-getv\nexport function GetV(V, P) {\n  return V[P];\n}\n\n// https://tc39.es/ecma262/#sec-putvalue\nexport function PutValue(V, W) {\n  // Assert: V is a ReferenceRecord.\n  if (V.Base === \"unresolvable\") {\n    throw new ReferenceError(\"\".concat(V.ReferenceName, \" is not defined\"));\n  }\n  if (V.Base instanceof EnvironmentRecord) {\n    return V.Base.SetMutableBinding(V.ReferenceName, W, V.Strict);\n  }\n  V.Base[V.ReferenceName] = W;\n  return NormalCompletion(undefined);\n}\n\n// https://tc39.es/ecma262/#sec-createlistiteratorRecord\nexport function CreateListIteratorRecord(args) {\n  if (!isIterable(args)) {\n    throw new TypeError(\"\".concat(typeof args, \" is not iterable\"));\n  }\n  return args[Symbol.iterator]();\n}\n\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nexport function RequireObjectCoercible(arg) {\n  if (arg === null || arg === undefined) {\n    throw new TypeError(\"Cannot destructure properties of undefined or null\");\n  }\n}\n\n// https://tc39.es/ecma262/#sec-getidentifierreference\nexport function GetIdentifierReference(env, name, strict) {\n  if (!env) {\n    return new ReferenceRecord(\"unresolvable\", name, strict);\n  }\n  if (env.HasBinding(name)) {\n    return new ReferenceRecord(env, name, strict);\n  }\n  return GetIdentifierReference(env.OuterEnv, name, strict);\n}\n\n// https://tc39.es/ecma262/#sec-applystringornumericbinaryoperator\nexport function ApplyStringOrNumericBinaryOperator(leftValue, operator, rightValue) {\n  switch (operator) {\n    case \"+\":\n      return leftValue + rightValue;\n    case \"-\":\n      return leftValue - rightValue;\n    case \"/\":\n      return leftValue / rightValue;\n    case \"%\":\n      return leftValue % rightValue;\n    case \"*\":\n      return leftValue * rightValue;\n    case \"**\":\n      return leftValue ** rightValue;\n    case \"==\":\n      return leftValue == rightValue;\n    case \"===\":\n      return leftValue === rightValue;\n    case \"!=\":\n      return leftValue != rightValue;\n    case \"!==\":\n      return leftValue !== rightValue;\n    case \">\":\n      return leftValue > rightValue;\n    case \"<\":\n      return leftValue < rightValue;\n    case \">=\":\n      return leftValue >= rightValue;\n    case \"<=\":\n      return leftValue <= rightValue;\n  }\n  throw new SyntaxError(\"Unsupported binary operator `\".concat(operator, \"`\"));\n}\n\n// https://tc39.es/ecma262/#sec-assignment-operators\nexport function ApplyStringOrNumericAssignment(leftValue, operator, rightValue) {\n  switch (operator) {\n    case \"+=\":\n    case \"-=\":\n    case \"*=\":\n    case \"/=\":\n    case \"%=\":\n    case \"**=\":\n      return ApplyStringOrNumericBinaryOperator(leftValue, operator.substr(0, operator.length - 1), rightValue);\n  }\n  throw new SyntaxError(\"Unsupported assignment operator `\".concat(operator, \"`\"));\n}\n\n// https://tc39.es/ecma262/#sec-unary-operators\nexport function ApplyUnaryOperator(target, operator) {\n  switch (operator) {\n    case \"!\":\n      return !target;\n    case \"+\":\n      return +target;\n    case \"-\":\n      return -target;\n    case \"void\":\n      return undefined;\n  }\n  throw new SyntaxError(\"Unsupported unary operator `\".concat(operator, \"`\"));\n}\nexport function isIterable(cooked) {\n  if (Array.isArray(cooked)) {\n    return true;\n  }\n  if (cooked === null || cooked === undefined) {\n    return false;\n  }\n  return typeof cooked[Symbol.iterator] === \"function\";\n}\n//# sourceMappingURL=context-free.js.map","// Ref https://github.com/tc39/proposal-global\n// In addition, the es6-shim had to switch from Function('return this')()\n// due to CSP concerns, such that the current check to handle browsers,\n// node, web workers, and frames is:\n// istanbul ignore next\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw new Error(\"unable to locate global object\");\n}\n\n/**\n * There are chances to construct a `Function` from a string, etc.\n * ```\n * ((a,b)=>a[b])(()=>1, 'constructor')('console.log(`yo`)')()\n * ```\n */\nvar reservedObjects = new WeakSet([\n// `Function(\"...\")` is considered *extremely vulnerable*.\nFunction,\n// `Object.assign()` is considered vulnerable.\nObject,\n// `prototype` is considered vulnerable.\nFunction.prototype, Object.prototype,\n// Global `window` is considered vulnerable, too.\ngetGlobal()]);\nexport function sanitize(cooked) {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  if (reservedObjects.has(cooked)) {\n    throw new TypeError(\"Cannot access reserved objects such as `Function`.\");\n  }\n}\nvar allowedConstructors = new WeakSet([Array, Map, Set, URLSearchParams, WeakMap, WeakSet]);\nexport function isAllowedConstructor(constructor) {\n  // `Date` maybe mocked when running tests for storyboard functions.\n  return allowedConstructors.has(constructor) || constructor === Date;\n}\n//# sourceMappingURL=sanitize.js.map","import { ApplyStringOrNumericAssignment, CreateListIteratorRecord, ApplyStringOrNumericBinaryOperator, GetV, GetValue, InitializeReferencedBinding, IsPropertyReference, LoopContinues, PutValue, RequireObjectCoercible, ToPropertyKey, UpdateEmpty, ApplyUnaryOperator, GetIdentifierReference, ForDeclarationBindingInstantiation, CopyDataProperties } from \"./context-free.js\";\nimport { CompletionRecord, DeclarativeEnvironment, ECMAScriptCode, Empty, Environment, ExecutionContext, FormalParameters, FunctionEnvironment, IsConstructor, NormalCompletion, ReferenceRecord, SourceNode } from \"./ExecutionContext.js\";\nimport { sanitize, isAllowedConstructor } from \"./sanitize.js\";\nimport { collectBoundNames, collectScopedDeclarations, containsExpression } from \"./traverse.js\";\n/** For next-core internal usage only. */\nexport function cook(rootAst, codeSource) {\n  var _hooks$beforeEvaluate3;\n  var {\n    rules,\n    globalVariables = {},\n    hooks = {}\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var expressionOnly = rootAst.type !== \"FunctionDeclaration\";\n  var rootEnv = new DeclarativeEnvironment(null);\n  var rootContext = new ExecutionContext();\n  rootContext.VariableEnvironment = rootEnv;\n  rootContext.LexicalEnvironment = rootEnv;\n  var executionContextStack = [rootContext];\n  for (var [key, value] of Object.entries(globalVariables)) {\n    rootEnv.CreateImmutableBinding(key, true);\n    rootEnv.InitializeBinding(key, value);\n  }\n  var TemplateMap = new WeakMap();\n\n  // https://tc39.es/ecma262/#sec-gettemplateobject\n  function GetTemplateObject(templateLiteral) {\n    var memo = TemplateMap.get(templateLiteral);\n    if (memo) {\n      return memo;\n    }\n    var rawObj = templateLiteral.quasis.map(quasi => quasi.value.raw);\n    var template = templateLiteral.quasis.map(quasi => quasi.value.cooked);\n    Object.freeze(rawObj);\n    Object.defineProperty(template, \"raw\", {\n      value: rawObj,\n      writable: false,\n      enumerable: false,\n      configurable: false\n    });\n    Object.freeze(template);\n    TemplateMap.set(templateLiteral, template);\n    return template;\n  }\n  function Evaluate(node, optionalChainRef) {\n    var _hooks$beforeEvaluate, _hooks$beforeBranch, _hooks$beforeBranch2;\n    (_hooks$beforeEvaluate = hooks.beforeEvaluate) === null || _hooks$beforeEvaluate === void 0 ? void 0 : _hooks$beforeEvaluate.call(hooks, node);\n    // Expressions:\n    switch (node.type) {\n      case \"ArrayExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-array-initializer\n          var array = [];\n          for (var element of node.elements) {\n            if (!element) {\n              array.length += 1;\n            } else if (element.type === \"SpreadElement\") {\n              var spreadValues = GetValue(Evaluate(element.argument));\n              array.push(...spreadValues);\n            } else {\n              array.push(GetValue(Evaluate(element)));\n            }\n          }\n          return NormalCompletion(array);\n        }\n      case \"ArrowFunctionExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-arrow-function-definitions\n          ThrowIfFunctionIsInvalid(node);\n          var closure = InstantiateArrowFunctionExpression(node);\n          return NormalCompletion(closure);\n        }\n      case \"BinaryExpression\":\n        {\n          var leftRef = Evaluate(node.left);\n          var leftValue = GetValue(leftRef);\n          var rightRef = Evaluate(node.right).Value;\n          var rightValue = GetValue(rightRef);\n          if (expressionOnly && node.operator === \"|>\") {\n            // Minimal pipeline operator is supported only in expression-only mode.\n            // See https://tc39.es/proposal-pipeline-operator\n            // and https://github.com/tc39/proposal-pipeline-operator\n            if (typeof rightValue !== \"function\") {\n              var funcName = codeSource.substring(node.right.start, node.right.end);\n              throw new TypeError(\"\".concat(funcName, \" is not a function\"));\n            }\n            var thisValue;\n            if (rightRef instanceof ReferenceRecord) {\n              if (IsPropertyReference(rightRef)) {\n                thisValue = rightRef.Base;\n              }\n            }\n            return NormalCompletion(rightValue.call(thisValue, leftValue));\n          }\n          // https://tc39.es/ecma262/#sec-additive-operators\n          var result = ApplyStringOrNumericBinaryOperator(leftValue, node.operator, rightValue);\n          return NormalCompletion(result);\n        }\n      case \"CallExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-function-calls\n          var ref = Evaluate(node.callee, optionalChainRef).Value;\n          var func = GetValue(ref);\n          if ((func === undefined || func === null) && (node.optional || optionalChainRef !== null && optionalChainRef !== void 0 && optionalChainRef.skipped)) {\n            optionalChainRef.skipped = true;\n            return NormalCompletion(undefined);\n          }\n          sanitize(func);\n          return EvaluateCall(func, ref, node.arguments, node.callee);\n        }\n      case \"ChainExpression\":\n        // https://tc39.es/ecma262/#sec-optional-chains\n        return Evaluate(node.expression, {});\n      case \"ConditionalExpression\":\n        // https://tc39.es/ecma262/#sec-conditional-operator\n        return NormalCompletion(GetValue(Evaluate(GetValue(Evaluate(node.test)) ? node.consequent : node.alternate)));\n      case \"Identifier\":\n        // https://tc39.es/ecma262/#sec-identifiers\n        return NormalCompletion(ResolveBinding(node.name));\n      case \"Literal\":\n        {\n          // https://tc39.es/ecma262/#sec-primary-expression-literals\n          if (node.regex) {\n            if (node.value === null) {\n              // Invalid regular expression fails silently in @babel/parser.\n              throw new SyntaxError(\"Invalid regular expression: \".concat(node.raw));\n            }\n            if (node.regex.flags.includes(\"u\")) {\n              // Currently unicode flag is not fully supported across major browsers.\n              throw new SyntaxError(\"Unsupported unicode flag in regular expression: \".concat(node.raw));\n            }\n          }\n          return NormalCompletion(node.value);\n        }\n      case \"LogicalExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-binary-logical-operators\n          var _leftValue = GetValue(Evaluate(node.left));\n          switch (node.operator) {\n            case \"&&\":\n              return NormalCompletion(_leftValue && GetValue(Evaluate(node.right)));\n            case \"||\":\n              return NormalCompletion(_leftValue || GetValue(Evaluate(node.right)));\n            case \"??\":\n              return NormalCompletion(_leftValue !== null && _leftValue !== void 0 ? _leftValue : GetValue(Evaluate(node.right)));\n            // istanbul ignore next\n            default:\n              throw new SyntaxError( // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore never reach here.\n              \"Unsupported logical operator '\".concat(node.operator, \"'\"));\n          }\n        }\n      case \"MemberExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-property-accessors\n          var baseReference = Evaluate(node.object, optionalChainRef).Value;\n          var baseValue = GetValue(baseReference);\n          if ((baseValue === undefined || baseValue === null) && (node.optional || optionalChainRef !== null && optionalChainRef !== void 0 && optionalChainRef.skipped)) {\n            optionalChainRef.skipped = true;\n            return NormalCompletion(undefined);\n          }\n          sanitize(baseValue);\n          var _result = node.computed ? EvaluatePropertyAccessWithExpressionKey(baseValue, node.property, true) : EvaluatePropertyAccessWithIdentifierKey(baseValue, node.property, true);\n          sanitize(_result);\n          return NormalCompletion(_result);\n        }\n      case \"NewExpression\":\n        // https://tc39.es/ecma262/#sec-new-operator\n        return EvaluateNew(node.callee, node.arguments);\n      case \"ObjectExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-object-initializer\n          var object = {};\n          for (var prop of node.properties) {\n            if (prop.type === \"SpreadElement\") {\n              var fromValue = GetValue(Evaluate(prop.argument));\n              CopyDataProperties(object, fromValue, new Set());\n            } else {\n              if (prop.kind !== \"init\") {\n                throw new SyntaxError(\"Unsupported object getter/setter\");\n              }\n              var propName = !prop.computed && prop.key.type === \"Identifier\" ? prop.key.name : EvaluateComputedPropertyName(prop.key);\n              if (propName === \"__proto__\") {\n                throw new TypeError(\"Setting '__proto__' property is not allowed\");\n              }\n              object[propName] = GetValue(Evaluate(prop.value));\n            }\n          }\n          return NormalCompletion(object);\n        }\n      case \"SequenceExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-comma-operator\n          var _result2;\n          for (var expr of node.expressions) {\n            _result2 = NormalCompletion(GetValue(Evaluate(expr)));\n          }\n          return _result2;\n        }\n      case \"TemplateLiteral\":\n        {\n          // https://tc39.es/ecma262/#sec-template-literals\n          var chunks = [node.quasis[0].value.cooked];\n          var index = 0;\n          for (var _expr of node.expressions) {\n            var val = GetValue(Evaluate(_expr));\n            chunks.push(String(val));\n            chunks.push(node.quasis[index += 1].value.cooked);\n          }\n          return NormalCompletion(chunks.join(\"\"));\n        }\n      case \"TaggedTemplateExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-tagged-templates\n          var tagRef = Evaluate(node.tag).Value;\n          var tagFunc = GetValue(tagRef);\n          sanitize(tagFunc);\n          return EvaluateCall(tagFunc, tagRef, node.quasi, node.tag);\n        }\n      case \"UnaryExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-unary-operators\n          var _ref = Evaluate(node.argument).Value;\n          if (!expressionOnly && node.operator === \"delete\") {\n            // Delete operator is supported only in function mode.\n            if (!(_ref instanceof ReferenceRecord)) {\n              return NormalCompletion(true);\n            }\n            // istanbul ignore else\n            if (IsPropertyReference(_ref)) {\n              var deleteStatus = delete _ref.Base[_ref.ReferenceName];\n              return NormalCompletion(deleteStatus);\n            }\n            // Should never reach here in strict mode.\n          }\n\n          if (node.operator === \"typeof\") {\n            if (_ref instanceof ReferenceRecord && _ref.Base === \"unresolvable\") {\n              return NormalCompletion(\"undefined\");\n            }\n            return NormalCompletion(typeof GetValue(_ref));\n          }\n          return NormalCompletion(ApplyUnaryOperator(GetValue(_ref), node.operator));\n        }\n    }\n    if (!expressionOnly) {\n      // Statements and assignments:\n      switch (node.type) {\n        case \"AssignmentExpression\":\n          {\n            // https://tc39.es/ecma262/#sec-assignment-operators\n            if (node.operator === \"=\") {\n              if (!(node.left.type === \"ArrayPattern\" || node.left.type === \"ObjectPattern\")) {\n                var _lref = Evaluate(node.left).Value;\n                // Todo: IsAnonymousFunctionDefinition(lref)\n                var _rref = Evaluate(node.right);\n                var _rval = GetValue(_rref);\n                PutValue(_lref, _rval);\n                return NormalCompletion(_rval);\n              }\n              var _rref2 = Evaluate(node.right);\n              var _rval2 = GetValue(_rref2);\n              DestructuringAssignmentEvaluation(node.left, _rval2);\n              return NormalCompletion(_rval2);\n            }\n            // Operators other than `=`.\n            var lref = Evaluate(node.left).Value;\n            var lval = GetValue(lref);\n            var rref = Evaluate(node.right);\n            var rval = GetValue(rref);\n            var r = ApplyStringOrNumericAssignment(lval, node.operator, rval);\n            PutValue(lref, r);\n            return NormalCompletion(r);\n          }\n        case \"BlockStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-block\n            if (!node.body.length) {\n              return NormalCompletion(Empty);\n            }\n            var oldEnv = getRunningContext().LexicalEnvironment;\n            var blockEnv = new DeclarativeEnvironment(oldEnv);\n            BlockDeclarationInstantiation(node.body, blockEnv);\n            getRunningContext().LexicalEnvironment = blockEnv;\n            var blockValue = EvaluateStatementList(node.body);\n            getRunningContext().LexicalEnvironment = oldEnv;\n            return blockValue;\n          }\n        case \"BreakStatement\":\n          // https://tc39.es/ecma262/#sec-break-statement\n          return new CompletionRecord(\"break\", Empty);\n        case \"ContinueStatement\":\n          // https://tc39.es/ecma262/#sec-continue-statement\n          return new CompletionRecord(\"continue\", Empty);\n        case \"EmptyStatement\":\n          // https://tc39.es/ecma262/#sec-empty-statement\n          return NormalCompletion(Empty);\n        case \"DoWhileStatement\":\n          // https://tc39.es/ecma262/#sec-do-while-statement\n          return EvaluateBreakableStatement(DoWhileLoopEvaluation(node));\n        case \"ExpressionStatement\":\n        case \"TSAsExpression\":\n          // https://tc39.es/ecma262/#sec-expression-statement\n          return Evaluate(node.expression);\n        case \"ForInStatement\":\n        case \"ForOfStatement\":\n          // https://tc39.es/ecma262/#sec-for-in-and-for-of-statements\n          return EvaluateBreakableStatement(ForInOfLoopEvaluation(node));\n        case \"ForStatement\":\n          // https://tc39.es/ecma262/#sec-for-statement\n          return EvaluateBreakableStatement(ForLoopEvaluation(node));\n        case \"FunctionDeclaration\":\n          // https://tc39.es/ecma262/#sec-function-definitions\n          return NormalCompletion(Empty);\n        case \"FunctionExpression\":\n          // https://tc39.es/ecma262/#sec-function-defining-expressions\n          ThrowIfFunctionIsInvalid(node);\n          return NormalCompletion(InstantiateOrdinaryFunctionExpression(node));\n        case \"IfStatement\":\n          // https://tc39.es/ecma262/#sec-if-statement\n          return GetValue(Evaluate(node.test)) ? ((_hooks$beforeBranch = hooks.beforeBranch) !== null && _hooks$beforeBranch !== void 0 && _hooks$beforeBranch.call(hooks, node, \"if\"), UpdateEmpty(Evaluate(node.consequent), undefined)) : ((_hooks$beforeBranch2 = hooks.beforeBranch) !== null && _hooks$beforeBranch2 !== void 0 && _hooks$beforeBranch2.call(hooks, node, \"else\"), node.alternate) ? UpdateEmpty(Evaluate(node.alternate), undefined) : NormalCompletion(undefined);\n        case \"ReturnStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-return-statement\n            var v;\n            if (node.argument) {\n              var exprRef = Evaluate(node.argument);\n              v = GetValue(exprRef);\n            }\n            return new CompletionRecord(\"return\", v);\n          }\n        case \"ThrowStatement\":\n          // https://tc39.es/ecma262/#sec-throw-statement\n          throw GetValue(Evaluate(node.argument));\n        case \"UpdateExpression\":\n          {\n            // https://tc39.es/ecma262/#sec-update-expressions\n            var lhs = Evaluate(node.argument).Value;\n            var oldValue = Number(GetValue(lhs));\n            var newValue = node.operator === \"++\" ? oldValue + 1 : oldValue - 1;\n            PutValue(lhs, newValue);\n            return NormalCompletion(node.prefix ? newValue : oldValue);\n          }\n        case \"SwitchCase\":\n          return EvaluateStatementList(node.consequent);\n        case \"SwitchStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-switch-statement\n            var _exprRef = Evaluate(node.discriminant);\n            var switchValue = GetValue(_exprRef);\n            var _oldEnv = getRunningContext().LexicalEnvironment;\n            var _blockEnv = new DeclarativeEnvironment(_oldEnv);\n            BlockDeclarationInstantiation(node.cases, _blockEnv);\n            getRunningContext().LexicalEnvironment = _blockEnv;\n            var R = CaseBlockEvaluation(node.cases, switchValue);\n            getRunningContext().LexicalEnvironment = _oldEnv;\n            return EvaluateBreakableStatement(R);\n          }\n        case \"TryStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-try-statement\n            var _R;\n            try {\n              _R = Evaluate(node.block);\n            } catch (error) {\n              if (node.handler) {\n                var _hooks$beforeEvaluate2;\n                (_hooks$beforeEvaluate2 = hooks.beforeEvaluate) === null || _hooks$beforeEvaluate2 === void 0 ? void 0 : _hooks$beforeEvaluate2.call(hooks, node.handler);\n                _R = CatchClauseEvaluation(node.handler, error);\n              } else {\n                throw error;\n              }\n            } finally {\n              if (node.finalizer) {\n                var F = Evaluate(node.finalizer);\n                if (F.Type !== \"normal\") {\n                  _R = F;\n                }\n              }\n            }\n            return _R;\n          }\n        case \"VariableDeclaration\":\n          {\n            // https://tc39.es/ecma262/#sec-declarations-and-the-variable-statement\n            var _result3;\n            for (var declarator of node.declarations) {\n              if (!declarator.init) {\n                // Assert: a declarator without init is always an identifier.\n                if (node.kind === \"var\") {\n                  _result3 = NormalCompletion(Empty);\n                } else {\n                  var _lhs = ResolveBinding(declarator.id.name);\n                  _result3 = InitializeReferencedBinding(_lhs, undefined);\n                }\n              } else if (declarator.id.type === \"Identifier\") {\n                var bindingId = declarator.id.name;\n                var _lhs2 = ResolveBinding(bindingId);\n                // Todo: IsAnonymousFunctionDefinition(Initializer)\n                var rhs = Evaluate(declarator.init);\n                var _value = GetValue(rhs);\n                _result3 = node.kind === \"var\" ? PutValue(_lhs2, _value) : InitializeReferencedBinding(_lhs2, _value);\n              } else {\n                var _rhs = Evaluate(declarator.init);\n                var _rval3 = GetValue(_rhs);\n                _result3 = BindingInitialization(declarator.id, _rval3, node.kind === \"var\" ? undefined : getRunningContext().LexicalEnvironment);\n              }\n            }\n            return _result3;\n          }\n        case \"WhileStatement\":\n          // https://tc39.es/ecma262/#sec-while-statement\n          return EvaluateBreakableStatement(WhileLoopEvaluation(node));\n      }\n    }\n    // eslint-disable-next-line no-console\n    throw new SyntaxError(\"Unsupported node type `\".concat(node.type, \"`\"));\n  }\n\n  // https://tc39.es/ecma262/#sec-execution-contexts\n  function getRunningContext() {\n    return executionContextStack[executionContextStack.length - 1];\n  }\n\n  // https://tc39.es/ecma262/#sec-resolvebinding\n  function ResolveBinding(name, env) {\n    if (!env) {\n      env = getRunningContext().LexicalEnvironment;\n    }\n    return GetIdentifierReference(env, name, true);\n  }\n\n  // Try statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-catchclauseevaluation\n  function CatchClauseEvaluation(node, thrownValue) {\n    if (!node.param) {\n      return Evaluate(node.body);\n    }\n    var oldEnv = getRunningContext().LexicalEnvironment;\n    var catchEnv = new DeclarativeEnvironment(oldEnv);\n    for (var argName of collectBoundNames(node.param)) {\n      catchEnv.CreateMutableBinding(argName, false);\n    }\n    getRunningContext().LexicalEnvironment = catchEnv;\n    BindingInitialization(node.param, thrownValue, catchEnv);\n    var B = Evaluate(node.body);\n    getRunningContext().LexicalEnvironment = oldEnv;\n    return B;\n  }\n\n  // Iteration statements and switch statements.\n  // https://tc39.es/ecma262/#prod-BreakableStatement\n  function EvaluateBreakableStatement(stmtResult) {\n    return stmtResult.Type === \"break\" ? stmtResult.Value === Empty ? NormalCompletion(undefined) : NormalCompletion(stmtResult.Value) : stmtResult;\n  }\n\n  // Switch statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-caseblockevaluation\n  function CaseBlockEvaluation(cases, input) {\n    var V;\n    var defaultCaseIndex = cases.findIndex(switchCase => !switchCase.test);\n    var hasDefaultCase = defaultCaseIndex >= 0;\n    var A = hasDefaultCase ? cases.slice(0, defaultCaseIndex) : cases;\n    var found = false;\n    for (var C of A) {\n      if (!found) {\n        found = CaseClauseIsSelected(C, input);\n      }\n      if (found) {\n        var _R2 = Evaluate(C);\n        if (_R2.Value !== Empty) {\n          V = _R2.Value;\n        }\n        if (_R2.Type !== \"normal\") {\n          return UpdateEmpty(_R2, V);\n        }\n      }\n    }\n    if (!hasDefaultCase) {\n      return NormalCompletion(V);\n    }\n    var foundInB = false;\n    var B = cases.slice(defaultCaseIndex + 1);\n    if (!found) {\n      for (var _C of B) {\n        if (!foundInB) {\n          foundInB = CaseClauseIsSelected(_C, input);\n        }\n        if (foundInB) {\n          var _R3 = Evaluate(_C);\n          if (_R3.Value !== Empty) {\n            V = _R3.Value;\n          }\n          if (_R3.Type !== \"normal\") {\n            return UpdateEmpty(_R3, V);\n          }\n        }\n      }\n    }\n    if (foundInB) {\n      return NormalCompletion(V);\n    }\n    var R = Evaluate(cases[defaultCaseIndex]);\n    if (R.Value !== Empty) {\n      V = R.Value;\n    }\n    if (R.Type !== \"normal\") {\n      return UpdateEmpty(R, V);\n    }\n\n    // NOTE: The following is another complete iteration of the second CaseClauses.\n    for (var _C2 of B) {\n      var _R4 = Evaluate(_C2);\n      if (_R4.Value !== Empty) {\n        V = _R4.Value;\n      }\n      if (_R4.Type !== \"normal\") {\n        return UpdateEmpty(_R4, V);\n      }\n    }\n    return NormalCompletion(V);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-caseclauseisselected\n  function CaseClauseIsSelected(C, input) {\n    var clauseSelector = GetValue(Evaluate(C.test));\n    return input === clauseSelector;\n  }\n\n  // While statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-whileloopevaluation\n  function WhileLoopEvaluation(node) {\n    var V;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var exprValue = GetValue(Evaluate(node.test));\n      if (!exprValue) {\n        return NormalCompletion(V);\n      }\n      var stmtResult = Evaluate(node.body);\n      if (!LoopContinues(stmtResult)) {\n        return UpdateEmpty(stmtResult, V);\n      }\n      if (stmtResult.Value !== Empty) {\n        V = stmtResult.Value;\n      }\n    }\n  }\n\n  // Do-while Statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-dowhileloopevaluation\n  function DoWhileLoopEvaluation(node) {\n    var V;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var stmtResult = Evaluate(node.body);\n      if (!LoopContinues(stmtResult)) {\n        return UpdateEmpty(stmtResult, V);\n      }\n      if (stmtResult.Value !== Empty) {\n        V = stmtResult.Value;\n      }\n      var exprValue = GetValue(Evaluate(node.test));\n      if (!exprValue) {\n        return NormalCompletion(V);\n      }\n    }\n  }\n\n  // For in/of statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-forinofloopevaluation\n  function ForInOfLoopEvaluation(node) {\n    var lhs = node.left;\n    var isVariableDeclaration = lhs.type === \"VariableDeclaration\";\n    var lhsKind = isVariableDeclaration ? lhs.kind === \"var\" ? \"varBinding\" : \"lexicalBinding\" : \"assignment\";\n    var uninitializedBoundNames = lhsKind === \"lexicalBinding\" ? collectBoundNames(lhs) : [];\n    var iterationKind = node.type === \"ForInStatement\" ? \"enumerate\" : \"iterate\";\n    var keyResult = ForInOfHeadEvaluation(uninitializedBoundNames, node.right, iterationKind);\n    if (keyResult.Type !== \"normal\") {\n      // When enumerate, if the target is nil, a break completion will be returned.\n      return keyResult;\n    }\n    return ForInOfBodyEvaluation(lhs, node.body, keyResult.Value, iterationKind, lhsKind);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-forinofheadevaluation\n  function ForInOfHeadEvaluation(uninitializedBoundNames, expr, iterationKind) {\n    var runningContext = getRunningContext();\n    var oldEnv = runningContext.LexicalEnvironment;\n    if (uninitializedBoundNames.length > 0) {\n      var newEnv = new DeclarativeEnvironment(oldEnv);\n      for (var name of uninitializedBoundNames) {\n        newEnv.CreateMutableBinding(name, false);\n      }\n      runningContext.LexicalEnvironment = newEnv;\n    }\n    var exprRef = Evaluate(expr);\n    runningContext.LexicalEnvironment = oldEnv;\n    var exprValue = GetValue(exprRef);\n    if (iterationKind === \"enumerate\") {\n      if (exprValue === null || exprValue === undefined) {\n        return new CompletionRecord(\"break\", Empty);\n      }\n      var _iterator = EnumerateObjectProperties(exprValue);\n      return NormalCompletion(_iterator);\n    }\n    var iterator = CreateListIteratorRecord(exprValue);\n    return NormalCompletion(iterator);\n  }\n  function ForInOfBodyEvaluation(node, stmt, iteratorRecord, iterationKind, lhsKind) {\n    var lhs = lhsKind === \"assignment\" ? node : node.declarations[0].id;\n    var oldEnv = getRunningContext().LexicalEnvironment;\n    var V;\n    // When `destructuring` is false,\n    // For `node` whose `kind` is assignment:\n    //   `lhs` is an `Identifier` or a `MemberExpression`,\n    // Otherwise:\n    //   `lhs` is an `Identifier`.\n    var destructuring = lhs.type === \"ObjectPattern\" || lhs.type === \"ArrayPattern\";\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var {\n        done,\n        value: nextValue\n      } = iteratorRecord.next();\n      if (done) {\n        return NormalCompletion(V);\n      }\n      var lhsRef = void 0;\n      var iterationEnv = void 0;\n      if (lhsKind === \"lexicalBinding\") {\n        iterationEnv = new DeclarativeEnvironment(oldEnv);\n        ForDeclarationBindingInstantiation(node, iterationEnv);\n        getRunningContext().LexicalEnvironment = iterationEnv;\n        if (!destructuring) {\n          var [lhsName] = collectBoundNames(lhs);\n          lhsRef = ResolveBinding(lhsName);\n        }\n      } else if (!destructuring) {\n        lhsRef = Evaluate(lhs).Value;\n      }\n      destructuring ? lhsKind === \"assignment\" ? DestructuringAssignmentEvaluation(lhs, nextValue) : lhsKind === \"varBinding\" ? BindingInitialization(lhs, nextValue, undefined) : BindingInitialization(lhs, nextValue, iterationEnv) : lhsKind === \"lexicalBinding\" ? InitializeReferencedBinding(lhsRef, nextValue) : PutValue(lhsRef, nextValue);\n      var result = Evaluate(stmt);\n      getRunningContext().LexicalEnvironment = oldEnv;\n      if (!LoopContinues(result)) {\n        var status = UpdateEmpty(result, V);\n        if (!(iterationKind === \"enumerate\" || iteratorRecord.return === undefined)) {\n          // Perform *IteratorClose*\n          // https://tc39.es/ecma262/#sec-iteratorclose\n          var innerResult = iteratorRecord.return();\n          if (!innerResult || ![\"object\", \"function\"].includes(typeof innerResult)) {\n            throw new TypeError(\"Iterator result is not an object\");\n          }\n        }\n        return status;\n      }\n      if (result.Value !== Empty) {\n        V = result.Value;\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-enumerate-object-properties\n  function* EnumerateObjectProperties(value) {\n    for (var _key in value) {\n      yield _key;\n    }\n  }\n\n  // For statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-forloopevaluation\n  function ForLoopEvaluation(node) {\n    var _node$init;\n    if (((_node$init = node.init) === null || _node$init === void 0 ? void 0 : _node$init.type) === \"VariableDeclaration\") {\n      // `for (var … ; … ; … ) …`\n      if (node.init.kind === \"var\") {\n        Evaluate(node.init);\n        return ForBodyEvaluation(node.test, node.update, node.body, []);\n      }\n      // `for (let/const … ; … ; … ) …`\n      var oldEnv = getRunningContext().LexicalEnvironment;\n      var loopEnv = new DeclarativeEnvironment(oldEnv);\n      var isConst = node.init.kind === \"const\";\n      var boundNames = collectBoundNames(node.init);\n      for (var dn of boundNames) {\n        if (isConst) {\n          loopEnv.CreateImmutableBinding(dn, true);\n        } else {\n          loopEnv.CreateMutableBinding(dn, false);\n        }\n      }\n      getRunningContext().LexicalEnvironment = loopEnv;\n      Evaluate(node.init);\n      var perIterationLets = isConst ? [] : Array.from(boundNames);\n      var bodyResult = ForBodyEvaluation(node.test, node.update, node.body, perIterationLets);\n      getRunningContext().LexicalEnvironment = oldEnv;\n      return bodyResult;\n    }\n    // `for ( … ; … ; … ) …`\n    if (node.init) {\n      var exprRef = Evaluate(node.init);\n      GetValue(exprRef);\n    }\n    return ForBodyEvaluation(node.test, node.update, node.body, []);\n  }\n\n  // https://tc39.es/ecma262/#sec-forbodyevaluation\n  function ForBodyEvaluation(test, increment, stmt, perIterationBindings) {\n    CreatePerIterationEnvironment(perIterationBindings);\n    var V;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if (test) {\n        var testRef = Evaluate(test);\n        var testValue = GetValue(testRef);\n        if (!testValue) {\n          return NormalCompletion(V);\n        }\n      }\n      var result = Evaluate(stmt);\n      if (!LoopContinues(result)) {\n        return UpdateEmpty(result, V);\n      }\n      if (result.Value) {\n        V = result.Value;\n      }\n      CreatePerIterationEnvironment(perIterationBindings);\n      if (increment) {\n        var incRef = Evaluate(increment);\n        GetValue(incRef);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-createperiterationenvironment\n  function CreatePerIterationEnvironment(perIterationBindings) {\n    if (perIterationBindings.length === 0) {\n      return;\n    }\n    var lastIterationEnv = getRunningContext().LexicalEnvironment;\n    var outer = lastIterationEnv.OuterEnv;\n    var thisIterationEnv = new DeclarativeEnvironment(outer);\n    for (var bn of perIterationBindings) {\n      thisIterationEnv.CreateMutableBinding(bn, false);\n      var lastValue = lastIterationEnv.GetBindingValue(bn, false);\n      thisIterationEnv.InitializeBinding(bn, lastValue);\n    }\n    getRunningContext().LexicalEnvironment = thisIterationEnv;\n  }\n\n  // Destructuring assignments.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-destructuringassignmentevaluation\n  function DestructuringAssignmentEvaluation(pattern, value) {\n    if (pattern.type === \"ObjectPattern\") {\n      RequireObjectCoercible(value);\n      if (pattern.properties.length > 0) {\n        PropertyDestructuringAssignmentEvaluation(pattern.properties, value);\n      }\n      return NormalCompletion(Empty);\n    }\n    var iteratorRecord = CreateListIteratorRecord(value);\n    return IteratorDestructuringAssignmentEvaluation(pattern.elements, iteratorRecord);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-propertydestructuringassignmentevaluation\n  function PropertyDestructuringAssignmentEvaluation(properties, value) {\n    var excludedNames = new Set();\n    for (var prop of properties) {\n      if (prop.type === \"Property\") {\n        var propName = !prop.computed && prop.key.type === \"Identifier\" ? prop.key.name : EvaluateComputedPropertyName(prop.key);\n        var valueTarget = prop.value.type === \"AssignmentPattern\" ? prop.value.left : prop.value;\n        if (valueTarget.type === \"Identifier\") {\n          var lref = ResolveBinding(valueTarget.name);\n          var v = GetV(value, propName);\n          if (prop.value.type === \"AssignmentPattern\" && v === undefined) {\n            // Todo(steve): check IsAnonymousFunctionDefinition(Initializer)\n            var defaultValue = Evaluate(prop.value.right);\n            v = GetValue(defaultValue);\n          }\n          PutValue(lref, v);\n          excludedNames.add(propName);\n        } else {\n          KeyedDestructuringAssignmentEvaluation(prop.value, value, propName);\n          excludedNames.add(propName);\n        }\n      } else {\n        RestDestructuringAssignmentEvaluation(prop, value, excludedNames);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-keyeddestructuringassignmentevaluation\n  function KeyedDestructuringAssignmentEvaluation(node, value, propertyName) {\n    var assignmentTarget = node.type === \"AssignmentPattern\" ? node.left : node;\n    var isObjectOrArray = assignmentTarget.type === \"ArrayPattern\" || assignmentTarget.type === \"ObjectPattern\";\n    var lref;\n    if (!isObjectOrArray) {\n      lref = Evaluate(assignmentTarget).Value;\n    }\n    var v = GetV(value, propertyName);\n    var rhsValue;\n    if (node.type === \"AssignmentPattern\" && v === undefined) {\n      // Todo(steve): check IsAnonymousFunctionDefinition(Initializer)\n      var defaultValue = Evaluate(node.right);\n      rhsValue = GetValue(defaultValue);\n    } else {\n      rhsValue = v;\n    }\n    if (isObjectOrArray) {\n      return DestructuringAssignmentEvaluation(assignmentTarget, rhsValue);\n    }\n    return PutValue(lref, rhsValue);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-restdestructuringassignmentevaluation\n  function RestDestructuringAssignmentEvaluation(restProperty, value, excludedNames) {\n    var lref = Evaluate(restProperty.argument).Value;\n    var restObj = CopyDataProperties({}, value, excludedNames);\n    return PutValue(lref, restObj);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-iteratordestructuringassignmentevaluation\n  function IteratorDestructuringAssignmentEvaluation(elements, iteratorRecord) {\n    var status = NormalCompletion(Empty);\n    for (var element of elements) {\n      if (!element) {\n        iteratorRecord.next();\n        status = NormalCompletion(Empty);\n        continue;\n      }\n      var assignmentTarget = element.type === \"RestElement\" ? element.argument : element.type === \"AssignmentPattern\" ? element.left : element;\n      var isObjectOrArray = assignmentTarget.type === \"ArrayPattern\" || assignmentTarget.type === \"ObjectPattern\";\n      var lref = void 0;\n      if (!isObjectOrArray) {\n        lref = Evaluate(assignmentTarget).Value;\n      }\n      var v = void 0;\n      if (element.type !== \"RestElement\") {\n        var {\n          done,\n          value: nextValue\n        } = iteratorRecord.next();\n        var _value2 = done ? undefined : nextValue;\n        if (element.type === \"AssignmentPattern\" && _value2 === undefined) {\n          // Todo(steve): check IsAnonymousFunctionDefinition(Initializer)\n          var defaultValue = Evaluate(element.right);\n          v = GetValue(defaultValue);\n        } else {\n          v = _value2;\n        }\n      } else {\n        // RestElement\n        v = [];\n        var n = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          var {\n            done: _done,\n            value: _nextValue\n          } = iteratorRecord.next();\n          if (_done) {\n            break;\n          }\n          v[n] = _nextValue;\n          n++;\n        }\n      }\n      if (isObjectOrArray) {\n        status = DestructuringAssignmentEvaluation(assignmentTarget, v);\n      } else {\n        status = PutValue(lref, v);\n      }\n    }\n    return status;\n  }\n\n  // Object expressions.\n  // https://tc39.es/ecma262/#sec-evaluate-property-access-with-expression-key\n  function EvaluatePropertyAccessWithExpressionKey(baseValue, expression, strict) {\n    var propertyNameReference = Evaluate(expression);\n    var propertyNameValue = GetValue(propertyNameReference);\n    var propertyKey = ToPropertyKey(propertyNameValue);\n    return new ReferenceRecord(baseValue, propertyKey, strict);\n  }\n\n  // https://tc39.es/ecma262/#sec-evaluate-property-access-with-identifier-key\n  function EvaluatePropertyAccessWithIdentifierKey(baseValue, identifier, strict) {\n    var propertyNameString = identifier.name;\n    return new ReferenceRecord(baseValue, propertyNameString, strict);\n  }\n\n  // Block statements.\n  // https://tc39.es/ecma262/#sec-blockdeclarationinstantiation\n  function BlockDeclarationInstantiation(code, env) {\n    var declarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: false\n    });\n    for (var d of declarations) {\n      var IsConstantDeclaration = d.type === \"VariableDeclaration\" && d.kind === \"const\";\n      for (var dn of collectBoundNames(d)) {\n        if (IsConstantDeclaration) {\n          env.CreateImmutableBinding(dn, true);\n        } else {\n          env.CreateMutableBinding(dn, false);\n        }\n      }\n      if (d.type === \"FunctionDeclaration\") {\n        var [_fn] = collectBoundNames(d);\n        var _fo = InstantiateFunctionObject(d, env);\n        env.InitializeBinding(_fn, _fo);\n      }\n    }\n  }\n\n  // Function declarations and expressions.\n  // https://tc39.es/ecma262/#sec-evaluatecall\n  function EvaluateCall(func, ref, args, callee) {\n    var thisValue;\n    if (ref instanceof ReferenceRecord) {\n      if (IsPropertyReference(ref)) {\n        thisValue = ref.Base;\n      }\n    }\n    var argList = ArgumentListEvaluation(args);\n    if (typeof func !== \"function\") {\n      var funcName = codeSource.substring(callee.start, callee.end);\n      throw new TypeError(\"\".concat(funcName, \" is not a function\"));\n    }\n    var result = func.apply(thisValue, argList);\n    sanitize(result);\n    return NormalCompletion(result);\n  }\n\n  // https://tc39.es/ecma262/#sec-evaluatenew\n  function EvaluateNew(constructExpr, args) {\n    var ref = Evaluate(constructExpr);\n    var constructor = GetValue(ref);\n    var argList = ArgumentListEvaluation(args);\n    if (typeof constructor !== \"function\" || constructor[IsConstructor] === false) {\n      var constructorName = codeSource.substring(constructExpr.start, constructExpr.end);\n      throw new TypeError(\"\".concat(constructorName, \" is not a constructor\"));\n    }\n    if (!isAllowedConstructor(constructor)) {\n      var _constructorName = codeSource.substring(constructExpr.start, constructExpr.end);\n      throw new TypeError(\"\".concat(_constructorName, \" is not an allowed constructor\"));\n    }\n    return NormalCompletion(new constructor(...argList));\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-argumentlistevaluation\n  function ArgumentListEvaluation(args) {\n    var array = [];\n    if (Array.isArray(args)) {\n      for (var arg of args) {\n        if (arg.type === \"SpreadElement\") {\n          var spreadValues = GetValue(Evaluate(arg.argument));\n          array.push(...spreadValues);\n        } else {\n          array.push(GetValue(Evaluate(arg)));\n        }\n      }\n    } else {\n      array.push(GetTemplateObject(args));\n      for (var expr of args.expressions) {\n        array.push(GetValue(Evaluate(expr)));\n      }\n    }\n    return array;\n  }\n\n  // https://tc39.es/ecma262/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n  function CallFunction(closure, args) {\n    var _hooks$beforeCall;\n    (_hooks$beforeCall = hooks.beforeCall) === null || _hooks$beforeCall === void 0 ? void 0 : _hooks$beforeCall.call(hooks, closure[SourceNode]);\n    PrepareForOrdinaryCall(closure);\n    var result = OrdinaryCallEvaluateBody(closure, args);\n    executionContextStack.pop();\n    if (result.Type === \"return\") {\n      return result.Value;\n    }\n    return undefined;\n  }\n\n  // https://tc39.es/ecma262/#sec-prepareforordinarycall\n  function PrepareForOrdinaryCall(F) {\n    var calleeContext = new ExecutionContext();\n    calleeContext.Function = F;\n    var localEnv = new FunctionEnvironment(F[Environment]);\n    calleeContext.VariableEnvironment = localEnv;\n    calleeContext.LexicalEnvironment = localEnv;\n    executionContextStack.push(calleeContext);\n    return calleeContext;\n  }\n\n  // https://tc39.es/ecma262/#sec-ordinarycallevaluatebody\n  function OrdinaryCallEvaluateBody(F, args) {\n    return EvaluateFunctionBody(F[ECMAScriptCode], F, args);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-evaluatefunctionbody\n  function EvaluateFunctionBody(body, F, args) {\n    FunctionDeclarationInstantiation(F, args);\n    if (Array.isArray(body)) {\n      return EvaluateStatementList(body);\n    }\n    return new CompletionRecord(\"return\", GetValue(Evaluate(body)));\n  }\n\n  // https://tc39.es/ecma262/#sec-block-runtime-semantics-evaluation\n  function EvaluateStatementList(statements) {\n    var result = NormalCompletion(Empty);\n    for (var stmt of statements) {\n      var s = Evaluate(stmt);\n      if (s.Type !== \"normal\") {\n        return s;\n      }\n      result = UpdateEmpty(result, s.Value);\n    }\n    return result;\n  }\n\n  // https://tc39.es/ecma262/#sec-functiondeclarationinstantiation\n  function FunctionDeclarationInstantiation(func, args) {\n    var calleeContext = getRunningContext();\n    var code = func[ECMAScriptCode];\n    var formals = func[FormalParameters];\n    var parameterNames = collectBoundNames(formals);\n    var hasParameterExpressions = containsExpression(formals);\n    var varDeclarations = collectScopedDeclarations(code, {\n      var: true,\n      topLevel: true\n    });\n    var varNames = collectBoundNames(varDeclarations);\n\n    // `functionNames` ∈ `varNames`\n    // `functionsToInitialize` ≈ `functionNames`\n    var functionNames = [];\n    var functionsToInitialize = [];\n    for (var i = varDeclarations.length - 1; i >= 0; i--) {\n      var d = varDeclarations[i];\n      if (d.type === \"FunctionDeclaration\") {\n        ThrowIfFunctionIsInvalid(d);\n        var [_fn2] = collectBoundNames(d);\n        if (!functionNames.includes(_fn2)) {\n          functionNames.unshift(_fn2);\n          functionsToInitialize.unshift(d);\n        }\n      } else if (rules !== null && rules !== void 0 && rules.noVar) {\n        throw new SyntaxError(\"Var declaration is not recommended, use `let` or `const` instead\");\n      }\n    }\n    var env = calleeContext.LexicalEnvironment;\n    for (var paramName of parameterNames) {\n      // In strict mode, it's guaranteed no duplicate params exist.\n      env.CreateMutableBinding(paramName, false);\n    }\n    var iteratorRecord = CreateListIteratorRecord(args);\n    IteratorBindingInitialization(formals, iteratorRecord, env);\n    var varEnv;\n    if (!hasParameterExpressions) {\n      // NOTE: Only a single Environment Record is needed for the parameters\n      // and top-level vars.\n      // `varNames` are unique.\n      for (var n of varNames) {\n        if (!parameterNames.includes(n)) {\n          env.CreateMutableBinding(n, false);\n          env.InitializeBinding(n, undefined);\n        }\n      }\n      varEnv = env;\n    } else {\n      // NOTE: A separate Environment Record is needed to ensure that closures\n      // created by expressions in the formal parameter list do not have\n      // visibility of declarations in the function body.\n      varEnv = new DeclarativeEnvironment(env);\n      calleeContext.VariableEnvironment = varEnv;\n      // `varNames` are unique.\n      for (var _n of varNames) {\n        varEnv.CreateMutableBinding(_n, false);\n        var initialValue = void 0;\n        if (parameterNames.includes(_n) && !functionNames.includes(_n)) {\n          initialValue = env.GetBindingValue(_n, false);\n        }\n        varEnv.InitializeBinding(_n, initialValue);\n        // NOTE: A var with the same name as a formal parameter initially has\n        // the same value as the corresponding initialized parameter.\n      }\n    }\n\n    var lexEnv = varEnv;\n    calleeContext.LexicalEnvironment = lexEnv;\n    var lexDeclarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: true\n    });\n    for (var _d of lexDeclarations) {\n      for (var dn of collectBoundNames(_d)) {\n        // Only lexical VariableDeclaration here in top-level.\n        if (_d.kind === \"const\") {\n          lexEnv.CreateImmutableBinding(dn, true);\n        } else {\n          lexEnv.CreateMutableBinding(dn, false);\n        }\n      }\n    }\n    for (var f of functionsToInitialize) {\n      var [_fn3] = collectBoundNames(f);\n      var _fo2 = InstantiateFunctionObject(f, lexEnv);\n      varEnv.SetMutableBinding(_fn3, _fo2, false);\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-instantiatefunctionobject\n  function InstantiateFunctionObject(func, scope) {\n    return OrdinaryFunctionCreate(func, scope, true);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-instantiateordinaryfunctionexpression\n  function InstantiateOrdinaryFunctionExpression(functionExpression) {\n    var scope = getRunningContext().LexicalEnvironment;\n    if (functionExpression.id) {\n      var name = functionExpression.id.name;\n      var funcEnv = new DeclarativeEnvironment(scope);\n      funcEnv.CreateImmutableBinding(name, false);\n      var closure = OrdinaryFunctionCreate(functionExpression, funcEnv, true);\n      funcEnv.InitializeBinding(name, closure);\n      return closure;\n    } else {\n      var _closure = OrdinaryFunctionCreate(functionExpression, scope, true);\n      return _closure;\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-instantiatearrowfunctionexpression\n  function InstantiateArrowFunctionExpression(arrowFunction) {\n    var scope = getRunningContext().LexicalEnvironment;\n    var closure = OrdinaryFunctionCreate(arrowFunction, scope, false);\n    return closure;\n  }\n\n  // https://tc39.es/ecma262/#sec-ordinaryfunctioncreate\n  function OrdinaryFunctionCreate(sourceNode, scope, isConstructor) {\n    var F = function () {\n      // eslint-disable-next-line prefer-rest-params\n      return CallFunction(F, arguments);\n    };\n    Object.defineProperties(F, {\n      [SourceNode]: {\n        value: sourceNode\n      },\n      [FormalParameters]: {\n        value: sourceNode.params\n      },\n      [ECMAScriptCode]: {\n        value: sourceNode.body.type === \"BlockStatement\" ? sourceNode.body.body : sourceNode.body\n      },\n      [Environment]: {\n        value: scope\n      },\n      [IsConstructor]: {\n        value: isConstructor\n      }\n    });\n    return F;\n  }\n\n  // Patterns initialization.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-bindinginitialization\n  function BindingInitialization(node, value, environment) {\n    switch (node.type) {\n      case \"Identifier\":\n        return InitializeBoundName(node.name, value, environment);\n      case \"ObjectPattern\":\n        RequireObjectCoercible(value);\n        return PropertyBindingInitialization(node.properties, value, environment);\n      case \"ArrayPattern\":\n        {\n          var iteratorRecord = CreateListIteratorRecord(value);\n          return IteratorBindingInitialization(node.elements, iteratorRecord, environment);\n        }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\n  function PropertyBindingInitialization(properties, value, environment) {\n    var excludedNames = new Set();\n    for (var prop of properties) {\n      if (prop.type === \"RestElement\") {\n        return RestBindingInitialization(prop, value, environment, excludedNames);\n      }\n      if (!prop.computed && prop.key.type === \"Identifier\") {\n        KeyedBindingInitialization(prop.value, value, environment, prop.key.name);\n        excludedNames.add(prop.key.name);\n      } else {\n        var P = EvaluateComputedPropertyName(prop.key);\n        KeyedBindingInitialization(prop.value, value, environment, P);\n        excludedNames.add(P);\n      }\n    }\n    return NormalCompletion(Empty);\n  }\n\n  // https://tc39.es/ecma262/#prod-ComputedPropertyName\n  function EvaluateComputedPropertyName(node) {\n    var propName = GetValue(Evaluate(node));\n    return ToPropertyKey(propName);\n  }\n\n  // https://tc39.es/ecma262/#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\n  function RestBindingInitialization(restProperty, value, environment, excludedNames) {\n    var lhs = ResolveBinding(restProperty.argument.name, environment);\n    var restObj = CopyDataProperties({}, value, excludedNames);\n    if (!environment) {\n      return PutValue(lhs, restObj);\n    }\n    return InitializeReferencedBinding(lhs, restObj);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-iteratorbindinginitialization\n  function IteratorBindingInitialization(elements, iteratorRecord, environment) {\n    if (elements.length === 0) {\n      return NormalCompletion(Empty);\n    }\n    var result;\n    for (var _node of elements) {\n      if (!_node) {\n        // Elision element.\n        iteratorRecord.next();\n        result = NormalCompletion(Empty);\n      } else if (_node.type === \"RestElement\") {\n        // Rest element.\n        if (_node.argument.type === \"Identifier\") {\n          var lhs = ResolveBinding(_node.argument.name, environment);\n          var A = [];\n          var n = 0;\n          // eslint-disable-next-line no-constant-condition\n          while (true) {\n            var {\n              done,\n              value: _value3\n            } = iteratorRecord.next();\n            if (done) {\n              result = environment ? InitializeReferencedBinding(lhs, A) : PutValue(lhs, A);\n              break;\n            }\n            A[n] = _value3;\n            n++;\n          }\n        } else {\n          var _A = [];\n          var _n2 = 0;\n          // eslint-disable-next-line no-constant-condition\n          while (true) {\n            var {\n              done: _done2,\n              value: _value4\n            } = iteratorRecord.next();\n            if (_done2) {\n              result = BindingInitialization(_node.argument, _A, environment);\n              break;\n            }\n            _A[_n2] = _value4;\n            _n2++;\n          }\n        }\n      } else {\n        // Normal element.\n        var bindingElement = _node.type === \"AssignmentPattern\" ? _node.left : _node;\n        switch (bindingElement.type) {\n          case \"ObjectPattern\":\n          case \"ArrayPattern\":\n            {\n              var v = void 0;\n              var {\n                done: _done3,\n                value: _value5\n              } = iteratorRecord.next();\n              if (!_done3) {\n                v = _value5;\n              }\n              if (_node.type === \"AssignmentPattern\" && v === undefined) {\n                var defaultValue = Evaluate(_node.right);\n                v = GetValue(defaultValue);\n              }\n              result = BindingInitialization(bindingElement, v, environment);\n              break;\n            }\n          case \"Identifier\":\n            {\n              var bindingId = bindingElement.name;\n              var _lhs3 = ResolveBinding(bindingId, environment);\n              var _v = void 0;\n              var {\n                done: _done4,\n                value: _value6\n              } = iteratorRecord.next();\n              if (!_done4) {\n                _v = _value6;\n              }\n              if (_node.type === \"AssignmentPattern\" && _v === undefined) {\n                // IsAnonymousFunctionDefinition(Initializer)\n                var _defaultValue = Evaluate(_node.right);\n                _v = GetValue(_defaultValue);\n              }\n              result = environment ? InitializeReferencedBinding(_lhs3, _v) : PutValue(_lhs3, _v);\n              break;\n            }\n        }\n      }\n    }\n    return result;\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-keyedbindinginitialization\n  function KeyedBindingInitialization(node, value, environment, propertyName) {\n    var isIdentifier = node.type === \"Identifier\" || node.type === \"AssignmentPattern\" && node.left.type === \"Identifier\";\n    if (isIdentifier) {\n      var bindingId = node.type === \"Identifier\" ? node.name : node.left.name;\n      var lhs = ResolveBinding(bindingId, environment);\n      var _v2 = GetV(value, propertyName);\n      if (node.type === \"AssignmentPattern\" && _v2 === undefined) {\n        // If IsAnonymousFunctionDefinition(Initializer)\n        var defaultValue = Evaluate(node.right);\n        _v2 = GetValue(defaultValue);\n      }\n      if (!environment) {\n        return PutValue(lhs, _v2);\n      }\n      return InitializeReferencedBinding(lhs, _v2);\n    }\n    var v = GetV(value, propertyName);\n    if (node.type === \"AssignmentPattern\" && v === undefined) {\n      var _defaultValue2 = Evaluate(node.right);\n      v = GetValue(_defaultValue2);\n    }\n    return BindingInitialization(node.type === \"AssignmentPattern\" ? node.left : node, v, environment);\n  }\n\n  // https://tc39.es/ecma262/#sec-initializeboundname\n  function InitializeBoundName(name, value, environment) {\n    // Assert: environment is always present.\n    environment.InitializeBinding(name, value);\n    return NormalCompletion(Empty);\n  }\n  function ThrowIfFunctionIsInvalid(func) {\n    if (func.async || func.generator) {\n      throw new SyntaxError(\"\".concat(func.async ? \"Async\" : \"Generator\", \" function is not allowed\"));\n    }\n    if (expressionOnly && !func.expression) {\n      throw new SyntaxError(\"Only an `Expression` is allowed in `ArrowFunctionExpression`'s body\");\n    }\n  }\n  if (expressionOnly) {\n    return GetValue(Evaluate(rootAst));\n  }\n  (_hooks$beforeEvaluate3 = hooks.beforeEvaluate) === null || _hooks$beforeEvaluate3 === void 0 ? void 0 : _hooks$beforeEvaluate3.call(hooks, rootAst);\n  ThrowIfFunctionIsInvalid(rootAst);\n  var [fn] = collectBoundNames(rootAst);\n  // Create an immutable binding for the root function.\n  rootEnv.CreateImmutableBinding(fn, true);\n  var fo = InstantiateFunctionObject(rootAst, rootEnv);\n  rootEnv.InitializeBinding(fn, fo);\n  return fo;\n}\n//# sourceMappingURL=cook.js.map","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n// https://tc39.es/ecma262/#sec-execution-contexts\nexport class AnalysisContext {\n  constructor() {\n    _defineProperty(this, \"VariableEnvironment\", void 0);\n    _defineProperty(this, \"LexicalEnvironment\", void 0);\n  }\n}\n\n// https://tc39.es/ecma262/#sec-environment-records\nexport class AnalysisEnvironment {\n  constructor(outer) {\n    _defineProperty(this, \"OuterEnv\", void 0);\n    _defineProperty(this, \"bindingSet\", new Set());\n    this.OuterEnv = outer;\n  }\n  HasBinding(name) {\n    return this.bindingSet.has(name);\n  }\n  CreateBinding(name) {\n    this.bindingSet.add(name);\n  }\n}\n//# sourceMappingURL=AnalysisContext.js.map","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { hasOwnProperty } from \"./hasOwnProperty.js\";\nimport { AnalysisContext, AnalysisEnvironment } from \"./AnalysisContext.js\";\nimport { collectBoundNames, collectScopedDeclarations, containsExpression } from \"./traverse.js\";\n/**\n * Analysis an AST of a storyboard function or an evaluation expression.\n *\n * @param rootAst - The root AST.\n * @param options - Analysis options.\n * @returns A set of global variables the root AST attempts to access.\n */\nexport function precook(rootAst) {\n  var {\n    expressionOnly,\n    visitors,\n    withParent,\n    hooks = {}\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attemptToVisitGlobals = new Set();\n  var analysisContextStack = [];\n  var rootEnv = new AnalysisEnvironment(null);\n  var rootContext = new AnalysisContext();\n  rootContext.VariableEnvironment = rootEnv;\n  rootContext.LexicalEnvironment = rootEnv;\n  analysisContextStack.push(rootContext);\n  function getRunningContext() {\n    return analysisContextStack[analysisContextStack.length - 1];\n  }\n  function visit(node) {\n    if (visitors && hasOwnProperty(visitors, node.type)) {\n      visitors[node.type](node);\n    }\n  }\n  function EvaluateChildren(node, keys, parent) {\n    for (var key of keys) {\n      Evaluate(node[key], parent === null || parent === void 0 ? void 0 : parent.concat({\n        node,\n        key\n      }));\n    }\n  }\n  function Evaluate(node, parent) {\n    if (Array.isArray(node)) {\n      node.forEach((n, index) => {\n        Evaluate(n, parent ? parent.slice(0, -1).concat(_objectSpread(_objectSpread({}, parent[parent.length - 1]), {}, {\n          index\n        })) : parent);\n      });\n    } else if (node) {\n      var _hooks$beforeVisit, _hooks$beforeVisitUnk;\n      // `node` maybe `null` in some cases.\n      (_hooks$beforeVisit = hooks.beforeVisit) === null || _hooks$beforeVisit === void 0 ? void 0 : _hooks$beforeVisit.call(hooks, node, parent);\n      visit(node);\n      // Expressions:\n      switch (node.type) {\n        case \"Identifier\":\n          if (!ResolveBinding(node.name)) {\n            var _hooks$beforeVisitGlo;\n            (_hooks$beforeVisitGlo = hooks.beforeVisitGlobal) === null || _hooks$beforeVisitGlo === void 0 ? void 0 : _hooks$beforeVisitGlo.call(hooks, node, parent);\n            attemptToVisitGlobals.add(node.name);\n          }\n          return;\n        case \"ArrayExpression\":\n        case \"ArrayPattern\":\n          EvaluateChildren(node, [\"elements\"], parent);\n          return;\n        case \"ArrowFunctionExpression\":\n          {\n            var env = getRunningContext().LexicalEnvironment;\n            var closure = OrdinaryFunctionCreate(node, env);\n            CallFunction(closure, parent);\n            return;\n          }\n        case \"AssignmentPattern\":\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n          EvaluateChildren(node, [\"left\", \"right\"], parent);\n          return;\n        case \"CallExpression\":\n        case \"NewExpression\":\n          EvaluateChildren(node, [\"callee\", \"arguments\"], parent);\n          return;\n        case \"ChainExpression\":\n          EvaluateChildren(node, [\"expression\"], parent);\n          return;\n        case \"ConditionalExpression\":\n          EvaluateChildren(node, [\"test\", \"consequent\", \"alternate\"], parent);\n          return;\n        case \"MemberExpression\":\n          EvaluateChildren(node, [\"object\"], parent);\n          if (node.computed) {\n            EvaluateChildren(node, [\"property\"], parent);\n          }\n          return;\n        case \"ObjectExpression\":\n        case \"ObjectPattern\":\n          EvaluateChildren(node, [\"properties\"], parent);\n          return;\n        case \"Property\":\n          if (node.computed) {\n            EvaluateChildren(node, [\"key\"], parent);\n          }\n          EvaluateChildren(node, [\"value\"], parent);\n          return;\n        case \"RestElement\":\n        case \"SpreadElement\":\n        case \"UnaryExpression\":\n          EvaluateChildren(node, [\"argument\"], parent);\n          return;\n        case \"SequenceExpression\":\n        case \"TemplateLiteral\":\n          EvaluateChildren(node, [\"expressions\"], parent);\n          return;\n        case \"TaggedTemplateExpression\":\n          EvaluateChildren(node, [\"tag\", \"quasi\"], parent);\n          return;\n        case \"Literal\":\n          return;\n      }\n      if (!expressionOnly) {\n        // Statements and assignments:\n        switch (node.type) {\n          case \"AssignmentExpression\":\n            EvaluateChildren(node, [\"right\", \"left\"], parent);\n            return;\n          case \"BlockStatement\":\n            {\n              if (!node.body.length) {\n                return;\n              }\n              var runningContext = getRunningContext();\n              var oldEnv = runningContext.LexicalEnvironment;\n              var blockEnv = new AnalysisEnvironment(oldEnv);\n              BlockDeclarationInstantiation(node.body, blockEnv);\n              runningContext.LexicalEnvironment = blockEnv;\n              EvaluateChildren(node, [\"body\"], parent);\n              runningContext.LexicalEnvironment = oldEnv;\n              return;\n            }\n          case \"BreakStatement\":\n          case \"ContinueStatement\":\n          case \"EmptyStatement\":\n            return;\n          case \"CatchClause\":\n            {\n              var _runningContext = getRunningContext();\n              var _oldEnv = _runningContext.LexicalEnvironment;\n              var catchEnv = new AnalysisEnvironment(_oldEnv);\n              BoundNamesInstantiation(node.param, catchEnv);\n              _runningContext.LexicalEnvironment = catchEnv;\n              EvaluateChildren(node, [\"param\", \"body\"], parent);\n              _runningContext.LexicalEnvironment = _oldEnv;\n              return;\n            }\n          case \"DoWhileStatement\":\n            EvaluateChildren(node, [\"body\", \"test\"], parent);\n            return;\n          case \"ExpressionStatement\":\n          case \"TSAsExpression\":\n            EvaluateChildren(node, [\"expression\"], parent);\n            return;\n          case \"ForInStatement\":\n          case \"ForOfStatement\":\n            {\n              // ForIn/OfHeadEvaluation\n              var lexicalBinding = node.left.type === \"VariableDeclaration\" && node.left.kind !== \"var\";\n              var _runningContext2 = getRunningContext();\n              var _oldEnv2 = _runningContext2.LexicalEnvironment;\n              if (lexicalBinding) {\n                var newEnv = new AnalysisEnvironment(_oldEnv2);\n                BoundNamesInstantiation(node.left, newEnv);\n                _runningContext2.LexicalEnvironment = newEnv;\n              }\n              EvaluateChildren(node, [\"right\"], parent);\n              _runningContext2.LexicalEnvironment = _oldEnv2;\n\n              // ForIn/OfBodyEvaluation\n              if (lexicalBinding) {\n                var iterationEnv = new AnalysisEnvironment(_oldEnv2);\n                BoundNamesInstantiation(node.left, iterationEnv);\n                _runningContext2.LexicalEnvironment = iterationEnv;\n              }\n              EvaluateChildren(node, [\"left\", \"body\"], parent);\n              _runningContext2.LexicalEnvironment = _oldEnv2;\n              return;\n            }\n          case \"ForStatement\":\n            {\n              var _node$init;\n              var _lexicalBinding = ((_node$init = node.init) === null || _node$init === void 0 ? void 0 : _node$init.type) === \"VariableDeclaration\" && node.init.kind !== \"var\";\n              var _runningContext3 = getRunningContext();\n              var _oldEnv3 = _runningContext3.LexicalEnvironment;\n              if (_lexicalBinding) {\n                var loopEnv = new AnalysisEnvironment(_oldEnv3);\n                BoundNamesInstantiation(node.init, loopEnv);\n                _runningContext3.LexicalEnvironment = loopEnv;\n              }\n              EvaluateChildren(node, [\"init\", \"test\", \"body\", \"update\"], parent);\n              _runningContext3.LexicalEnvironment = _oldEnv3;\n              return;\n            }\n          case \"FunctionDeclaration\":\n            {\n              var [fn] = collectBoundNames(node);\n              var _env = getRunningContext().LexicalEnvironment;\n              var fo = OrdinaryFunctionCreate(node, _env);\n              _env.CreateBinding(fn);\n              CallFunction(fo, parent);\n              return;\n            }\n          case \"FunctionExpression\":\n            {\n              var _closure = InstantiateOrdinaryFunctionExpression(node);\n              CallFunction(_closure, parent);\n              return;\n            }\n          case \"IfStatement\":\n            EvaluateChildren(node, [\"test\", \"consequent\", \"alternate\"], parent);\n            return;\n          case \"ReturnStatement\":\n          case \"ThrowStatement\":\n          case \"UpdateExpression\":\n            EvaluateChildren(node, [\"argument\"], parent);\n            return;\n          case \"SwitchCase\":\n            EvaluateChildren(node, [\"test\", \"consequent\"], parent);\n            return;\n          case \"SwitchStatement\":\n            {\n              EvaluateChildren(node, [\"discriminant\"], parent);\n              var _runningContext4 = getRunningContext();\n              var _oldEnv4 = _runningContext4.LexicalEnvironment;\n              var _blockEnv = new AnalysisEnvironment(_oldEnv4);\n              BlockDeclarationInstantiation(node.cases, _blockEnv);\n              _runningContext4.LexicalEnvironment = _blockEnv;\n              EvaluateChildren(node, [\"cases\"], parent);\n              _runningContext4.LexicalEnvironment = _oldEnv4;\n              return;\n            }\n          case \"TryStatement\":\n            EvaluateChildren(node, [\"block\", \"handler\", \"finalizer\"], parent);\n            return;\n          case \"VariableDeclaration\":\n            EvaluateChildren(node, [\"declarations\"], parent);\n            return;\n          case \"VariableDeclarator\":\n            EvaluateChildren(node, [\"id\", \"init\"], parent);\n            return;\n          case \"WhileStatement\":\n            EvaluateChildren(node, [\"test\", \"body\"], parent);\n            return;\n        }\n      }\n      var silent = (_hooks$beforeVisitUnk = hooks.beforeVisitUnknown) === null || _hooks$beforeVisitUnk === void 0 ? void 0 : _hooks$beforeVisitUnk.call(hooks, node, parent);\n      if (!silent) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Unsupported node type `\".concat(node.type, \"`\"));\n      }\n    }\n  }\n  function BoundNamesInstantiation(declarations, env) {\n    for (var name of collectBoundNames(declarations)) {\n      env.CreateBinding(name);\n    }\n  }\n  function ResolveBinding(name) {\n    var env = getRunningContext().LexicalEnvironment;\n    return GetIdentifierReference(env, name);\n  }\n  function GetIdentifierReference(env, name) {\n    return !!env && (env.HasBinding(name) || GetIdentifierReference(env.OuterEnv, name));\n  }\n  function BlockDeclarationInstantiation(code, env) {\n    var declarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: false\n    });\n    BoundNamesInstantiation(declarations, env);\n  }\n  function CallFunction(closure, parent) {\n    PrepareOrdinaryCall(closure);\n    FunctionDeclarationInstantiation(closure, parent);\n    Evaluate(closure.ECMAScriptCode, parent === null || parent === void 0 ? void 0 : parent.concat({\n      node: closure.Function,\n      key: \"body\"\n    }).concat(closure.Function.body.type === \"BlockStatement\" ? {\n      node: closure.Function.body,\n      key: \"body\"\n    } : []));\n    analysisContextStack.pop();\n  }\n  function PrepareOrdinaryCall(F) {\n    var calleeContext = new AnalysisContext();\n    var localEnv = new AnalysisEnvironment(F.Environment);\n    calleeContext.VariableEnvironment = localEnv;\n    calleeContext.LexicalEnvironment = localEnv;\n    analysisContextStack.push(calleeContext);\n  }\n  function FunctionDeclarationInstantiation(func, parent) {\n    var calleeContext = getRunningContext();\n    var code = func.ECMAScriptCode;\n    var formals = func.FormalParameters;\n    var hasParameterExpressions = containsExpression(formals);\n    var varDeclarations = collectScopedDeclarations(code, {\n      var: true,\n      topLevel: true\n    });\n    var varNames = collectBoundNames(varDeclarations);\n    var env = calleeContext.LexicalEnvironment;\n    BoundNamesInstantiation(formals, env);\n    Evaluate(formals, parent === null || parent === void 0 ? void 0 : parent.concat({\n      node: func.Function,\n      key: \"params\"\n    }));\n    var varEnv;\n    if (!hasParameterExpressions) {\n      // NOTE: Only a single Environment Record is needed for the parameters\n      // and top-level vars.\n      for (var n of varNames) {\n        env.CreateBinding(n);\n      }\n      varEnv = env;\n    } else {\n      // NOTE: A separate Environment Record is needed to ensure that closures\n      // created by expressions in the formal parameter list do not have\n      // visibility of declarations in the function body.\n      varEnv = new AnalysisEnvironment(env);\n      calleeContext.VariableEnvironment = varEnv;\n      for (var _n of varNames) {\n        varEnv.CreateBinding(_n);\n      }\n    }\n    var lexEnv = varEnv;\n    calleeContext.LexicalEnvironment = lexEnv;\n    var lexDeclarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: true\n    });\n    BoundNamesInstantiation(lexDeclarations, lexEnv);\n  }\n  function InstantiateOrdinaryFunctionExpression(functionExpression) {\n    var scope = getRunningContext().LexicalEnvironment;\n    if (!functionExpression.id) {\n      return OrdinaryFunctionCreate(functionExpression, scope);\n    }\n    var name = functionExpression.id.name;\n    var funcEnv = new AnalysisEnvironment(scope);\n    funcEnv.CreateBinding(name);\n    return OrdinaryFunctionCreate(functionExpression, funcEnv);\n  }\n  function OrdinaryFunctionCreate(func, scope) {\n    return {\n      Function: func,\n      FormalParameters: func.params,\n      ECMAScriptCode: func.body.type === \"BlockStatement\" ? func.body.body : func.body,\n      Environment: scope\n    };\n  }\n  Evaluate(rootAst, withParent ? [] : undefined);\n  return attemptToVisitGlobals;\n}\n//# sourceMappingURL=precook.js.map","export function hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n//# sourceMappingURL=hasOwnProperty.js.map","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"typescript\"];\nimport { parseAsEstree } from \"./parse.js\";\nimport { precook } from \"./precook.js\";\nexport function precookFunction(source) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    {\n      typescript\n    } = _ref,\n    restOptions = _objectWithoutProperties(_ref, _excluded);\n  var func = parseAsEstree(source, {\n    typescript\n  });\n  var attemptToVisitGlobals = precook(func, restOptions);\n  return {\n    function: func,\n    attemptToVisitGlobals\n  };\n}\n//# sourceMappingURL=precookFunction.js.map","import { parse, parseExpression } from \"@babel/parser\";\nexport function parseAsEstreeExpression(source) {\n  return parseExpression(source, {\n    plugins: [\"estree\", [\"pipelineOperator\", {\n      proposal: \"minimal\"\n    }]],\n    attachComment: false\n  });\n}\nexport function parseAsEstree(source) {\n  var {\n    typescript\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var file = parse(source, {\n    plugins: [\"estree\", typescript && \"typescript\"].filter(Boolean),\n    strictMode: true,\n    attachComment: false\n  });\n  var body = file.program.body;\n  var jsNodes = typescript ? [] : body;\n  if (typescript) {\n    for (var node of body) {\n      if (node.type.startsWith(\"TS\")) {\n        if (/Enum|Import|Export/.test(node.type)) {\n          throw new SyntaxError(\"Unsupported TypeScript syntax: \".concat(node.type));\n        }\n      } else {\n        jsNodes.push(node);\n      }\n    }\n  }\n  if (jsNodes.length === 0) {\n    throw new SyntaxError(\"Function declaration not found\");\n  }\n  if (jsNodes.length > 1 || jsNodes[0].type !== \"FunctionDeclaration\") {\n    throw new SyntaxError(\"Expect a single function declaration at top level, but received: \".concat(jsNodes.map(node => \"\\\"\".concat(node.type, \"\\\"\")).join(\", \")));\n  }\n  return jsNodes[0];\n}\n//# sourceMappingURL=parse.js.map","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { parseAsEstreeExpression } from \"./parse.js\";\nimport { precook } from \"./precook.js\";\n// `raw` should always be asserted by `isEvaluable`.\nexport function preevaluate(raw, options) {\n  var fixes = [];\n  var source = raw.replace(/^\\s*<%~?\\s|\\s%>\\s*$/g, m => {\n    fixes.push(m);\n    return \"\";\n  });\n  var expression = parseAsEstreeExpression(source);\n  var attemptToVisitGlobals = precook(expression, _objectSpread(_objectSpread({}, options), {}, {\n    expressionOnly: true\n  }));\n  return {\n    expression,\n    attemptToVisitGlobals,\n    source,\n    prefix: fixes[0],\n    suffix: fixes[1]\n  };\n}\nexport function isEvaluable(raw) {\n  return /^\\s*<%~?\\s/.test(raw) && /\\s%>\\s*$/.test(raw);\n}\nexport function shouldAllowRecursiveEvaluations(raw) {\n  return /^\\s*<%~\\s/.test(raw);\n}\n//# sourceMappingURL=preevaluate.js.map"],"names":["defaultOptions","sourceType","sourceFilename","undefined","startColumn","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowNewTargetOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","plugins","strictMode","ranges","tokens","createParenthesizedExpressions","errorRecovery","attachComment","annexB","TokContext","constructor","token","preserveSpace","this","types","brace","j_oTag","j_cTag","j_expr","template","beforeExpr","startsExpr","isLoop","isAssign","prefix","ExportedTokenType","label","conf","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","createToken","set","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","push","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","assign","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","tokenIsTemplate","getExportedToken","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","context","pop","Position","line","col","index","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","ParseErrorCode","SyntaxError","SourceTypeModuleError","reflect","last","get","reduce","object","value","item","instantiate","properties","descriptors","map","filter","descriptor","enumerable","split","instance","defineProperty","configurable","ModuleErrors","ImportMetaOutsideModule","message","code","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","type","String","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitInUsingBinding","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorsBeforeAfterExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForInUsing","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","ImportReflectionHasAssertion","ImportReflectionNotBinding","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","JSON","stringify","join","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","toString","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","SloppyFunctionAnnexB","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnexpectedUsingDeclaration","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","UsingDeclarationHasBindingPattern","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","UnparenthesizedPipeBodyDescriptions","Set","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","_excluded$1","_excluded2$1","toParseErrorConstructor","_ref","toMessage","loc","details","clone","overrides","pos","ParseErrorEnum","argument","syntaxPlugin","Array","isArray","parseErrorTemplates","ParseErrorConstructors","reasonCode","_ref2","rest","Errors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","toUnenumerable","toESTreeLocation","node","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_TS_MODULE","BIND_FLAGS_TS_IMPORT","BIND_LEXICAL","BIND_KIND_VALUE","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","parser","scopeStack","undefinedExports","inTopLevel","currentScope","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","allowDirectSuper","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","raise","values","next","checkLocalExport","id","topLevelScope","FlowScope","args","super","declareFunctions","FlowScopeHandler","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","pluginConfig","pluginName","pluginOptions","actualOptions","getPluginOption","plugin","_this$plugins$get","setTrailingComments","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","state","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","setLeadingComments","commentStart","input","charCodeAt","arguments","params","specifiers","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","State","strict","curLine","lineStart","startLoc","endLoc","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","lastTokEndLoc","lastTokStartLoc","lastTokStart","canStartJSXElement","containsEsc","firstInvalidTemplateEscapePos","strictErrors","tokensLength","init","curPosition","skipArrays","val","slice","_isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","startPos","octalStr","match","octal","parseInt","len","forceLen","n","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","e","Infinity","invalidDigit","prev","Number","isNaN","unexpectedNumericSeparator","numericSeparatorInEscapeSequence","invalidCodePoint","_excluded","_excluded2","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","errorHandlers_readInt","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","nextTokenInLineStart","nextTokenInLineStartSince","lookaheadInLineCharCode","codePointAtPos","cp","trail","setStrict","forEach","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","next2","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","char","includes","pattern","isBigInt","replace","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","raiseProperties","error","raiseOverwrite","expectOnePlugin","pluginNames","some","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","stack","current","oldClassScope","from","declarePrivateName","elementType","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","usePrivateName","classScope","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParameterBindingError","recordAsyncArrowParametersError","validateAsPattern","newExpressionScope","PARAM_YIELD","PARAM_AWAIT","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","isAsync","isGenerator","UtilParser","addExtra","extra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","refExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","isLiteralPropertyName","isPrivateName","getPrivateNameSV","hasPropertyAsPrivateName","property","isObjectProperty","isObjectMethod","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","__clone","newNode","NodeUtils","startNode","startNodeAt","startNodeAtNode","finishNode","finishNodeAt","resetStartLocation","resetEndLocation","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportReflectionHasImportType","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","Error","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","unwrapParenthesizedExpression","expression","LValParser","toAssignable","isLHS","_node$extra","_node$extra3","parenthesized","_node$extra2","isLast","toAssignableObjectExpressionProp","trailingCommaLoc","toAssignableList","operator","left","arg","checkToRestConversion","exprList","elt","isAssignable","isBinding","every","element","toReferencedList","isParenthesizedExpr","toReferencedListDeep","expr","parseSpread","parseMaybeAssignAllowIn","parseRestBinding","parseBindingAtom","parseBindingList","parseObjectLike","parseIdentifier","close","closeCharCode","allowEmpty","elts","first","parseAssignableListItemTypes","checkCommaAfterRest","decorators","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseBindingProperty","parsePrivateName","parsePropertyName","method","parseObjPropValue","parseMaybeDefault","param","_left","right","isValidLVal","isUnparenthesizedInAssign","binding","ObjectProperty","hasOwnProperty","call","checkLVal","in","checkClashes","strictModeChanged","hasParenthesizedAncestor","_expression$extra","checkIdentifier","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","child","concat","declareNameFromIdentifier","identifier","allowPattern","assert","x","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","AccessorCannotBeOptional","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TupleOptionalAfterType","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","tsIsVarianceAnnotations","isPossiblyLiteralEnum","computed","expressions","isUncomputedMemberExpressionChain","isValidAmbientConstInitializer","estree","isNumber","isNegativeNumber","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","superClass","parse","file","parseRegExpLiteral","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","_unused","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","raw","expressionValue","stmt","rawValue","initFunction","checkDeclaration","getObjectOrClassMethodParams","isValidDirective","_stmt$expression$extr","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","directives","d","body","pushClassMethod","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","parseFunctionBody","allowExpression","isMethod","inClassScope","funcNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","finishCallExpression","unfinished","optional","_node$arguments$","callee","attributes","toReferencedArguments","parseExport","exportStartLoc","exported","_declaration$decorato","declaration","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","jsx","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","count","desc","entity","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","parseExprAtom","jsxParseEmptyExpression","jsxParseSpreadChild","parseExpression","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","flow","flowPragma","shouldParseTypes","shouldParseEnums","matches","exec","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","returnType","typeAnnotation","BIND_FLAGS_FLOW_DECLARE_FN","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","bodyNode","parseImport","hasModuleExport","bodyElement","isEsModuleType","default","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatementLike","flowParseEnumDeclaration","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","SCOPE_FUNCTION","checkParams","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","isIteratorStart","_expr$extra","parseArrayLike","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","shouldParseDefaultImport","checkImportReflection","module","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseFunctionParams","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","_jsx","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","afterNext","typescript","tsParseInOutModifiers","tsParseModifiers","bind","allowedModifiers","disallowedModifiers","errorTemplate","tsParseConstModifier","tsParseInOutConstModifiers","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","modified","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsFillSignature","returnToken","signature","returnTokenRequired","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","paramsKey","returnTypeKey","firstParameter","tsParseTypeMember","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","checkType","isLabeled","labeled","chAfterWord","wordName","typeOrLabel","tsParseNonArrayType","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","parseMaybeUnary","nodeType","keywordTypeFromName","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsNextThenParseType","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","BIND_TS_ENUM","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","tsIsDeclarationStart","override","pp","parameter","isSimpleParameter","tsDisallowOptionalPattern","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartLoc","minPrec","isSatisfies","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","declarations","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","idx","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","parseClassAccessorProperty","declareClassPrivateMethodInScope","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","sawUnary","toAssignableParenthesizedExpression","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","parseMaybeDecoratorArguments","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","maybeTakeDecorators","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","v8intrinsic","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","placeholders","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","chStartsBindingIdentifier","verifyBreakContinue","isBreak","parseStatementOrSloppyAnnexBFunctionDeclaration","parseBlock","createNewLexicalScope","parseFunctionId","requireId","oldStrict","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","checkExport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","startIndex","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","lookaheadCh","parseModuleExpression","parseAsyncFunctionExpression","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","parseFunction","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","canBeReservedWord","isKeyword","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","ret","revertScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","StatementParser","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","babel7CompatTokens","interpreter","parseInterpreterDirective","finishedProgram","stmtToDirective","directiveLiteral","hasFollowingBindingAtom","endCh","chStartsBindingPattern","hasInLineFollowingBindingIdentifier","startsUsingForOf","parseModuleItem","parseStatementListItem","allowLabeledFunction","parseStatement","allowDeclaration","allowFunctionDeclaration","parseBreakContinueStatement","parseDebuggerStatement","parseDoWhileStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","decoratorsEnabledBeforeExport","maybeDecorators","classNode","exportNode","allowExport","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","startsWithUsing","isLetOrUsing","initNode","parseVar","isForIn","parseForIn","startsWithAsync","isForOf","isHangingDeclaration","discriminant","cases","cur","sawDefault","isCase","block","handler","clause","finalizer","statementStart","parsedNonDirective","await","isFor","hangingDeclaration","isDeclaration","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","SCOPE_CLASS","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","_node2$declaration","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","_declaration$extra","nodes","clonePlaceholder","cloneStringLiteral","surrogate","isJSONModuleImport","_node$assertions","nonDefaultNamedSpecifier","parseMaybeImportReflection","isImportReflection","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importSpecifier","Parser","opts","getOptions","pluginMap","pluginsMap","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","allowCallParenthesized","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","exports","_options","ast","moduleError","_defineProperty","obj","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","_toPropertyKey","hint","prim","Symbol","toPrimitive","TypeError","ExecutionContext","EnvironmentRecord","outer","OuterEnv","HasBinding","bindingMap","CreateMutableBinding","deletable","mutable","NormalCompletion","CreateImmutableBinding","InitializeBinding","initialized","SetMutableBinding","ReferenceError","GetBindingValue","DeclarativeEnvironment","FunctionEnvironment","SourceNode","for","ECMAScriptCode","Environment","IsConstructor","ReferenceRecord","Base","ReferenceName","Strict","CompletionRecord","Type","Value","Empty","collectBoundNames","root","names","collect","containsExpression","collectScopedDeclarations","nextOptions","IsPropertyReference","V","InitializeReferencedBinding","W","CopyDataProperties","excludedItems","getOwnPropertyNames","nextKey","ForDeclarationBindingInstantiation","forDeclaration","env","isConst","LoopContinues","completion","UpdateEmpty","GetValue","ToPropertyKey","GetV","P","PutValue","CreateListIteratorRecord","RequireObjectCoercible","GetIdentifierReference","ApplyStringOrNumericBinaryOperator","leftValue","rightValue","reservedObjects","WeakSet","Function","self","window","getGlobal","sanitize","allowedConstructors","URLSearchParams","WeakMap","cook","rootAst","codeSource","_hooks$beforeEvaluate3","rules","globalVariables","hooks","expressionOnly","rootEnv","rootContext","VariableEnvironment","LexicalEnvironment","executionContextStack","entries","TemplateMap","Evaluate","optionalChainRef","_hooks$beforeEvaluate","_hooks$beforeBranch","_hooks$beforeBranch2","beforeEvaluate","array","spreadValues","ThrowIfFunctionIsInvalid","OrdinaryFunctionCreate","getRunningContext","rightRef","funcName","thisValue","ref","func","skipped","EvaluateCall","ResolveBinding","_leftValue","baseValue","_result","propertyKey","EvaluatePropertyAccessWithExpressionKey","propertyNameString","EvaluatePropertyAccessWithIdentifierKey","constructExpr","argList","ArgumentListEvaluation","constructorName","Date","isAllowedConstructor","_constructorName","EvaluateNew","propName","EvaluateComputedPropertyName","_result2","chunks","_expr","tagRef","tagFunc","ApplyUnaryOperator","_lref","_rval","_rval2","DestructuringAssignmentEvaluation","lref","lval","rval","r","substr","ApplyStringOrNumericAssignment","oldEnv","blockEnv","BlockDeclarationInstantiation","blockValue","EvaluateStatementList","EvaluateBreakableStatement","stmtResult","DoWhileLoopEvaluation","lhsKind","uninitializedBoundNames","iterationKind","keyResult","runningContext","newEnv","exprRef","exprValue","_iterator","_key","EnumerateObjectProperties","ForInOfHeadEvaluation","iteratorRecord","destructuring","done","nextValue","lhsRef","iterationEnv","lhsName","BindingInitialization","status","return","innerResult","ForInOfBodyEvaluation","ForInOfLoopEvaluation","_node$init","ForBodyEvaluation","loopEnv","boundNames","dn","perIterationLets","bodyResult","ForLoopEvaluation","functionExpression","funcEnv","closure","InstantiateOrdinaryFunctionExpression","beforeBranch","v","oldValue","newValue","switchValue","_oldEnv","_blockEnv","R","defaultCaseIndex","findIndex","switchCase","hasDefaultCase","A","found","C","CaseClauseIsSelected","_R2","foundInB","B","_C","_R3","_C2","_R4","CaseBlockEvaluation","_R","_hooks$beforeEvaluate2","thrownValue","catchEnv","argName","CatchClauseEvaluation","F","_result3","declarator","_lhs2","_value","_rval3","WhileLoopEvaluation","increment","perIterationBindings","CreatePerIterationEnvironment","lastIterationEnv","thisIterationEnv","bn","lastValue","excludedNames","valueTarget","KeyedDestructuringAssignmentEvaluation","RestDestructuringAssignmentEvaluation","PropertyDestructuringAssignmentEvaluation","assignmentTarget","isObjectOrArray","_value2","_done","_nextValue","IteratorDestructuringAssignmentEvaluation","rhsValue","restProperty","IsConstantDeclaration","_fn","_fo","InstantiateFunctionObject","templateLiteral","memo","rawObj","freeze","GetTemplateObject","statements","s","sourceNode","_hooks$beforeCall","beforeCall","calleeContext","localEnv","PrepareForOrdinaryCall","formals","parameterNames","hasParameterExpressions","varDeclarations","varNames","functionNames","functionsToInitialize","_fn2","noVar","varEnv","paramName","IteratorBindingInitialization","_n","initialValue","lexEnv","lexDeclarations","_d","_fn3","_fo2","FunctionDeclarationInstantiation","EvaluateFunctionBody","OrdinaryCallEvaluateBody","CallFunction","environment","InitializeBoundName","RestBindingInitialization","KeyedBindingInitialization","PropertyBindingInitialization","restObj","_node","_value3","_A","_n2","_done2","_value4","bindingElement","_done3","_value5","_lhs3","_v","_done4","_value6","_v2","fo","AnalysisContext","AnalysisEnvironment","bindingSet","CreateBinding","precook","visitors","withParent","attemptToVisitGlobals","analysisContextStack","EvaluateChildren","parent","_hooks$beforeVisit","_hooks$beforeVisitUnk","beforeVisit","visit","_hooks$beforeVisitGlo","beforeVisitGlobal","_runningContext","BoundNamesInstantiation","lexicalBinding","_runningContext2","_oldEnv2","_lexicalBinding","_runningContext3","_oldEnv3","_env","_runningContext4","_oldEnv4","beforeVisitUnknown","console","warn","precookFunction","restOptions","Boolean","jsNodes","parseAsEstree","function","preevaluate","fixes","m","parseAsEstreeExpression","suffix","isEvaluable","shouldAllowRecursiveEvaluations"],"sourceRoot":""}